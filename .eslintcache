[{"E:\\MVP\\Projects\\charity\\src\\index.js":"1","E:\\MVP\\Projects\\charity\\src\\views\\Profile.js":"2","E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js":"3","E:\\MVP\\Projects\\charity\\src\\components\\features.jsx":"4","E:\\MVP\\Projects\\charity\\src\\components\\header.jsx":"5","E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx":"6","E:\\MVP\\Projects\\charity\\src\\components\\about.jsx":"7","E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx":"8","E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx":"9","E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx":"10","E:\\MVP\\Projects\\charity\\src\\views\\App.js":"11","E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js":"12","E:\\MVP\\Projects\\charity\\src\\views\\Login.js":"13","E:\\MVP\\Projects\\charity\\src\\views\\Register.js":"14","E:\\MVP\\Projects\\charity\\src\\views\\Search.js":"15","E:\\MVP\\Projects\\charity\\src\\views\\Event.js":"16","E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js":"17","E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js":"18","E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js":"19","E:\\MVP\\Projects\\charity\\src\\Utils\\global.js":"20","E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx":"21","E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx":"22"},{"size":516,"mtime":1613737899088,"results":"23","hashOfConfig":"24"},{"size":3796,"mtime":1613577995626,"results":"25","hashOfConfig":"24"},{"size":1473,"mtime":1613731978341,"results":"26","hashOfConfig":"24"},{"size":894,"mtime":1612469607259,"results":"27","hashOfConfig":"24"},{"size":997,"mtime":1612223740203,"results":"28","hashOfConfig":"24"},{"size":3123,"mtime":1613735329614,"results":"29","hashOfConfig":"24"},{"size":1283,"mtime":1612224217342,"results":"30","hashOfConfig":"24"},{"size":7864,"mtime":1612224282662,"results":"31","hashOfConfig":"24"},{"size":1040,"mtime":1612224345032,"results":"32","hashOfConfig":"24"},{"size":1528,"mtime":1613670982598,"results":"33","hashOfConfig":"24"},{"size":911,"mtime":1613745235838,"results":"34","hashOfConfig":"24"},{"size":91,"mtime":1612354907545,"results":"35","hashOfConfig":"24"},{"size":6277,"mtime":1613746447128,"results":"36","hashOfConfig":"24"},{"size":10129,"mtime":1613745163043,"results":"37","hashOfConfig":"24"},{"size":4425,"mtime":1613681075572,"results":"38","hashOfConfig":"24"},{"size":1331,"mtime":1613680595426,"results":"39","hashOfConfig":"24"},{"size":4999,"mtime":1613578588179,"results":"40","hashOfConfig":"24"},{"size":4661,"mtime":1613656139009,"results":"41","hashOfConfig":"24"},{"size":268,"mtime":1613562968924,"results":"42","hashOfConfig":"24"},{"size":62,"mtime":1613522665267,"results":"43","hashOfConfig":"24"},{"size":283,"mtime":1613667065520,"results":"44","hashOfConfig":"24"},{"size":7905,"mtime":1613687496471,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1s3xdrw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"E:\\MVP\\Projects\\charity\\src\\index.js",[],["96","97"],"E:\\MVP\\Projects\\charity\\src\\views\\Profile.js",[],"E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js",["98"],"import React, { useMemo, useState } from \"react\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { UserContext } from \"../context/UserContext\";\r\nimport App from \"../views/App\";\r\nimport Profile from \"../views/Profile\";\r\nimport Login from \"../views/Login\";\r\nimport Register from \"../views/Register\";\r\nimport Navigation from \"../components/navigation\";\r\nimport Search from \"../views/Search\";\r\nimport Event from \"../views/Event\";\r\nimport ChangeInfo from \"../views/InfoChange\";\r\nimport NewEvent from \"../views/NewEvent\";\r\n\r\nfunction Routes() {\r\n   const [user, setUser] = useState(null);\r\n   const providerUser = useMemo(() => ({ user, setUser }), [user, setUser]);\r\n   return (\r\n      <>\r\n         <Router>\r\n            <UserContext.Provider value={providerUser}>\r\n               {/*  <Route component={Navigation} /> */}\r\n               <Route exact path=\"/\" component={App} />\r\n               <Route exact path=\"/profile\" component={Profile} />\r\n               <Route exact path=\"/login\" component={Login} />\r\n               <Route exact path=\"/Register\" component={Register} />\r\n               <Route exact path=\"/Search\" component={Search} />\r\n               <Route exact path=\"/Event\" component={Event} />\r\n               <Route exact path=\"/setInfo\" component={ChangeInfo} />\r\n               <Route exact path=\"/newEvent\" component={NewEvent} />\r\n            </UserContext.Provider>\r\n         </Router>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Routes;\r\n","E:\\MVP\\Projects\\charity\\src\\components\\features.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\header.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx",["99","100","101","102","103"],"import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBContainer, MDBIcon } from \"mdbreact\";\nimport Cookies from 'js-cookie';\n\nclass NavbarPage extends Component {\n   constructor(props) {\n    super(props);\n     this.state = {\n  collapseID: \"\"\n  };\n    this.logoutHandler = this.logoutHandler.bind(this);\n  }\n\n logoutHandler = async (e) =>{\n   // e.preventDefault();\n    //will call login Util\n    console.log(e);\n    Cookies.remove('session');\n\n\n  } \n\ntoggleCollapse = collapseID => () =>\n  this.setState(prevState => ({\n  collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n}));\n\nrender() {\n  return (\n      <MDBNavbar color=\"info-color\" dark expand=\"md\" style ={{marginBottom:\"0\"}} >\n        <MDBNavbarBrand href=\"/\"> \n         <img src=\"https://mdbootstrap.com/img/logo/mdb-transparent.png\" height=\"30\" alt=\"\" />\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={this.toggleCollapse(\"navbarCollapse3\")} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.collapseID} navbar>\n          <MDBNavbarNav right>\n             {Cookies.getJSON('session')?\n             \n             (<>\n\n               {Cookies.getJSON('session').type === \"Organization\"?(\n              <MDBNavItem style ={{fontSize:\"18px\"}}>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/newEvent\">\n                <MDBIcon icon=\"plus\" className=\"mr-1\" />عمل جديد</MDBNavLink>\n            </MDBNavItem>\n              ):(<></>)}\n              <MDBNavItem style ={{fontSize:\"18px\"}}>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/search\">\n                <MDBIcon icon=\"search\" className=\"mr-1\" />بحث</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem style ={{fontSize:\"18px\"}}>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/profile\">\n                <MDBIcon icon=\"sign-in-alt\" className=\"mr-1\" />{Cookies.getJSON('session').name}</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem style ={{fontSize:\"18px\"}}>  \n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/\" onClick={this.logoutHandler}>\n                <MDBIcon icon=\"sign-out-alt\" className=\"mr-1\" />تسجيل الخروج</MDBNavLink>\n            </MDBNavItem>\n\n\n\n             \n             </>)\n             \n             :(<>\n               <MDBNavItem style ={{fontSize:\"18px\"}}>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/login\">\n                <MDBIcon icon=\"sign-in-alt\" className=\"mr-1\" />تسجيل الدخول</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem style ={{fontSize:\"18px\"}}>  \n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/register\">\n                <MDBIcon icon=\"user-plus\" className=\"mr-1\" />انضم لنا</MDBNavLink>\n            </MDBNavItem>\n             \n             </>)}\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n      \n\n    );\n  }\n}\n\nexport default NavbarPage;","E:\\MVP\\Projects\\charity\\src\\components\\about.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx",[],"E:\\MVP\\Projects\\charity\\src\\views\\App.js",["104","105"],"//import \"../styles/App.css\";\nimport React, { Component } from \"react\";\nimport Header from \"../components/header\";\nimport Features from \"../components/features\";\nimport About from \"../components/about\";\nimport Gallery from \"../components/gallery\";\nimport Team from \"../components/Team\";\nimport Contact from \"../components/contact\";\nimport JsonData from \"../data/data.json\";\n\nclass App extends Component {\n   state = {\n      landingPageData: {},\n   };\n   getlandingPageData() {\n      this.setState({ landingPageData: JsonData });\n   }\n\n   componentDidMount() {\n      this.getlandingPageData();\n   }\n   render() {\n      return (\n         <div>\n            <Header data={this.state.landingPageData.Header} />\n            <About data={this.state.landingPageData.About} />\n            <Gallery />\n            <Contact data={this.state.landingPageData.Contact} />\n         </div>\n      );\n   }\n}\n\nexport default App;\n","E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Login.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Register.js",["106","107","108","109"],"import React, { useState, useEffect } from \"react\";\r\nimport { getTags } from \"../Utils/getTagsUtil\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Contact from \"../components/contact\";\r\nimport Banner from \"../components/banner\";\r\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport JsonData from \"../data/data.json\";\r\nimport SVG from \"../components/svg\";\r\nimport \"../styles/register.css\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nexport default function Register() {\r\n   const [userReg, setUserReg] = useState(0);\r\n   const [volunteer, setVolunteer] = useState(true);\r\n   const [tags, setTags] = useState([]);\r\n   const [tag1, setTag1] = useState([false, false, false, false, false]);\r\n   const [usedTags] = useState([]);\r\n   const [img, setImg] = useState(\"\");\r\n   const [fullName, setFullName] = useState(\"\");\r\n   const [NID, setNID] = useState(\"\");\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [mobile, setMobile] = useState(\"\");\r\n   const [mobile1, setmobile1] = useState(\"\");\r\n\r\n   const getBase64 = async (e) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n         setImg(reader.result);\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n   };\r\n\r\n   const switchVolunteer = () => {\r\n      setVolunteer(!volunteer);\r\n   };\r\n   const onChangeFullname = (event) => {\r\n      setFullName(event.target.value);\r\n   };\r\n   const onChangeEmail = (event) => {\r\n      setEmail(event.target.value);\r\n   };\r\n   const onChangePassword = (event) => {\r\n      setPassword(event.target.value);\r\n   };\r\n   const onChangeNID = (event) => {\r\n      setNID(event.target.value);\r\n   };\r\n   const onChangeMobile = (event) => {\r\n      setMobile(event.target.value);\r\n   };\r\n   const onChangeMobile1 = (event) => {\r\n      setmobile1(event.target.value);\r\n   };\r\n   const registerVolunteer = async (e) => {\r\n      let i = 0;\r\n      for (let tag in tag1) {\r\n         if (tag1[tag] === true) {\r\n            console.log(tag);\r\n            usedTags.push(tags[i][\"id\"]);\r\n         }\r\n         i++;\r\n      }\r\n      const newEntity = {\r\n         name: fullName,\r\n         email: email,\r\n         password: password,\r\n         mobile: mobile,\r\n         mobile1: mobile1,\r\n         NID: NID,\r\n         img: img,\r\n         tags: usedTags,\r\n      };\r\n      console.log(newEntity);\r\n      let requestURL;\r\n      volunteer\r\n         ? (requestURL = serverURL + \"/volunteer/store\")\r\n         : (requestURL = serverURL + \"/organization/store\");\r\n      axios\r\n         .post(requestURL, newEntity)\r\n         .then(function (response) {\r\n            alert(\"registered Successfully\");\r\n            window.location.href = \"/\";\r\n            console.log(response);\r\n         })\r\n         .catch(function (error) {\r\n            alert(\"Failed\");\r\n            console.log(error);\r\n         });\r\n   };\r\n\r\n   const switchActivity = (e, id) => {\r\n      e.preventDefault();\r\n      setTag1((prevState) => prevState.map((item, idx) => (idx === id ? !item : item)));\r\n   };\r\n\r\n   /*    const registerOrganization = () => {\r\n      const newOrganization = {\r\n         name: fullName,\r\n         email: email,\r\n         password: password,\r\n         mobile: mobile,\r\n         mobile2: mobile1,\r\n         img: img,\r\n         tags: usedTags,\r\n      };\r\n      //console.log(newVolunteer);\r\n      axios\r\n         .post(serverURL + \"/organization/store\", newOrganization)\r\n         .then(function (response) {\r\n            alert(\"registered Successfully\");\r\n            //window.open(\"/\");\r\n            console.log(response);\r\n         })\r\n         .catch(function (error) {\r\n            alert(\"Failed\");\r\n            console.log(error);\r\n         });\r\n   }; */\r\n   useEffect(() => {\r\n      getTags().then((tagList) => {\r\n         setTags(tagList);\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         <Banner data={{ header: \"تسجيل حساب جديد\" }} />\r\n         <SVG />\r\n         <div className=\"custom-content-register\">\r\n            <div className=\"custom-container-register col-8\">\r\n               <MDBContainer>\r\n                  <MDBRow>\r\n                     <MDBCol md=\"12\" className=\"d-flex justify-content-center\">\r\n                        <form>\r\n                           <p className=\"text-center mb-4 headerText\">انضم لنا</p>\r\n                           <Button\r\n                              size=\"mini\"\r\n                              toggle\r\n                              type=\"button\"\r\n                              active={true}\r\n                              onClick={switchVolunteer}>\r\n                              {volunteer ? \"Volunteer\" : \"Organization\"}\r\n                           </Button>\r\n                           <div className=\"\">\r\n                              <MDBInput\r\n                                 label=\"الاسم بالكامل\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"user\"\r\n                                 iconSize\r\n                                 group\r\n                                 onChange={onChangeFullname}\r\n                                 type=\"text\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"البريد الالكتروني\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"envelope\"\r\n                                 group\r\n                                 onChange={onChangeEmail}\r\n                                 type=\"email\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"كلمه السر\"\r\n                                 icon=\"lock\"\r\n                                 className=\"textDirection\"\r\n                                 onChange={onChangePassword}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"password\"\r\n                                 validate\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"رفم الهاتف\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"mobile-alt\"\r\n                                 onChange={onChangeMobile}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"text\"\r\n                                 validate\r\n                              />\r\n                              {volunteer ? (\r\n                                 <MDBInput\r\n                                    label=\"الرقم القومي\"\r\n                                    icon=\"address-card\"\r\n                                    className=\"textDirection\"\r\n                                    group\r\n                                    onChange={onChangeNID}\r\n                                    type=\"text\"\r\n                                    validate\r\n                                    size=\"lg\"\r\n                                    error=\"wrong\"\r\n                                    success=\"right\"\r\n                                 />\r\n                              ) : (\r\n                                 <MDBInput\r\n                                    label=\"رفم هاتف اخر\"\r\n                                    className=\"textDirection\"\r\n                                    icon=\"mobile-alt\"\r\n                                    onChange={onChangeMobile1}\r\n                                    group\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    validate\r\n                                 />\r\n                              )}\r\n\r\n                              <input\r\n                                 type=\"file\"\r\n                                 id=\"img\"\r\n                                 onChange={getBase64}\r\n                                 name=\"img\"\r\n                                 accept=\"image/*\"\r\n                                 className=\"image-button image-uploader\"\r\n                                 required\r\n                              />\r\n                              <div className=\"registerTagList mt-4 mb-4\">\r\n                                 {tags.map((tag) => (\r\n                                    <Button\r\n                                       key={tag.id}\r\n                                       size=\"mini\"\r\n                                       toggle\r\n                                       active={tag1[tag.id - 1]}\r\n                                       onClick={(e) => switchActivity(e, tag.id - 1)}>\r\n                                       {tag.name}\r\n                                    </Button>\r\n                                 ))}\r\n                              </div>\r\n                           </div>\r\n                           <div className=\"text-center \">\r\n                              <MDBBtn\r\n                                 color=\"primary\"\r\n                                 className=\"registerBtn\"\r\n                                 type=\"submit\"\r\n                                 onClick={registerVolunteer}>\r\n                                 انضم لنا\r\n                              </MDBBtn>\r\n                           </div>\r\n                        </form>\r\n                     </MDBCol>\r\n                  </MDBRow>\r\n               </MDBContainer>\r\n            </div>\r\n         </div>\r\n         <Contact data={JsonData} />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\Search.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Event.js",["110"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport \"../styles/eventPage.css\";\r\nimport Cookies from \"js-cookie\";\r\nexport default function Event(props) {\r\n   const [eventDetails, seteventDetails] = useState([]);\r\n   //console.log(props);\r\n\r\n   Cookies.getJSON(\"event\")\r\n      ? console.log(\"set\")\r\n      : Cookies.set(\"event\", { event: props.location.query.event });\r\n\r\n   useEffect(() => {\r\n      return () => {\r\n         Cookies.remove(\"event\");\r\n      };\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n\r\n      axios\r\n         .get(serverURL + `/jobs/show/${Cookies.getJSON(\"event\").event}`, config)\r\n         .then(function (response) {\r\n            console.log(\"id is\");\r\n            console.log(Cookies.getJSON(\"event\").event);\r\n            seteventDetails(response.data.data);\r\n            console.log(response.data.data);\r\n         })\r\n         .catch(console.log);\r\n   }, []);\r\n   //{Cookies.getJSON(\"event\").event}\r\n\r\n   return Cookies.getJSON(\"event\") ? (\r\n      <div className=\"eventMainContent\">\r\n         <div className=\"eventDescCard\"></div>\r\n      </div>\r\n   ) : (\r\n      <h1>wrong page</h1>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js",[],"E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js",[],"E:\\MVP\\Projects\\charity\\src\\Utils\\global.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":8,"column":8,"nodeType":"117","messageId":"118","endLine":8,"endColumn":18},{"ruleId":"115","severity":1,"message":"119","line":2,"column":106,"nodeType":"117","messageId":"118","endLine":2,"endColumn":117},{"ruleId":"115","severity":1,"message":"120","line":3,"column":1,"nodeType":"117","messageId":"118","endLine":3,"endColumn":18},{"ruleId":"115","severity":1,"message":"121","line":3,"column":20,"nodeType":"117","messageId":"118","endLine":3,"endColumn":35},{"ruleId":"115","severity":1,"message":"122","line":3,"column":37,"nodeType":"117","messageId":"118","endLine":3,"endColumn":52},{"ruleId":"115","severity":1,"message":"123","line":3,"column":54,"nodeType":"117","messageId":"118","endLine":3,"endColumn":66},{"ruleId":"115","severity":1,"message":"124","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":16},{"ruleId":"115","severity":1,"message":"125","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":12},{"ruleId":"115","severity":1,"message":"126","line":9,"column":18,"nodeType":"117","messageId":"118","endLine":9,"endColumn":25},{"ruleId":"115","severity":1,"message":"127","line":14,"column":10,"nodeType":"117","messageId":"118","endLine":14,"endColumn":13},{"ruleId":"115","severity":1,"message":"128","line":17,"column":11,"nodeType":"117","messageId":"118","endLine":17,"endColumn":18},{"ruleId":"115","severity":1,"message":"129","line":17,"column":20,"nodeType":"117","messageId":"118","endLine":17,"endColumn":30},{"ruleId":"115","severity":1,"message":"130","line":7,"column":11,"nodeType":"117","messageId":"118","endLine":7,"endColumn":23},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","'MDBDropdown' is defined but never used.","'MDBDropdownToggle' is defined but never used.","'MDBDropdownMenu' is defined but never used.","'MDBDropdownItem' is defined but never used.","'MDBContainer' is defined but never used.","'Features' is defined but never used.","'Team' is defined but never used.","'MDBIcon' is defined but never used.","'act' is defined but never used.","'userReg' is assigned a value but never used.","'setUserReg' is assigned a value but never used.","'eventDetails' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]