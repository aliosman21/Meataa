[{"E:\\MVP\\Projects\\charity\\src\\index.js":"1","E:\\MVP\\Projects\\charity\\src\\views\\Profile.js":"2","E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js":"3","E:\\MVP\\Projects\\charity\\src\\components\\features.jsx":"4","E:\\MVP\\Projects\\charity\\src\\components\\header.jsx":"5","E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx":"6","E:\\MVP\\Projects\\charity\\src\\components\\about.jsx":"7","E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx":"8","E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx":"9","E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx":"10","E:\\MVP\\Projects\\charity\\src\\views\\App.js":"11","E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js":"12","E:\\MVP\\Projects\\charity\\src\\views\\Login.js":"13","E:\\MVP\\Projects\\charity\\src\\views\\Register.js":"14","E:\\MVP\\Projects\\charity\\src\\views\\Search.js":"15","E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js":"16","E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js":"17","E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js":"18","E:\\MVP\\Projects\\charity\\src\\Utils\\global.js":"19","E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx":"20","E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx":"21","E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx":"22","E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js":"23","E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js":"24","E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js":"25","E:\\MVP\\Projects\\charity\\src\\views\\addTags.js":"26","E:\\MVP\\Projects\\charity\\src\\components\\VolunteerDetails.jsx":"27","E:\\MVP\\Projects\\charity\\src\\components\\footer.jsx":"28"},{"size":516,"mtime":1613737899088,"results":"29","hashOfConfig":"30"},{"size":3940,"mtime":1614118594704,"results":"31","hashOfConfig":"30"},{"size":1846,"mtime":1614119541051,"results":"32","hashOfConfig":"30"},{"size":894,"mtime":1612469607259,"results":"33","hashOfConfig":"30"},{"size":665,"mtime":1614184656811,"results":"34","hashOfConfig":"30"},{"size":4098,"mtime":1614265998913,"results":"35","hashOfConfig":"30"},{"size":1313,"mtime":1614266488557,"results":"36","hashOfConfig":"30"},{"size":7797,"mtime":1614267289898,"results":"37","hashOfConfig":"30"},{"size":1040,"mtime":1612224345032,"results":"38","hashOfConfig":"30"},{"size":1528,"mtime":1613670982598,"results":"39","hashOfConfig":"30"},{"size":985,"mtime":1614259789591,"results":"40","hashOfConfig":"30"},{"size":91,"mtime":1612354907545,"results":"41","hashOfConfig":"30"},{"size":4590,"mtime":1614268428271,"results":"42","hashOfConfig":"30"},{"size":9611,"mtime":1614266938017,"results":"43","hashOfConfig":"30"},{"size":5883,"mtime":1614263741463,"results":"44","hashOfConfig":"30"},{"size":9837,"mtime":1614117352279,"results":"45","hashOfConfig":"30"},{"size":9289,"mtime":1614185175666,"results":"46","hashOfConfig":"30"},{"size":268,"mtime":1613562968924,"results":"47","hashOfConfig":"30"},{"size":62,"mtime":1613522665267,"results":"48","hashOfConfig":"30"},{"size":283,"mtime":1613667065520,"results":"49","hashOfConfig":"30"},{"size":7905,"mtime":1613747169478,"results":"50","hashOfConfig":"30"},{"size":2506,"mtime":1614187196718,"results":"51","hashOfConfig":"30"},{"size":3748,"mtime":1614261470631,"results":"52","hashOfConfig":"30"},{"size":8221,"mtime":1614186760456,"results":"53","hashOfConfig":"30"},{"size":2132,"mtime":1614118436255,"results":"54","hashOfConfig":"30"},{"size":2744,"mtime":1614120176547,"results":"55","hashOfConfig":"30"},{"size":1437,"mtime":1614186710968,"results":"56","hashOfConfig":"30"},{"size":1674,"mtime":1614266798606,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1s3xdrw",{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\MVP\\Projects\\charity\\src\\index.js",[],["123","124"],"E:\\MVP\\Projects\\charity\\src\\views\\Profile.js",["125","126","127","128","129","130","131"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/profile.css\";\r\nimport Banner from \"../components/banner\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MDBDataTableV5, MDBBtn, MDBRating, MDBBadge, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport default function Profile() {\r\n   const [isFlipped, setIsFlipped] = useState(false);\r\n   const getDataFromCookie = () => {\r\n      let profileData = Cookies.getJSON(\"session\");\r\n      let data = {\r\n         name: profileData.name,\r\n         ssn: profileData.NID,\r\n         mobile: profileData.mobile,\r\n         pic: serverURL + profileData.img,\r\n         email: profileData.email,\r\n         mobile2: profileData.mobile2,\r\n      };\r\n      return data;\r\n   };\r\n\r\n   const handleFlip = (e) => {\r\n      e.preventDefault();\r\n      setIsFlipped(!isFlipped);\r\n   };\r\n\r\n   useEffect(() => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      if (!isFlipped) {\r\n         axios\r\n            .get(serverURL + \"/userdata\", config)\r\n            .then(function (response) {})\r\n            .catch(console.log);\r\n      }\r\n   }, [isFlipped]);\r\n\r\n   const history = useHistory();\r\n   const ChangeInfo = () => history.push(\"/setInfo\");\r\n\r\n   const [data] = useState(() => getDataFromCookie());\r\n\r\n   return Cookies.getJSON(\"session\") ? (\r\n      <>\r\n         <Banner data={{ header: \"الحساب الشخصي\" }} />\r\n         <div className=\"custom-content-profile\">\r\n            <div></div>\r\n            <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n               <div className=\"FrontCard\">\r\n                  <div className=\"information\">\r\n                     <p className=\"profileFont\"> {data.name} :الاسم</p>\r\n                     <p className=\"profileFont\">{data.email} :البريد الالكتروني</p>\r\n                     <p className=\"profileFont\">رقم الهاتف:{data.mobile}</p>\r\n                     {Cookies.getJSON(\"session\").type == \"Volunteer\" ? (\r\n                        <p className=\"profileFont\">الرقم القومي:{data.ssn}</p>\r\n                     ) : (\r\n                        <p className=\"profileFont\">رقم اخر:{data.mobile}</p>\r\n                     )}\r\n                  </div>\r\n                  <div className=\"imageHolder\">\r\n                     <img src={data.pic} alt=\"profile\" className=\"profileImage\" />\r\n                  </div>\r\n                  <div className=\"editButtonHolder\">\r\n                     <Button content=\"تحديث البيانات\" secondary onClick={ChangeInfo} />\r\n                  </div>\r\n                  {Cookies.getJSON(\"session\").type == \"Volunteer\" ? (\r\n                     <div className=\"flipButtonHolder\">\r\n                        <Button content=\"الأعمال\" primary onClick={handleFlip} />\r\n                     </div>\r\n                  ) : (\r\n                     <></>\r\n                  )}\r\n               </div>\r\n\r\n               <div className=\"BackCard\">\r\n                  <MDBNavLink\r\n                     className=\"waves-effect waves-light navShortner\"\r\n                     to={{ pathname: `#` }}>\r\n                     <Button content=\"المعلومات الشخصيه\" primary onClick={handleFlip} />\r\n                  </MDBNavLink>\r\n                  <MDBNavLink\r\n                     className=\"waves-effect waves-light navShortner\"\r\n                     to={{ pathname: `/allJobs` }}>\r\n                     <Button content=\"عرض كل الأعمال\" primary />\r\n                  </MDBNavLink>\r\n               </div>\r\n            </ReactCardFlip>\r\n         </div>\r\n      </>\r\n   ) : (\r\n      //404 page\r\n      <div></div>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\features.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\header.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx",["132","133","134","135","136"],"E:\\MVP\\Projects\\charity\\src\\components\\about.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx",[],"E:\\MVP\\Projects\\charity\\src\\views\\App.js",["137","138","139"],"E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Login.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Register.js",["140","141","142"],"E:\\MVP\\Projects\\charity\\src\\views\\Search.js",["143","144","145","146","147","148","149"],"E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js",["150","151","152","153"],"import React, { useState, useEffect } from \"react\";\r\nimport { getTags } from \"../Utils/getTagsUtil\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Contact from \"../components/contact\";\r\nimport Banner from \"../components/banner\";\r\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport JsonData from \"../data/data.json\";\r\nimport \"../styles/register.css\";\r\n\r\nexport default function InfoChange() {\r\n   const [tags, setTags] = useState([]);\r\n   const [tag1, setTag1] = useState([]);\r\n   const [usedTags] = useState([]);\r\n   const [img, setImg] = useState(\"\");\r\n   const [fullName, setFullName] = useState(Cookies.getJSON(\"session\").name);\r\n   const [NID, setNID] = useState(Cookies.getJSON(\"session\").NID);\r\n   const [email, setEmail] = useState(Cookies.getJSON(\"session\").email);\r\n   const [password, setPassword] = useState(\"\");\r\n   const [mobile, setMobile] = useState(Cookies.getJSON(\"session\").mobile);\r\n   const [mobile1, setMobile1] = useState(Cookies.getJSON(\"session\").mobile1);\r\n\r\n   const getBase64 = async (e) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n         setImg(reader.result);\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n   };\r\n\r\n   const onChangeFullname = (event) => {\r\n      setFullName(event.target.value);\r\n   };\r\n   const onChangeEmail = (event) => {\r\n      setEmail(event.target.value);\r\n   };\r\n   const onChangePassword = (event) => {\r\n      setPassword(event.target.value);\r\n   };\r\n   const onChangeNID = (event) => {\r\n      setNID(event.target.value);\r\n   };\r\n   const onChangeMobile = (event) => {\r\n      setMobile(event.target.value);\r\n   };\r\n   const onChangeMobile1 = (event) => {\r\n      setMobile1(event.target.value);\r\n   };\r\n   const editUserData = async (e) => {\r\n      e.preventDefault();\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      let i = 0;\r\n      for (let tag in tag1) {\r\n         if (tag1[tag] === true) {\r\n            console.log(tag);\r\n            usedTags.push(tags[i][\"id\"]);\r\n         }\r\n         i++;\r\n      }\r\n      const newEntity = {\r\n         name: fullName,\r\n         email: email,\r\n         password: password,\r\n         mobile: mobile,\r\n         mobile2: mobile1,\r\n         NID: NID,\r\n         img: img,\r\n         tags: usedTags,\r\n      };\r\n      console.log(newEntity);\r\n      let requestURL;\r\n      Cookies.getJSON(\"session\").type == \"Volunteer\"\r\n         ? (requestURL = serverURL + \"/volunteer/update\")\r\n         : (requestURL = serverURL + \"/organization/update\");\r\n      if (fullName && email && password && mobile && usedTags && (NID || mobile1)) {\r\n         axios\r\n            .post(requestURL, newEntity, config)\r\n            .then(function (response) {\r\n               alert(\"تم التعديل بنجاح برجاء تسجيل الدخول مره اخري\");\r\n               Cookies.remove(\"session\");\r\n               window.location.href = \"/\";\r\n               console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n               alert(\"حدث خطأ ما\");\r\n               console.log(error);\r\n            });\r\n      } else {\r\n         alert(\"ادخل بيانات صحيحه\");\r\n      }\r\n   };\r\n\r\n   const switchActivity = (e, id) => {\r\n      e.preventDefault();\r\n      setTag1((prevState) => prevState.map((item, idx) => (idx === id ? !item : item)));\r\n   };\r\n   useEffect(() => {\r\n      getTags().then((tagList) => {\r\n         tag1.length = tagList.length; // set array size\r\n         tag1.fill(false);\r\n         setTags(tagList);\r\n      });\r\n      console.log(Cookies.getJSON(\"session\"));\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         <Banner data={{ header: \"تعديل البيانات\" }} />\r\n         <div className=\"custom-content-register\">\r\n            <div className=\"custom-container-register\">\r\n               <MDBContainer>\r\n                  <MDBRow>\r\n                     <MDBCol md=\"12\" className=\"d-flex justify-content-center\">\r\n                        <form>\r\n                           <p className=\"text-center mb-4 mt-4 headerText\">انضم لنا</p>\r\n                           <div className=\"\">\r\n                              <MDBInput\r\n                                 label=\"الاسم بالكامل\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"user\"\r\n                                 iconSize\r\n                                 group\r\n                                 value={fullName}\r\n                                 onChange={onChangeFullname}\r\n                                 type=\"text\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"البريد الالكتروني\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"envelope\"\r\n                                 group\r\n                                 onChange={onChangeEmail}\r\n                                 value={email}\r\n                                 type=\"email\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"كلمه السر\"\r\n                                 icon=\"lock\"\r\n                                 className=\"textDirection\"\r\n                                 onChange={onChangePassword}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"password\"\r\n                                 validate\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"رفم الهاتف\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"mobile-alt\"\r\n                                 onChange={onChangeMobile}\r\n                                 value={mobile}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"text\"\r\n                                 validate\r\n                              />\r\n                              {Cookies.getJSON(\"session\").type == \"Volunteer\" ? (\r\n                                 <MDBInput\r\n                                    label=\"الرقم القومي\"\r\n                                    icon=\"address-card\"\r\n                                    className=\"textDirection\"\r\n                                    group\r\n                                    onChange={onChangeNID}\r\n                                    type=\"text\"\r\n                                    value={NID}\r\n                                    validate\r\n                                    size=\"lg\"\r\n                                    error=\"wrong\"\r\n                                    success=\"right\"\r\n                                 />\r\n                              ) : (\r\n                                 <MDBInput\r\n                                    label=\"رفم هاتف اخر\"\r\n                                    className=\"textDirection\"\r\n                                    icon=\"mobile-alt\"\r\n                                    onChange={onChangeMobile1}\r\n                                    value={mobile1}\r\n                                    group\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    validate\r\n                                 />\r\n                              )}\r\n\r\n                              <input\r\n                                 type=\"file\"\r\n                                 id=\"img\"\r\n                                 onChange={getBase64}\r\n                                 name=\"img\"\r\n                                 accept=\"image/*\"\r\n                                 className=\"image-button image-uploader\"\r\n                              />\r\n                              <div className=\"registerTagList mt-4 mb-4\">\r\n                                 {tags.map((tag) => (\r\n                                    <Button\r\n                                       key={tag.id}\r\n                                       size=\"mini\"\r\n                                       toggle\r\n                                       active={tag1[tag.id - 1]}\r\n                                       onClick={(e) => switchActivity(e, tag.id - 1)}>\r\n                                       {tag.name}\r\n                                    </Button>\r\n                                 ))}\r\n                              </div>\r\n                           </div>\r\n                           <div className=\"text-center \">\r\n                              <MDBBtn\r\n                                 color=\"green\"\r\n                                 className=\"registerBtn\"\r\n                                 type=\"submit\"\r\n                                 onClick={editUserData}>\r\n                                 تعديل\r\n                              </MDBBtn>\r\n                           </div>\r\n                        </form>\r\n                     </MDBCol>\r\n                  </MDBRow>\r\n               </MDBContainer>\r\n            </div>\r\n         </div>\r\n         <Contact data={JsonData} />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js",["154","155","156"],"import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { getTags } from \"../Utils/getTagsUtil\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport { MDBJumbotron, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBInput } from \"mdbreact\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\nimport { Select } from \"semantic-ui-react\";\r\nimport \"../styles/newEvent.css\";\r\n\r\nexport default function Profile() {\r\n   const [tags, setTags] = useState([]);\r\n   const [cities, setCities] = useState([]);\r\n   const [img, setImg] = useState(\"\");\r\n   const [usedTag, setUsedTag] = useState(\"\");\r\n   const [usedCity, setUsedCity] = useState(\"\");\r\n   const [title, setTitle] = useState(\"\");\r\n   const [description, setDescription] = useState(\"\");\r\n   const [endDate, setEndDate] = useState(\"\");\r\n   const [endDateReg, setEndDateReg] = useState(\"\");\r\n\r\n   const onChangeDescription = (event) => {\r\n      setDescription(event.target.value);\r\n   };\r\n   const onChangeTitle = (event) => {\r\n      setTitle(event.target.value);\r\n   };\r\n   const onChangeEndDate = (event, data) => {\r\n      let endingDate = new Date(data.value).toISOString().slice(0, 10);\r\n      setEndDate(endingDate);\r\n   };\r\n   const onChangeEndDateReg = (event, data) => {\r\n      let endingDate = new Date(data.value).toISOString().slice(0, 10);\r\n      console.log(endingDate);\r\n      setEndDate(setEndDateReg);\r\n   };\r\n   const onChangeCity = (e, data) => {\r\n      //console.log(data);\r\n      data.options.forEach((city) => {\r\n         if (data.value == city.value) {\r\n            setUsedCity(city.key);\r\n         }\r\n      });\r\n      console.log(usedCity);\r\n   };\r\n   const onChangeTag = (e, data) => {\r\n      //console.log(data);\r\n      data.options.forEach((tag) => {\r\n         //console.log(tag);\r\n         if (data.value == tag.value) {\r\n            setUsedTag(tag.key);\r\n         }\r\n      });\r\n   };\r\n   useEffect(() => {\r\n      getTags().then((tagList) => {\r\n         setTags(tagList);\r\n      });\r\n      axios\r\n         .get(serverURL + \"/cities/list\")\r\n         .then(function (response) {\r\n            //console.log(response.data.message);\r\n            setCities(response.data.message);\r\n         })\r\n         .catch(console.log);\r\n   }, []);\r\n   useEffect(() => {\r\n      //console.log(tags);\r\n      cities.forEach((city) => {\r\n         Object.defineProperty(city, \"key\", Object.getOwnPropertyDescriptor(city, \"id\"));\r\n         delete city[\"id\"];\r\n         Object.defineProperty(city, \"text\", Object.getOwnPropertyDescriptor(city, \"name\"));\r\n         delete city[\"name\"];\r\n         city.value = city[\"text\"];\r\n      });\r\n      // console.log(tags);\r\n   }, [cities]);\r\n   useEffect(() => {\r\n      //console.log(tags);\r\n      tags.forEach((element) => {\r\n         Object.defineProperty(element, \"key\", Object.getOwnPropertyDescriptor(element, \"id\"));\r\n         delete element[\"id\"];\r\n         Object.defineProperty(element, \"text\", Object.getOwnPropertyDescriptor(element, \"name\"));\r\n         delete element[\"name\"];\r\n         element.value = element[\"text\"];\r\n      });\r\n      // console.log(tags);\r\n   }, [tags]);\r\n\r\n   const handleNewEvent = () => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n\r\n      const bodyParameters = {\r\n         name: title,\r\n         description: description,\r\n         end_date: endDate,\r\n         img: img,\r\n         city_id: usedCity,\r\n         tag_id: usedTag,\r\n      };\r\n      console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/jobs/store\", bodyParameters, config)\r\n         .then(function (response) {\r\n            alert(\"تم تسجيل العمل بنجاح\");\r\n            window.location.href = \"/\";\r\n            console.log(response);\r\n         })\r\n         .catch(console.log);\r\n      //console.log(bodyParameters);\r\n      //console.log(token);\r\n   };\r\n\r\n   const getBase64 = async (e) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n         setImg(reader.result);\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n   };\r\n\r\n   return Cookies.getJSON(\"session\").type === \"Organization\" ? (\r\n      <div className=\"custom-new-event-container\">\r\n         <div></div>\r\n         <div className=\"newEvent\">\r\n            <MDBContainer className=\"mt-5 text-center\">\r\n               <MDBRow>\r\n                  <MDBCol>\r\n                     <MDBJumbotron>\r\n                        <h2 className=\"h1 display-3\">قم بأضافه فعاليه جديده</h2>\r\n                        <form className=\"form-Sizer\">\r\n                           <MDBInput\r\n                              label=\"اسم العمل\"\r\n                              className=\"textDirection\"\r\n                              onChange={onChangeTitle}\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              validate\r\n                              error=\"wrong\"\r\n                              success=\"right\"\r\n                           />\r\n                           <MDBInput\r\n                              type=\"textarea\"\r\n                              label=\"اشرح المحتوي\"\r\n                              onChange={onChangeDescription}\r\n                              rows=\"8\"\r\n                              size=\"lg\"\r\n                              className=\"textDirection\"\r\n                           />\r\n                           <div className=\"input-group mb-3\">\r\n                              <div className=\"input-group-prepend\">\r\n                                 <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">\r\n                                    أرفع\r\n                                 </span>\r\n                              </div>\r\n                              <div className=\"custom-file\">\r\n                                 <input\r\n                                    type=\"file\"\r\n                                    className=\"custom-file-input\"\r\n                                    id=\"inputGroupFile01\"\r\n                                    onChange={getBase64}\r\n                                    aria-describedby=\"inputGroupFileAddon01\"\r\n                                 />\r\n                                 <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                    اختر صوره للفعاليه\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                           <div className=\"mb-4\">\r\n                              <SemanticDatepicker\r\n                                 onChange={onChangeEndDateReg}\r\n                                 datePickerOnly\r\n                                 pointing=\"top left\"\r\n                                 format=\"YYYY-MM-DD\"\r\n                                 filterDate={(date) => {\r\n                                    const now = new Date();\r\n                                    return date >= now;\r\n                                 }}\r\n                              />\r\n                              <span>تاريخ انتهاء التسجيل</span>\r\n                           </div>\r\n                           <div className=\"mb-4\">\r\n                              <SemanticDatepicker\r\n                                 onChange={onChangeEndDate}\r\n                                 datePickerOnly\r\n                                 pointing=\"top left\"\r\n                                 format=\"YYYY-MM-DD\"\r\n                                 filterDate={(date) => {\r\n                                    const now = new Date();\r\n                                    return date >= now;\r\n                                 }}\r\n                              />\r\n                              <span>تاريخ انتهاء الفعاليه</span>\r\n                           </div>\r\n                           <Select\r\n                              placeholder=\"حدد نوع الفعاليه\"\r\n                              key={tags.key}\r\n                              options={tags}\r\n                              onChange={onChangeTag}\r\n                           />\r\n                           <Select\r\n                              placeholder=\"حدد مكان الفعاليه\"\r\n                              key={cities.key}\r\n                              options={cities}\r\n                              className=\"mt-3\"\r\n                              onChange={onChangeCity}\r\n                           />\r\n                           <p className=\"lead mt-3\">\r\n                              <MDBBtn\r\n                                 color=\"primary\"\r\n                                 className=\"textformatter\"\r\n                                 onClick={handleNewEvent}>\r\n                                 سجل العمل\r\n                              </MDBBtn>\r\n                           </p>\r\n                        </form>\r\n                     </MDBJumbotron>\r\n                  </MDBCol>\r\n               </MDBRow>\r\n            </MDBContainer>\r\n         </div>\r\n      </div>\r\n   ) : (\r\n      //404 page\r\n      <div></div>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js",[],"E:\\MVP\\Projects\\charity\\src\\Utils\\global.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx",["157","158"],"import React from 'react'\r\nimport { Button, Icon, Image, Modal } from 'semantic-ui-react'\r\nimport \"../styles/customEventDetails.css\"\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\n\r\nimport {\r\n   MDBBtn\r\n} from \"mdbreact\";\r\n\r\n\r\nconst EventDetails = (props) => {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const registerToEvent = () =>{\r\n  const token = Cookies.getJSON(\"session\").token;\r\n  const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n\r\n      //console.log(\"Ya hady\")\r\n      //console.log(props.props.event)\r\n\r\n     const bodyParameters = {\r\n         job_id: props.props.event.id\r\n      }; \r\n      console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/volunteer/request\", bodyParameters, config)\r\n         .then(function (response) {\r\n            alert(\"تم التسجيل بنجاح\");\r\n            //console.log(response);\r\n         })\r\n         .catch(console.log);\r\n      //console.log(bodyParameters);\r\n      //console.log(token);  \r\n   };\r\n  //console.log(props.props);\r\n  return (\r\n    <Modal\r\n\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      trigger={  <MDBBtn className=\"customButtonFont\">عرض المزيد</MDBBtn>}\r\n    >\r\n      <Modal.Header className=\"textRight\">{props.props.event.name}</Modal.Header>\r\n      <Modal.Content image scrolling >\r\n        <Image size='medium'  src={serverURL+props.props.event.img}  wrapped />\r\n        <Modal.Description className=\"descriptionHolder\">\r\n          <p className=\"textRight\">\r\n            {props.props.event.organization}\r\n          </p>\r\n            <p className=\"textRight\">تاريخ الانتهاء: {props.props.event.end_date}</p>\r\n            <p className=\"textRight\">المحتوي</p>\r\n            <p className=\"descriptionFonter\">{props.props.event.description}</p>\r\n         <Image\r\n            src='https://react.semantic-ui.com/images/wireframe/paragraph.png'\r\n            style={{ marginBottom: 10 }}\r\n          />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={() =>  setOpen(false)}>الغاء</Button>\r\n         {Cookies.getJSON('session').type == \"Volunteer\"?( <Button onClick={() => {\r\n           registerToEvent();\r\n          setOpen(false)}} positive>\r\n          تسجيل\r\n        </Button>):(<></>)}\r\n       \r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EventDetails\r\n","E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js",["159","160","161","162","163","164","165","166"],"E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js",["167","168","169","170","171","172","173","174","175","176","177","178","179"],"import \"../styles/MyEvents.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { MDBDataTableV5, MDBBtn, MDBRating, MDBBadge, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport EventDetails from \"../components/VolunteerDetails\";\r\nimport { data } from \"jquery\";\r\n\r\nexport default function EventVolunteer(props) {\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [eventDetails, setMyEventDetails] = useState({});\r\n\r\n   const [starRates, setStarRates] = useState([]);\r\n   const [dataCallback, setDataCallback] = useState({});\r\n   const [myEventsColumns, setMyEventsColumns] = useState([\r\n      { label: \"اسم المتطوع\", field: \"userName\", width: 150 },\r\n      {\r\n         label: \"ايميل المتطوع\",\r\n         field: \"userEmail\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"رقم الهاتف\",\r\n         field: \"userMobile\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"الحاله\",\r\n         field: \"active\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"التقييم\",\r\n         field: \"rating\",\r\n         width: 150,\r\n      },\r\n   ]);\r\n\r\n   const handleStars = (dataRow, event) => {\r\n      console.log(dataRow);\r\n      console.log(event.target.ariaPosInSet);\r\n      //console.log(eventDetails);\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      const bodyParameters = {\r\n         job_id: eventDetails.id,\r\n         volunteer_id: dataRow.id,\r\n         rating: event.target.ariaPosInSet,\r\n      };\r\n      //console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/organization/ratevolunteer\", bodyParameters, config)\r\n         .then(function (response) {\r\n            console.log(response);\r\n         })\r\n         .catch(console.log);\r\n   };\r\n\r\n   const handleAccept = (data) => {\r\n      //console.log(data);\r\n      //console.log(eventDetails);\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      const bodyParameters = {\r\n         job_id: eventDetails.id,\r\n         volunteer_id: data.id,\r\n         value: \"accepted\",\r\n      };\r\n      console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/organization/updaterequest\", bodyParameters, config)\r\n         .then(function (response) {\r\n            window.location.href = \"EventVolunteer\";\r\n         })\r\n         .catch(console.log);\r\n   };\r\n   const handleReject = (data) => {\r\n      //console.log(data);\r\n      //console.log(eventDetails);\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      const bodyParameters = {\r\n         job_id: eventDetails.id,\r\n         volunteer_id: data.id,\r\n         value: \"rejected\",\r\n      };\r\n      console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/organization/updaterequest\", bodyParameters, config)\r\n         .then(function (response) {\r\n            window.location.href = \"EventVolunteer\";\r\n         })\r\n         .catch(console.log);\r\n   };\r\n\r\n   useEffect(() => {\r\n      if (starRates.length === dataCallback.length) {\r\n         dataCallback.forEach((dataRow) => {\r\n            console.log(dataRow);\r\n            let tempObject = {\r\n               userName: (\r\n                  <div>\r\n                     <EventDetails props={{ vol: dataRow }} />\r\n                  </div>\r\n               ),\r\n               userEmail: dataRow.email,\r\n               userMobile: dataRow.mobile,\r\n               active: (\r\n                  <>\r\n                     {dataRow.status == \"pending\" && eventDetails.is_ended == \"working\" ? (\r\n                        <>\r\n                           <MDBBtn\r\n                              color=\"success\"\r\n                              size=\"sm\"\r\n                              className=\"My-events-font\"\r\n                              onClick={() => handleAccept(dataRow)}>\r\n                              قبول\r\n                           </MDBBtn>\r\n                           <MDBBtn\r\n                              color=\"danger\"\r\n                              size=\"sm\"\r\n                              className=\"My-events-font\"\r\n                              onClick={() => handleReject(dataRow)}>\r\n                              رفض\r\n                           </MDBBtn>\r\n                        </>\r\n                     ) : (\r\n                        <MDBBadge color=\"success\">مقبول</MDBBadge>\r\n                     )}\r\n                  </>\r\n               ),\r\n               rating: (\r\n                  <>\r\n                     {eventDetails.is_ended == \"working\" ? (\r\n                        <MDBBadge color=\"success\">قيد العمل</MDBBadge>\r\n                     ) : (\r\n                        <Rating\r\n                           maxRating={5}\r\n                           size=\"huge\"\r\n                           defaultRating={dataRow.rating}\r\n                           onRate={(event) => handleStars(dataRow, event)}\r\n                        />\r\n                        /*   <MDBRating\r\n                           data={starRates[i]}\r\n                           getValue={(val) => handleStars(dataRow, val)}\r\n                        /> */\r\n                     )}\r\n                  </>\r\n               ),\r\n            };\r\n\r\n            setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n         });\r\n         //console.log(starRates);\r\n      }\r\n   }, [starRates]);\r\n\r\n   const transformData = (data) => {\r\n      data.forEach((dataRow) => {\r\n         let rates = [\r\n            {\r\n               tooltip: \"Very Bad\",\r\n            },\r\n            {\r\n               tooltip: \"Poor\",\r\n            },\r\n            {\r\n               tooltip: \"Ok\",\r\n            },\r\n            {\r\n               tooltip: \"Good\",\r\n            },\r\n            {\r\n               tooltip: \"Excellent\",\r\n            },\r\n         ];\r\n         if (dataRow.rating == -1) {\r\n            setStarRates((oldArray) => [...oldArray, rates]);\r\n         } else {\r\n            let i = 0;\r\n            rates.forEach((rate) => {\r\n               if (dataRow.rating - 1 == i) {\r\n                  rate[\"choosed\"] = true;\r\n               }\r\n               i++;\r\n            });\r\n\r\n            setStarRates((oldArray) => [...oldArray, rates]);\r\n         }\r\n      });\r\n   };\r\n   useEffect(() => {\r\n      props.location.params\r\n         ? localStorage.setItem(\"eventInfo\", JSON.stringify(props.location.params.dataRow))\r\n         : console.log();\r\n      queryMyVolunteers();\r\n   }, []);\r\n\r\n   const queryMyVolunteers = () => {\r\n      console.log(props);\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      let retrievedObject;\r\n      if (localStorage.getItem(\"eventInfo\")) {\r\n         retrievedObject = localStorage.getItem(\"eventInfo\");\r\n         //console.log(\"retrievedObject: \", JSON.parse(retrievedObject));\r\n         Object.assign(eventDetails, JSON.parse(retrievedObject));\r\n      } else {\r\n         alert(\"حدث خطأ ما\");\r\n         window.location.href(\"/MyEvents\");\r\n      }\r\n      //console.log(eventDetails);\r\n      const bodyParameters = {\r\n         job_id: eventDetails.id,\r\n      };\r\n      axios\r\n         .post(serverURL + \"/jobs/volunteers\", bodyParameters, config)\r\n         .then(function (response) {\r\n            console.log(response);\r\n            setDataCallback(response.data);\r\n            transformData(response.data);\r\n         })\r\n         .catch(console.log);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }}\r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js",["180","181","182","183","184","185","186","187","188","189","190","191","192"],"import \"../styles/MyEvents.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { MDBDataTableV5, MDBBtn, MDBRating, MDBBadge, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\nimport { data } from \"jquery\";\r\n\r\nexport default function AllJobs() {\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [eventDetails, setMyEventDetails] = useState({});\r\n\r\n   const [starRates, setStarRates] = useState([]);\r\n   const [dataCallback, setDataCallback] = useState({});\r\n   const [myEventsColumns, setMyEventsColumns] = useState([\r\n      { label: \"اسم العمل\", field: \"eventInfo\", width: 150 },\r\n      {\r\n         label: \"اسم المبادره\",\r\n         field: \"orgInfo\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"المدينه\",\r\n         field: \"city\",\r\n         width: 150,\r\n      },\r\n   ]);\r\n\r\n   const transformData = (data) => {\r\n      console.log(data);\r\n      data.forEach((dataRow) => {\r\n         let tempObject = {\r\n            eventInfo: dataRow.name,\r\n            orgInfo: dataRow.organization,\r\n            city: dataRow.city,\r\n         };\r\n         setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n      });\r\n   };\r\n\r\n   useEffect(() => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      axios\r\n         .get(serverURL + \"/userdata\", config)\r\n         .then(function (response) {\r\n            //console.log(response.data.data.jobs);\r\n            transformData(response.data.data.jobs);\r\n         })\r\n         .catch(console.log);\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }}\r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\addTags.js",["193"],"import React, { useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport { MDBJumbotron, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBInput } from \"mdbreact\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\n\r\nexport default function AddTag() {\r\n   const [newTag, setNewTag] = useState(\"\");\r\n   const onChangeTag = (event) => {\r\n      console.log(event.target.value);\r\n      setNewTag(event.target.value);\r\n   };\r\n\r\n   const handleNewTag = () => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      const bodyParameters = {\r\n         name: newTag,\r\n      };\r\n      // console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/tags/store\", bodyParameters, config)\r\n         .then(function (response) {\r\n            if (response.status == 200) {\r\n               console.log(response);\r\n               alert(\"تم تسجيل الفئه بنجاح\");\r\n            } else {\r\n               alert(\"لا يمكنك اضافه فئه\");\r\n            }\r\n         })\r\n         .catch(console.log);\r\n      //console.log(bodyParameters);\r\n      //console.log(token);\r\n   };\r\n\r\n   return (\r\n      <div className=\"custom-new-event-container\">\r\n         <div></div>\r\n         <div className=\"newEvent\">\r\n            <MDBContainer className=\"mt-5 text-center\">\r\n               <MDBRow>\r\n                  <MDBCol>\r\n                     <MDBJumbotron>\r\n                        <h2 className=\"h1 display-3\">قم بأضافه فئه جديده</h2>\r\n                        <form className=\"form-Sizer\">\r\n                           <MDBInput\r\n                              label=\"اسم الفئه\"\r\n                              className=\"textDirection\"\r\n                              onChange={onChangeTag}\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              validate\r\n                              error=\"wrong\"\r\n                              success=\"right\"\r\n                           />\r\n\r\n                           <p className=\"lead mt-3\">\r\n                              <MDBBtn\r\n                                 color=\"primary\"\r\n                                 className=\"textformatter\"\r\n                                 onClick={handleNewTag}>\r\n                                 اضف فئه\r\n                              </MDBBtn>\r\n                           </p>\r\n                        </form>\r\n                     </MDBJumbotron>\r\n                  </MDBCol>\r\n               </MDBRow>\r\n            </MDBContainer>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\components\\VolunteerDetails.jsx",["194","195","196","197","198","199","200","201","202","203","204","205"],"import React from 'react'\r\nimport { Button, Icon, Image, Modal } from 'semantic-ui-react'\r\nimport \"../styles/customEventDetails.css\"\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { MDBDataTableV5,  MDBRating, MDBBadge, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\nimport serverURL from \"../Utils/global\";\r\n\r\nimport {\r\n   MDBBtn\r\n} from \"mdbreact\";\r\n\r\n\r\nconst VolDetails = (props) => {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const registerToEvent = () =>{\r\n   };\r\n  console.log(props.props);\r\n  return (\r\n    <Modal\r\n\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      trigger={  <a href=\"#\" class=\"text-decoration-none blue-text\">{props.props.vol.name}</a>}\r\n    >\r\n      <Modal.Content scrolling >\r\n        <Modal.Description className=\"descriptionHolder\">\r\n <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n           /*  data={{ columns: myEventsColumns, rows: myEventsRows }} */\r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={() =>  setOpen(false)}>الغاء</Button>       \r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VolDetails\r\n","E:\\MVP\\Projects\\charity\\src\\components\\footer.jsx",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":7,"column":10,"nodeType":"212","messageId":"213","endLine":7,"endColumn":24},{"ruleId":"210","severity":1,"message":"214","line":7,"column":26,"nodeType":"212","messageId":"213","endLine":7,"endColumn":32},{"ruleId":"210","severity":1,"message":"215","line":7,"column":34,"nodeType":"212","messageId":"213","endLine":7,"endColumn":43},{"ruleId":"210","severity":1,"message":"216","line":7,"column":45,"nodeType":"212","messageId":"213","endLine":7,"endColumn":53},{"ruleId":"210","severity":1,"message":"217","line":7,"column":55,"nodeType":"212","messageId":"213","endLine":7,"endColumn":65},{"ruleId":"218","severity":1,"message":"219","line":61,"column":55,"nodeType":"220","messageId":"221","endLine":61,"endColumn":57},{"ruleId":"218","severity":1,"message":"219","line":73,"column":52,"nodeType":"220","messageId":"221","endLine":73,"endColumn":54},{"ruleId":"210","severity":1,"message":"222","line":2,"column":106,"nodeType":"212","messageId":"213","endLine":2,"endColumn":117},{"ruleId":"210","severity":1,"message":"223","line":3,"column":1,"nodeType":"212","messageId":"213","endLine":3,"endColumn":18},{"ruleId":"210","severity":1,"message":"224","line":3,"column":20,"nodeType":"212","messageId":"213","endLine":3,"endColumn":35},{"ruleId":"210","severity":1,"message":"225","line":3,"column":37,"nodeType":"212","messageId":"213","endLine":3,"endColumn":52},{"ruleId":"210","severity":1,"message":"226","line":3,"column":54,"nodeType":"212","messageId":"213","endLine":3,"endColumn":66},{"ruleId":"210","severity":1,"message":"227","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":16},{"ruleId":"210","severity":1,"message":"228","line":8,"column":8,"nodeType":"212","messageId":"213","endLine":8,"endColumn":12},{"ruleId":"210","severity":1,"message":"229","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":15},{"ruleId":"210","severity":1,"message":"230","line":8,"column":18,"nodeType":"212","messageId":"213","endLine":8,"endColumn":25},{"ruleId":"210","severity":1,"message":"231","line":12,"column":10,"nodeType":"212","messageId":"213","endLine":12,"endColumn":13},{"ruleId":"232","severity":1,"message":"233","line":107,"column":7,"nodeType":"234","endLine":107,"endColumn":9,"suggestions":"235"},{"ruleId":"210","severity":1,"message":"236","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"237","line":7,"column":8,"nodeType":"212","messageId":"213","endLine":7,"endColumn":16},{"ruleId":"210","severity":1,"message":"214","line":10,"column":4,"nodeType":"212","messageId":"213","endLine":10,"endColumn":10},{"ruleId":"210","severity":1,"message":"238","line":22,"column":10,"nodeType":"212","messageId":"213","endLine":22,"endColumn":25},{"ruleId":"232","severity":1,"message":"233","line":47,"column":7,"nodeType":"234","endLine":47,"endColumn":9,"suggestions":"239"},{"ruleId":"232","severity":1,"message":"240","line":65,"column":7,"nodeType":"234","endLine":65,"endColumn":23,"suggestions":"241"},{"ruleId":"218","severity":1,"message":"219","line":70,"column":25,"nodeType":"220","messageId":"221","endLine":70,"endColumn":27},{"ruleId":"210","severity":1,"message":"230","line":10,"column":18,"nodeType":"212","messageId":"213","endLine":10,"endColumn":25},{"ruleId":"218","severity":1,"message":"219","line":79,"column":39,"nodeType":"220","messageId":"221","endLine":79,"endColumn":41},{"ruleId":"232","severity":1,"message":"233","line":111,"column":7,"nodeType":"234","endLine":111,"endColumn":9,"suggestions":"242"},{"ruleId":"218","severity":1,"message":"219","line":172,"column":64,"nodeType":"220","messageId":"221","endLine":172,"endColumn":66},{"ruleId":"210","severity":1,"message":"243","line":21,"column":11,"nodeType":"212","messageId":"213","endLine":21,"endColumn":21},{"ruleId":"218","severity":1,"message":"219","line":41,"column":25,"nodeType":"220","messageId":"221","endLine":41,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":51,"column":25,"nodeType":"220","messageId":"221","endLine":51,"endColumn":27},{"ruleId":"210","severity":1,"message":"244","line":2,"column":18,"nodeType":"212","messageId":"213","endLine":2,"endColumn":22},{"ruleId":"218","severity":1,"message":"219","line":66,"column":43,"nodeType":"220","messageId":"221","endLine":66,"endColumn":45},{"ruleId":"210","severity":1,"message":"229","line":5,"column":8,"nodeType":"212","messageId":"213","endLine":5,"endColumn":15},{"ruleId":"210","severity":1,"message":"245","line":6,"column":8,"nodeType":"212","messageId":"213","endLine":6,"endColumn":14},{"ruleId":"210","severity":1,"message":"237","line":7,"column":8,"nodeType":"212","messageId":"213","endLine":7,"endColumn":16},{"ruleId":"210","severity":1,"message":"215","line":10,"column":34,"nodeType":"212","messageId":"213","endLine":10,"endColumn":43},{"ruleId":"210","severity":1,"message":"217","line":10,"column":55,"nodeType":"212","messageId":"213","endLine":10,"endColumn":65},{"ruleId":"210","severity":1,"message":"246","line":14,"column":28,"nodeType":"212","messageId":"213","endLine":14,"endColumn":46},{"ruleId":"232","severity":1,"message":"247","line":54,"column":7,"nodeType":"234","endLine":54,"endColumn":9,"suggestions":"248"},{"ruleId":"218","severity":1,"message":"219","line":66,"column":37,"nodeType":"220","messageId":"221","endLine":66,"endColumn":39},{"ruleId":"210","severity":1,"message":"215","line":7,"column":34,"nodeType":"212","messageId":"213","endLine":7,"endColumn":43},{"ruleId":"210","severity":1,"message":"217","line":7,"column":55,"nodeType":"212","messageId":"213","endLine":7,"endColumn":65},{"ruleId":"210","severity":1,"message":"249","line":7,"column":67,"nodeType":"212","messageId":"213","endLine":7,"endColumn":77},{"ruleId":"210","severity":1,"message":"250","line":10,"column":10,"nodeType":"212","messageId":"213","endLine":10,"endColumn":14},{"ruleId":"210","severity":1,"message":"251","line":14,"column":25,"nodeType":"212","messageId":"213","endLine":14,"endColumn":42},{"ruleId":"210","severity":1,"message":"246","line":18,"column":28,"nodeType":"212","messageId":"213","endLine":18,"endColumn":46},{"ruleId":"218","severity":1,"message":"219","line":119,"column":38,"nodeType":"220","messageId":"221","endLine":119,"endColumn":40},{"ruleId":"218","severity":1,"message":"219","line":119,"column":76,"nodeType":"220","messageId":"221","endLine":119,"endColumn":78},{"ruleId":"218","severity":1,"message":"219","line":143,"column":45,"nodeType":"220","messageId":"221","endLine":143,"endColumn":47},{"ruleId":"232","severity":1,"message":"252","line":165,"column":7,"nodeType":"234","endLine":165,"endColumn":18,"suggestions":"253"},{"ruleId":"218","severity":1,"message":"219","line":186,"column":29,"nodeType":"220","messageId":"221","endLine":186,"endColumn":31},{"ruleId":"218","severity":1,"message":"219","line":191,"column":39,"nodeType":"220","messageId":"221","endLine":191,"endColumn":41},{"ruleId":"232","severity":1,"message":"254","line":206,"column":7,"nodeType":"234","endLine":206,"endColumn":9,"suggestions":"255"},{"ruleId":"210","severity":1,"message":"214","line":7,"column":26,"nodeType":"212","messageId":"213","endLine":7,"endColumn":32},{"ruleId":"210","severity":1,"message":"215","line":7,"column":34,"nodeType":"212","messageId":"213","endLine":7,"endColumn":43},{"ruleId":"210","severity":1,"message":"216","line":7,"column":45,"nodeType":"212","messageId":"213","endLine":7,"endColumn":53},{"ruleId":"210","severity":1,"message":"217","line":7,"column":55,"nodeType":"212","messageId":"213","endLine":7,"endColumn":65},{"ruleId":"210","severity":1,"message":"249","line":7,"column":67,"nodeType":"212","messageId":"213","endLine":7,"endColumn":77},{"ruleId":"210","severity":1,"message":"250","line":8,"column":10,"nodeType":"212","messageId":"213","endLine":8,"endColumn":14},{"ruleId":"210","severity":1,"message":"256","line":12,"column":11,"nodeType":"212","messageId":"213","endLine":12,"endColumn":23},{"ruleId":"210","severity":1,"message":"251","line":12,"column":25,"nodeType":"212","messageId":"213","endLine":12,"endColumn":42},{"ruleId":"210","severity":1,"message":"257","line":14,"column":11,"nodeType":"212","messageId":"213","endLine":14,"endColumn":20},{"ruleId":"210","severity":1,"message":"258","line":14,"column":22,"nodeType":"212","messageId":"213","endLine":14,"endColumn":34},{"ruleId":"210","severity":1,"message":"259","line":15,"column":11,"nodeType":"212","messageId":"213","endLine":15,"endColumn":23},{"ruleId":"210","severity":1,"message":"260","line":15,"column":25,"nodeType":"212","messageId":"213","endLine":15,"endColumn":40},{"ruleId":"210","severity":1,"message":"246","line":16,"column":28,"nodeType":"212","messageId":"213","endLine":16,"endColumn":46},{"ruleId":"218","severity":1,"message":"219","line":27,"column":33,"nodeType":"220","messageId":"221","endLine":27,"endColumn":35},{"ruleId":"210","severity":1,"message":"244","line":2,"column":18,"nodeType":"212","messageId":"213","endLine":2,"endColumn":22},{"ruleId":"210","severity":1,"message":"261","line":2,"column":24,"nodeType":"212","messageId":"213","endLine":2,"endColumn":29},{"ruleId":"210","severity":1,"message":"262","line":4,"column":8,"nodeType":"212","messageId":"213","endLine":4,"endColumn":15},{"ruleId":"210","severity":1,"message":"263","line":5,"column":8,"nodeType":"212","messageId":"213","endLine":5,"endColumn":13},{"ruleId":"210","severity":1,"message":"215","line":6,"column":27,"nodeType":"212","messageId":"213","endLine":6,"endColumn":36},{"ruleId":"210","severity":1,"message":"216","line":6,"column":38,"nodeType":"212","messageId":"213","endLine":6,"endColumn":46},{"ruleId":"210","severity":1,"message":"217","line":6,"column":48,"nodeType":"212","messageId":"213","endLine":6,"endColumn":58},{"ruleId":"210","severity":1,"message":"249","line":6,"column":60,"nodeType":"212","messageId":"213","endLine":6,"endColumn":70},{"ruleId":"210","severity":1,"message":"264","line":7,"column":8,"nodeType":"212","messageId":"213","endLine":7,"endColumn":17},{"ruleId":"210","severity":1,"message":"214","line":10,"column":4,"nodeType":"212","messageId":"213","endLine":10,"endColumn":10},{"ruleId":"210","severity":1,"message":"265","line":17,"column":9,"nodeType":"212","messageId":"213","endLine":17,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":26,"column":18,"nodeType":"268","endLine":26,"endColumn":69},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'MDBDataTableV5' is defined but never used.","Identifier","unusedVar","'MDBBtn' is defined but never used.","'MDBRating' is defined but never used.","'MDBBadge' is defined but never used.","'MDBNavItem' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MDBDropdown' is defined but never used.","'MDBDropdownToggle' is defined but never used.","'MDBDropdownMenu' is defined but never used.","'MDBDropdownItem' is defined but never used.","'MDBContainer' is defined but never used.","'Features' is defined but never used.","'Team' is defined but never used.","'Contact' is defined but never used.","'MDBIcon' is defined but never used.","'act' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tag1'. Either include it or remove the dependency array.","ArrayExpression",["271"],"'Link' is defined but never used.","'JsonData' is defined but never used.","'AnimateOnChange' is defined but never used.",["272"],"React Hook useEffect has a missing dependency: 'queryEvents'. Either include it or remove the dependency array.",["273"],["274"],"'endDateReg' is assigned a value but never used.","'Icon' is defined but never used.","'Banner' is defined but never used.","'setMyEventsColumns' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'queryMyEvents'. Either include it or remove the dependency array.",["275"],"'MDBNavLink' is defined but never used.","'data' is defined but never used.","'setMyEventDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataCallback', 'eventDetails.is_ended', 'handleAccept', 'handleReject', and 'handleStars'. Either include them or remove the dependency array.",["276"],"React Hook useEffect has missing dependencies: 'props.location.params' and 'queryMyVolunteers'. Either include them or remove the dependency array.",["277"],"'eventDetails' is assigned a value but never used.","'starRates' is assigned a value but never used.","'setStarRates' is assigned a value but never used.","'dataCallback' is assigned a value but never used.","'setDataCallback' is assigned a value but never used.","'Image' is defined but never used.","'Cookies' is defined but never used.","'axios' is defined but never used.","'serverURL' is defined but never used.","'registerToEvent' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"278","fix":"280"},{"desc":"281","fix":"282"},{"desc":"278","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [tag1]",{"range":"290","text":"291"},{"range":"292","text":"291"},"Update the dependencies array to be: [queryEvents, tag1, usedCity]",{"range":"293","text":"294"},{"range":"295","text":"291"},"Update the dependencies array to be: [queryMyEvents]",{"range":"296","text":"297"},"Update the dependencies array to be: [dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",{"range":"298","text":"299"},"Update the dependencies array to be: [props.location.params, queryMyVolunteers]",{"range":"300","text":"301"},[3418,3420],"[tag1]",[1546,1548],[2088,2104],"[queryEvents, tag1, usedCity]",[3803,3805],[1554,1556],"[queryMyEvents]",[5641,5652],"[dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",[6724,6726],"[props.location.params, queryMyVolunteers]"]