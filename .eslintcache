[{"E:\\MVP\\Projects\\charity\\src\\index.js":"1","E:\\MVP\\Projects\\charity\\src\\views\\Profile.js":"2","E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js":"3","E:\\MVP\\Projects\\charity\\src\\components\\features.jsx":"4","E:\\MVP\\Projects\\charity\\src\\components\\header.jsx":"5","E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx":"6","E:\\MVP\\Projects\\charity\\src\\components\\about.jsx":"7","E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx":"8","E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx":"9","E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx":"10","E:\\MVP\\Projects\\charity\\src\\views\\App.js":"11","E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js":"12","E:\\MVP\\Projects\\charity\\src\\views\\Login.js":"13","E:\\MVP\\Projects\\charity\\src\\views\\Register.js":"14","E:\\MVP\\Projects\\charity\\src\\views\\Search.js":"15","E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js":"16","E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js":"17","E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js":"18","E:\\MVP\\Projects\\charity\\src\\Utils\\global.js":"19","E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx":"20","E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx":"21","E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx":"22","E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js":"23","E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js":"24","E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js":"25","E:\\MVP\\Projects\\charity\\src\\views\\addTags.js":"26","E:\\MVP\\Projects\\charity\\src\\components\\VolunteerDetails.jsx":"27","E:\\MVP\\Projects\\charity\\src\\components\\footer.jsx":"28","E:\\MVP\\Projects\\charity\\src\\components\\messageModal.jsx":"29"},{"size":516,"mtime":1613737899088,"results":"30","hashOfConfig":"31"},{"size":3887,"mtime":1614303287422,"results":"32","hashOfConfig":"31"},{"size":2401,"mtime":1614337944758,"results":"33","hashOfConfig":"31"},{"size":894,"mtime":1612469607259,"results":"34","hashOfConfig":"31"},{"size":665,"mtime":1614184656811,"results":"35","hashOfConfig":"31"},{"size":4015,"mtime":1614436251708,"results":"36","hashOfConfig":"31"},{"size":1313,"mtime":1614266488557,"results":"37","hashOfConfig":"31"},{"size":7797,"mtime":1614267289898,"results":"38","hashOfConfig":"31"},{"size":1040,"mtime":1612224345032,"results":"39","hashOfConfig":"31"},{"size":1528,"mtime":1613670982598,"results":"40","hashOfConfig":"31"},{"size":780,"mtime":1614336980763,"results":"41","hashOfConfig":"31"},{"size":91,"mtime":1612354907545,"results":"42","hashOfConfig":"31"},{"size":4494,"mtime":1614338685915,"results":"43","hashOfConfig":"31"},{"size":9540,"mtime":1614338278842,"results":"44","hashOfConfig":"31"},{"size":5207,"mtime":1614444195183,"results":"45","hashOfConfig":"31"},{"size":9648,"mtime":1614384472532,"results":"46","hashOfConfig":"31"},{"size":9171,"mtime":1614443940354,"results":"47","hashOfConfig":"31"},{"size":268,"mtime":1614299506270,"results":"48","hashOfConfig":"31"},{"size":62,"mtime":1613522665267,"results":"49","hashOfConfig":"31"},{"size":283,"mtime":1613667065520,"results":"50","hashOfConfig":"31"},{"size":7905,"mtime":1613747169478,"results":"51","hashOfConfig":"31"},{"size":2884,"mtime":1614384252817,"results":"52","hashOfConfig":"31"},{"size":3419,"mtime":1614303195961,"results":"53","hashOfConfig":"31"},{"size":8209,"mtime":1614384873619,"results":"54","hashOfConfig":"31"},{"size":4454,"mtime":1614296785942,"results":"55","hashOfConfig":"31"},{"size":2959,"mtime":1614338105103,"results":"56","hashOfConfig":"31"},{"size":4219,"mtime":1614303080684,"results":"57","hashOfConfig":"31"},{"size":1669,"mtime":1614444260487,"results":"58","hashOfConfig":"31"},{"size":1332,"mtime":1614337845194,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1s3xdrw",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\MVP\\Projects\\charity\\src\\index.js",[],["126","127"],"E:\\MVP\\Projects\\charity\\src\\views\\Profile.js",[],"E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\features.jsx",[],["128","129"],"E:\\MVP\\Projects\\charity\\src\\components\\header.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\about.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx",[],"E:\\MVP\\Projects\\charity\\src\\views\\App.js",[],"E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Login.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Register.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Search.js",["130","131","132","133"],"E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js",[],"E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js",[],"E:\\MVP\\Projects\\charity\\src\\Utils\\global.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx",[],["134","135"],"E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx",[],"E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js",["136"],"import \"../styles/MyEvents.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { MDBDataTableV5, MDBBtn, MDBBadge, MDBNavLink } from \"mdbreact\";\r\n\r\nexport default function MyEvents() {\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [myEventsColumns] = useState([\r\n      { label: \"اسم الفعاليه\", field: \"eventName\", width: 150 },\r\n      {\r\n         label: \"تاريخ انتهاء التسجيل\",\r\n         field: \"endDateReg\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"تاريخ انتهاء الفعاليه\",\r\n         field: \"endDate\",\r\n         width: 150,\r\n      },\r\n\r\n      {\r\n         label: \"عدد المتقدمين\",\r\n         field: \"count\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"حاله الفعاليه\",\r\n         field: \"active\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"عرض المزيد\",\r\n         field: \"moreInfo\",\r\n         width: 150,\r\n      },\r\n   ]);\r\n   useEffect(() => {\r\n      queryMyEvents();\r\n      console.log(Cookies.getJSON(\"session\").token);\r\n   }, []);\r\n\r\n   const transformData = (data) => {\r\n      //console.log(myEvents);\r\n      // const rows = [];\r\n      data.forEach((dataRow) => {\r\n         let tempObject = {\r\n            eventName: dataRow.name,\r\n            endDate: dataRow.end_date,\r\n            endDateReg: dataRow.registration_date,\r\n            active: (\r\n               <>\r\n                  {dataRow.can_register === \"working\" ? (\r\n                     <MDBBadge color=\"warning\">التسجيل مفتوح</MDBBadge>\r\n                  ) : dataRow.is_ended === \"working\" ? (\r\n                     <MDBBadge color=\"success\">قيد العمل</MDBBadge>\r\n                  ) : (\r\n                     <MDBBadge color=\"danger\">انتهي</MDBBadge>\r\n                  )}\r\n               </>\r\n            ),\r\n            count: dataRow.volunteers_count,\r\n            moreInfo: (\r\n               <>\r\n                  <MDBNavLink\r\n                     className=\"waves-effect waves-light\"\r\n                     to={{ pathname: `/EventVolunteer`, params: { dataRow } }}>\r\n                     <MDBBtn color=\"success\" size=\"sm\" className=\"My-events-font\">\r\n                        المزيد\r\n                     </MDBBtn>\r\n                  </MDBNavLink>\r\n               </>\r\n            ),\r\n         };\r\n         setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n      });\r\n   };\r\n   const queryMyEvents = () => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      axios\r\n         .get(serverURL + \"/organization/alljobs\", config)\r\n         .then(function (response) {\r\n            console.log(response.data.data);\r\n            transformData(response.data.data);\r\n         })\r\n         .catch(console.log);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <MDBDataTableV5\r\n            hover\r\n            scrollX\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }}\r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js",["137","138","139","140","141","142","143","144","145"],"import \"../styles/MyEvents.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { MDBDataTableV5, MDBBtn, MDBBadge } from \"mdbreact\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport VolDetails from \"../components/VolunteerDetails\";\r\n\r\nexport default function EventVolunteer(props) {\r\n   const alert = useAlert();\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [eventDetails, setMyEventDetails] = useState({});\r\n   const [starRates, setStarRates] = useState([]);\r\n   const [dataCallback, setDataCallback] = useState({});\r\n   const [myEventsColumns, setMyEventsColumns] = useState([\r\n      { label: \"اسم المتطوع\", field: \"userName\", width: 150 },\r\n      {\r\n         label: \"ايميل المتطوع\",\r\n         field: \"userEmail\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"رقم الهاتف\",\r\n         field: \"userMobile\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"الرقم القومي\",\r\n         field: \"NID\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"الحاله\",\r\n         field: \"active\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"التقييم\",\r\n         field: \"rating\",\r\n         width: 150,\r\n      },\r\n   ]);\r\n\r\n   const handleStars = (dataRow, event) => {\r\n      console.log(dataRow);\r\n      console.log(event.target.ariaPosInSet);\r\n      //console.log(eventDetails);\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      const bodyParameters = {\r\n         job_id: eventDetails.id,\r\n         volunteer_id: dataRow.id,\r\n         rating: event.target.ariaPosInSet,\r\n      };\r\n      //console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/organization/ratevolunteer\", bodyParameters, config)\r\n         .then(function (response) {\r\n            console.log(response);\r\n         })\r\n         .catch(console.log);\r\n   };\r\n\r\n   const handleAccept = (data) => {\r\n      //console.log(data);\r\n      //console.log(eventDetails);\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      const bodyParameters = {\r\n         job_id: eventDetails.id,\r\n         volunteer_id: data.id,\r\n         value: \"accepted\",\r\n      };\r\n      console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/organization/updaterequest\", bodyParameters, config)\r\n         .then(function (response) {\r\n            window.location.href = \"EventVolunteer\";\r\n         })\r\n         .catch(console.log);\r\n   };\r\n   const handleReject = (data) => {\r\n      //console.log(data);\r\n      //console.log(eventDetails);\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      const bodyParameters = {\r\n         job_id: eventDetails.id,\r\n         volunteer_id: data.id,\r\n         value: \"rejected\",\r\n      };\r\n      console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/organization/updaterequest\", bodyParameters, config)\r\n         .then(function (response) {\r\n            window.location.href = \"EventVolunteer\";\r\n         })\r\n         .catch(console.log);\r\n   };\r\n\r\n   useEffect(() => {\r\n      if (starRates.length === dataCallback.length) {\r\n         dataCallback.forEach((dataRow) => {\r\n            console.log(dataRow);\r\n            let tempObject = {\r\n               userName: (\r\n                  <div>\r\n                     <VolDetails props={{ vol: dataRow }} />\r\n                  </div>\r\n               ),\r\n               userEmail: dataRow.email,\r\n               userMobile: dataRow.mobile,\r\n               NID: dataRow.NID,\r\n               active: (\r\n                  <>\r\n                     {dataRow.status == \"pending\" && eventDetails.is_ended == \"working\" ? (\r\n                        <>\r\n                           <MDBBtn\r\n                              color=\"success\"\r\n                              size=\"sm\"\r\n                              className=\"My-events-font\"\r\n                              onClick={() => handleAccept(dataRow)}>\r\n                              قبول\r\n                           </MDBBtn>\r\n                           <MDBBtn\r\n                              color=\"danger\"\r\n                              size=\"sm\"\r\n                              className=\"My-events-font\"\r\n                              onClick={() => handleReject(dataRow)}>\r\n                              رفض\r\n                           </MDBBtn>\r\n                        </>\r\n                     ) : (\r\n                        <MDBBadge color=\"success\">مقبول</MDBBadge>\r\n                     )}\r\n                  </>\r\n               ),\r\n               rating: (\r\n                  <>\r\n                     {eventDetails.is_ended == \"working\" ? (\r\n                        <MDBBadge color=\"success\">قيد العمل</MDBBadge>\r\n                     ) : (\r\n                        <Rating\r\n                           maxRating={5}\r\n                           size=\"huge\"\r\n                           icon=\"star\"\r\n                           defaultRating={dataRow.rating}\r\n                           onRate={(event) => handleStars(dataRow, event)}\r\n                        />\r\n                     )}\r\n                  </>\r\n               ),\r\n            };\r\n\r\n            setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n         });\r\n         //console.log(starRates);\r\n      }\r\n   }, [starRates]);\r\n\r\n   const transformData = (data) => {\r\n      data.forEach((dataRow) => {\r\n         let rates = [\r\n            {\r\n               tooltip: \"Very Bad\",\r\n            },\r\n            {\r\n               tooltip: \"Poor\",\r\n            },\r\n            {\r\n               tooltip: \"Ok\",\r\n            },\r\n            {\r\n               tooltip: \"Good\",\r\n            },\r\n            {\r\n               tooltip: \"Excellent\",\r\n            },\r\n         ];\r\n         if (dataRow.rating == -1) {\r\n            setStarRates((oldArray) => [...oldArray, rates]);\r\n         } else {\r\n            let i = 0;\r\n            rates.forEach((rate) => {\r\n               if (dataRow.rating - 1 == i) {\r\n                  rate[\"choosed\"] = true;\r\n               }\r\n               i++;\r\n            });\r\n\r\n            setStarRates((oldArray) => [...oldArray, rates]);\r\n         }\r\n      });\r\n   };\r\n   useEffect(() => {\r\n      props.location.params\r\n         ? localStorage.setItem(\"eventInfo\", JSON.stringify(props.location.params.dataRow))\r\n         : console.log();\r\n      queryMyVolunteers();\r\n   }, []);\r\n\r\n   const queryMyVolunteers = () => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      let retrievedObject;\r\n      if (localStorage.getItem(\"eventInfo\")) {\r\n         retrievedObject = localStorage.getItem(\"eventInfo\");\r\n         //console.log(\"retrievedObject: \", JSON.parse(retrievedObject));\r\n         Object.assign(eventDetails, JSON.parse(retrievedObject));\r\n      } else {\r\n         alert.error(\"حدث خطأ ما\");\r\n         window.location.href(\"/MyEvents\");\r\n      }\r\n      //console.log(eventDetails);\r\n      const bodyParameters = {\r\n         job_id: eventDetails.id,\r\n      };\r\n      axios\r\n         .post(serverURL + \"/jobs/volunteers\", bodyParameters, config)\r\n         .then(function (response) {\r\n            // console.log(response);\r\n            setDataCallback(response.data);\r\n            transformData(response.data);\r\n         })\r\n         .catch(console.log);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            scrollX\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }}\r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js",["146","147","148","149","150"],"import \"../styles/MyEvents.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport axios from \"axios\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { MDBDataTableV5, MDBBadge } from \"mdbreact\";\r\n\r\nexport default function AllJobs() {\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [myEventsColumns, setMyEventsColumns] = useState([\r\n      {\r\n         label: \"اسم المبادره\",\r\n         field: \"orgInfo\",\r\n         width: 150,\r\n      },\r\n      { label: \"اسم العمل\", field: \"eventInfo\", width: 150 },\r\n\r\n      {\r\n         label: \"بريد المبادره الالكتروني\",\r\n         field: \"orgEmail\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"رقم المبادره\",\r\n         field: \"orgMobile\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"رقم اخر\",\r\n         field: \"orgMobile1\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"المدينه\",\r\n         field: \"city\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"الحاله\",\r\n         field: \"status\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"تاريخ البدايه\",\r\n         field: \"startDate\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"تاريخ الانتهاء\",\r\n         field: \"endDate\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"التقيم\",\r\n         field: \"rate\",\r\n         width: 150,\r\n      },\r\n   ]);\r\n\r\n   const transformData = (data) => {\r\n      console.log(data);\r\n      data.forEach((dataRow) => {\r\n         let tempObject = {\r\n            eventInfo: dataRow.name,\r\n            orgInfo: dataRow.organization,\r\n            city: dataRow.city,\r\n            orgEmail: dataRow.organization_email,\r\n            orgMobile: dataRow.organization_mobile,\r\n            orgMobile1: dataRow.organization_mobile2,\r\n            startDate: dataRow.registration_date,\r\n            endDate: dataRow.end_date,\r\n            status: (\r\n               <>\r\n                  {dataRow.status == \"pending\" ? (\r\n                     <MDBBadge color=\"warning\" key={dataRow.id}>\r\n                        لم يتم التأكيد\r\n                     </MDBBadge>\r\n                  ) : dataRow.status == \"rejected\" ? (\r\n                     <MDBBadge color=\"danger\" key={dataRow.id}>\r\n                        مرفوض\r\n                     </MDBBadge>\r\n                  ) : (\r\n                     <MDBBadge color=\"success\" key={dataRow.id}>\r\n                        مشترك\r\n                     </MDBBadge>\r\n                  )}\r\n               </>\r\n            ),\r\n            rate: (\r\n               <>\r\n                  {dataRow.status == \"rejected\" ? (\r\n                     <MDBBadge color=\"danger\" key={dataRow.id}>\r\n                        غير قابل للتقيم\r\n                     </MDBBadge>\r\n                  ) : dataRow.is_ended == \"working\" ? (\r\n                     <MDBBadge color=\"warning\" key={dataRow.id}>\r\n                        لم يقيم\r\n                     </MDBBadge>\r\n                  ) : (\r\n                     <Rating\r\n                        key={dataRow.id}\r\n                        maxRating={5}\r\n                        size=\"huge\"\r\n                        icon=\"star\"\r\n                        disabled\r\n                        defaultRating={dataRow.stars}\r\n                     />\r\n                  )}\r\n               </>\r\n            ),\r\n         };\r\n         setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n      });\r\n   };\r\n\r\n   useEffect(() => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      axios\r\n         .get(serverURL + \"/userdata\", config)\r\n         .then(function (response) {\r\n            console.log(response.data.data.jobs);\r\n            transformData(response.data.data.jobs);\r\n         })\r\n         .catch(console.log);\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            scrollX\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }}\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\addTags.js",["151"],"import React, { useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { MDBJumbotron, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBInput } from \"mdbreact\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\n\r\nexport default function AddTag() {\r\n   const alert = useAlert();\r\n   const [newTag, setNewTag] = useState(\"\");\r\n   const onChangeTag = (event) => {\r\n      console.log(event.target.value);\r\n      setNewTag(event.target.value);\r\n   };\r\n\r\n   const handleNewTag = () => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      const bodyParameters = {\r\n         name: newTag,\r\n      };\r\n      if (newTag) {\r\n         // console.log(bodyParameters);\r\n         axios\r\n            .post(serverURL + \"/tags/store\", bodyParameters, config)\r\n            .then(function (response) {\r\n               if (response.status == 200) {\r\n                  console.log(response);\r\n                  alert.show(\"تم تسجيل الفئه بنجاح\");\r\n               } else {\r\n                  alert.error(\"لا يمكنك اضافه فئه\");\r\n               }\r\n            })\r\n            .catch(console.log);\r\n      } else {\r\n         alert.error(\"يجب ادخال فئه\");\r\n      }\r\n      //console.log(bodyParameters);\r\n      //console.log(token);\r\n   };\r\n\r\n   return (\r\n      <div className=\"custom-new-event-container\">\r\n         <div></div>\r\n         <div className=\"newEvent\">\r\n            <MDBContainer className=\"mt-5 text-center\">\r\n               <MDBRow>\r\n                  <MDBCol>\r\n                     <MDBJumbotron>\r\n                        <h2 className=\"h1 display-3\">قم بأضافه فئه جديده</h2>\r\n                        <form className=\"form-Sizer\">\r\n                           <MDBInput\r\n                              label=\"اسم الفئه\"\r\n                              className=\"textDirection\"\r\n                              onChange={onChangeTag}\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              validate\r\n                              error=\"wrong\"\r\n                              success=\"right\"\r\n                           />\r\n\r\n                           <p className=\"lead mt-3\">\r\n                              <MDBBtn\r\n                                 color=\"primary\"\r\n                                 className=\"textformatter\"\r\n                                 onClick={handleNewTag}>\r\n                                 اضف فئه\r\n                              </MDBBtn>\r\n                           </p>\r\n                        </form>\r\n                     </MDBJumbotron>\r\n                  </MDBCol>\r\n               </MDBRow>\r\n            </MDBContainer>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\components\\VolunteerDetails.jsx",["152","153"],"import React,{useEffect,useState} from 'react'\r\nimport { Button, Modal } from 'semantic-ui-react'\r\nimport \"../styles/customEventDetails.css\"\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { MDBDataTableV5, MDBBadge } from \"mdbreact\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport serverURL from \"../Utils/global\";\r\n\r\nconst VolDetails = (props) => {\r\n  const [open, setOpen] = React.useState(false)\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [myEventsColumns] = useState([\r\n      {\r\n         label: \"اسم المبادره\",\r\n         field: \"orgInfo\",\r\n         width: 100,\r\n      },\r\n      { label: \"اسم العمل\", field: \"eventInfo\", width: 100 },\r\n      {\r\n         label: \"المدينه\",\r\n         field: \"city\",\r\n         width: 100,\r\n      },\r\n      {\r\n         label: \"الحاله\",\r\n         field: \"status\",\r\n         width: 100,\r\n      },\r\n      {\r\n         label: \"تاريخ البدايه\",\r\n         field: \"startDate\",\r\n         width: 100,\r\n      },\r\n      {\r\n         label: \"تاريخ الانتهاء\",\r\n         field: \"endDate\",\r\n         width: 100,\r\n      },\r\n      {\r\n         label: \"التقيم\",\r\n         field: \"rate\",\r\n         width: 100,\r\n      },\r\n   ]);\r\n\r\n    const transformData = (data) => {\r\n      console.log(data);\r\n      data.forEach((dataRow) => {\r\n         let tempObject = {\r\n            eventInfo: dataRow.name,\r\n            orgInfo: dataRow.organization,\r\n            city: dataRow.city,\r\n            startDate: dataRow.registration_date,\r\n            endDate: dataRow.end_date,\r\n            status: (\r\n               <>\r\n                  {dataRow.status === \"pending\" ? (\r\n                     <MDBBadge color=\"warning\" key={dataRow.id}>\r\n                        لم يتم التأكيد\r\n                     </MDBBadge>\r\n                  ) : (\r\n                     <MDBBadge color=\"success\" key={dataRow.id}>\r\n                        مشترك\r\n                     </MDBBadge>\r\n                  )}\r\n               </>\r\n            ),\r\n            rate: (\r\n               <>\r\n                  {dataRow.is_ended === \"working\" ? (\r\n                     <MDBBadge color=\"warning\" key={dataRow.id}>\r\n                        لم يقيم\r\n                     </MDBBadge>\r\n                  ) : (\r\n                     <Rating\r\n                        key={dataRow.id}\r\n                        maxRating={5}\r\n                        size=\"huge\"\r\n                        icon=\"star\"\r\n                        disabled\r\n                        defaultRating={dataRow.stars}\r\n                     />\r\n                  )}\r\n               </>\r\n            ),\r\n         };\r\n         setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n      });\r\n   };\r\n\r\nuseEffect(()=>{      \r\n  \r\n  const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n\r\n        axios\r\n         .get(serverURL + \"/volunteer/show/\"+props.props.vol.id, config)\r\n         .then(function (response) {\r\n          // console.log(\"THIS IS RESPONSE\")\r\n           // console.log(response.data.message.jobs);\r\n            transformData(response.data.message.jobs)\r\n         })\r\n         .catch(console.log);\r\n},[])\r\n\r\n  console.log(props.props);\r\n  return (\r\n    <Modal\r\n\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      trigger={  <a href=\"#\" className=\"text-decoration-none blue-text\">{props.props.vol.name}</a>}\r\n    >\r\n      <Modal.Content scrolling >\r\n        <Modal.Description className=\"descriptionHolder\">\r\n <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }} \r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={() =>  setOpen(false)}>الغاء</Button>       \r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VolDetails\r\n","E:\\MVP\\Projects\\charity\\src\\components\\footer.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\messageModal.jsx",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"154","replacedBy":"158"},{"ruleId":"156","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":10,"column":8,"nodeType":"162","messageId":"163","endLine":10,"endColumn":15},{"ruleId":"160","severity":1,"message":"164","line":19,"column":11,"nodeType":"162","messageId":"163","endLine":19,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":47,"column":7,"nodeType":"167","endLine":47,"endColumn":17,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":106,"column":25,"nodeType":"171","endLine":106,"endColumn":34},{"ruleId":"154","replacedBy":"172"},{"ruleId":"156","replacedBy":"173"},{"ruleId":"165","severity":1,"message":"174","line":42,"column":7,"nodeType":"167","endLine":42,"endColumn":9,"suggestions":"175"},{"ruleId":"160","severity":1,"message":"176","line":14,"column":25,"nodeType":"162","messageId":"163","endLine":14,"endColumn":42},{"ruleId":"160","severity":1,"message":"177","line":17,"column":28,"nodeType":"162","messageId":"163","endLine":17,"endColumn":46},{"ruleId":"178","severity":1,"message":"179","line":124,"column":38,"nodeType":"180","messageId":"181","endLine":124,"endColumn":40},{"ruleId":"178","severity":1,"message":"179","line":124,"column":76,"nodeType":"180","messageId":"181","endLine":124,"endColumn":78},{"ruleId":"178","severity":1,"message":"179","line":148,"column":45,"nodeType":"180","messageId":"181","endLine":148,"endColumn":47},{"ruleId":"165","severity":1,"message":"182","line":167,"column":7,"nodeType":"167","endLine":167,"endColumn":18,"suggestions":"183"},{"ruleId":"178","severity":1,"message":"179","line":188,"column":29,"nodeType":"180","messageId":"181","endLine":188,"endColumn":31},{"ruleId":"178","severity":1,"message":"179","line":193,"column":39,"nodeType":"180","messageId":"181","endLine":193,"endColumn":41},{"ruleId":"165","severity":1,"message":"184","line":208,"column":7,"nodeType":"167","endLine":208,"endColumn":9,"suggestions":"185"},{"ruleId":"160","severity":1,"message":"177","line":11,"column":28,"nodeType":"162","messageId":"163","endLine":11,"endColumn":46},{"ruleId":"178","severity":1,"message":"179","line":75,"column":35,"nodeType":"180","messageId":"181","endLine":75,"endColumn":37},{"ruleId":"178","severity":1,"message":"179","line":79,"column":38,"nodeType":"180","messageId":"181","endLine":79,"endColumn":40},{"ruleId":"178","severity":1,"message":"179","line":92,"column":35,"nodeType":"180","messageId":"181","endLine":92,"endColumn":37},{"ruleId":"178","severity":1,"message":"179","line":96,"column":40,"nodeType":"180","messageId":"181","endLine":96,"endColumn":42},{"ruleId":"178","severity":1,"message":"179","line":30,"column":36,"nodeType":"180","messageId":"181","endLine":30,"endColumn":38},{"ruleId":"165","severity":1,"message":"186","line":107,"column":3,"nodeType":"167","endLine":107,"endColumn":5,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":116,"column":18,"nodeType":"190","endLine":116,"endColumn":73},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],["191"],["192"],"no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar","'usedCityName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'queryEvents'. Either include it or remove the dependency array.","ArrayExpression",["193"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["191"],["192"],"React Hook useEffect has a missing dependency: 'queryMyEvents'. Either include it or remove the dependency array.",["194"],"'setMyEventDetails' is assigned a value but never used.","'setMyEventsColumns' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dataCallback', 'eventDetails.is_ended', 'handleAccept', 'handleReject', and 'handleStars'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'props.location.params' and 'queryMyVolunteers'. Either include them or remove the dependency array.",["196"],"React Hook useEffect has a missing dependency: 'props.props.vol.id'. Either include it or remove the dependency array.",["197"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [queryEvents, usedCity]",{"range":"208","text":"209"},"Update the dependencies array to be: [queryMyEvents]",{"range":"210","text":"211"},"Update the dependencies array to be: [dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",{"range":"212","text":"213"},"Update the dependencies array to be: [props.location.params, queryMyVolunteers]",{"range":"214","text":"215"},"Update the dependencies array to be: [props.props.vol.id]",{"range":"216","text":"217"},[1655,1665],"[queryEvents, usedCity]",[1114,1116],"[queryMyEvents]",[5615,5626],"[dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",[6698,6700],"[props.location.params, queryMyVolunteers]",[3190,3192],"[props.props.vol.id]"]