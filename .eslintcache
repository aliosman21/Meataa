[{"E:\\MVP\\Projects\\charity\\src\\index.js":"1","E:\\MVP\\Projects\\charity\\src\\views\\Profile.js":"2","E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js":"3","E:\\MVP\\Projects\\charity\\src\\components\\features.jsx":"4","E:\\MVP\\Projects\\charity\\src\\components\\header.jsx":"5","E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx":"6","E:\\MVP\\Projects\\charity\\src\\components\\about.jsx":"7","E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx":"8","E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx":"9","E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx":"10","E:\\MVP\\Projects\\charity\\src\\views\\App.js":"11","E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js":"12","E:\\MVP\\Projects\\charity\\src\\views\\Login.js":"13","E:\\MVP\\Projects\\charity\\src\\views\\Register.js":"14","E:\\MVP\\Projects\\charity\\src\\views\\Search.js":"15","E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js":"16","E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js":"17","E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js":"18","E:\\MVP\\Projects\\charity\\src\\Utils\\global.js":"19","E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx":"20","E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx":"21","E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx":"22","E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js":"23","E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js":"24","E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js":"25"},{"size":516,"mtime":1613737899088,"results":"26","hashOfConfig":"27"},{"size":4396,"mtime":1614101977126,"results":"28","hashOfConfig":"27"},{"size":1731,"mtime":1614098120498,"results":"29","hashOfConfig":"27"},{"size":894,"mtime":1612469607259,"results":"30","hashOfConfig":"27"},{"size":997,"mtime":1612223740203,"results":"31","hashOfConfig":"27"},{"size":3393,"mtime":1613936268603,"results":"32","hashOfConfig":"27"},{"size":1283,"mtime":1612224217342,"results":"33","hashOfConfig":"27"},{"size":7864,"mtime":1612224282662,"results":"34","hashOfConfig":"27"},{"size":1040,"mtime":1612224345032,"results":"35","hashOfConfig":"27"},{"size":1528,"mtime":1613670982598,"results":"36","hashOfConfig":"27"},{"size":911,"mtime":1613745235838,"results":"37","hashOfConfig":"27"},{"size":91,"mtime":1612354907545,"results":"38","hashOfConfig":"27"},{"size":4475,"mtime":1614100680763,"results":"39","hashOfConfig":"27"},{"size":9711,"mtime":1614097640139,"results":"40","hashOfConfig":"27"},{"size":7058,"mtime":1614100227371,"results":"41","hashOfConfig":"27"},{"size":9811,"mtime":1614103140726,"results":"42","hashOfConfig":"27"},{"size":8374,"mtime":1614084111320,"results":"43","hashOfConfig":"27"},{"size":268,"mtime":1613562968924,"results":"44","hashOfConfig":"27"},{"size":62,"mtime":1613522665267,"results":"45","hashOfConfig":"27"},{"size":283,"mtime":1613667065520,"results":"46","hashOfConfig":"27"},{"size":7905,"mtime":1613747169478,"results":"47","hashOfConfig":"27"},{"size":2510,"mtime":1614084300812,"results":"48","hashOfConfig":"27"},{"size":4304,"mtime":1614087001914,"results":"49","hashOfConfig":"27"},{"size":7662,"mtime":1614101743114,"results":"50","hashOfConfig":"27"},{"size":4437,"mtime":1614099610331,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1s3xdrw",{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\MVP\\Projects\\charity\\src\\index.js",[],["109","110"],"E:\\MVP\\Projects\\charity\\src\\views\\Profile.js",["111","112","113","114"],"E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\features.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\header.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx",["115","116","117","118","119"],"import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBContainer, MDBIcon } from \"mdbreact\";\nimport Cookies from 'js-cookie';\n\nclass NavbarPage extends Component {\n   constructor(props) {\n    super(props);\n     this.state = {\n  collapseID: \"\"\n  };\n    this.logoutHandler = this.logoutHandler.bind(this);\n  }\n\n logoutHandler = async (e) =>{\n   // e.preventDefault();\n    //will call login Util\n    console.log(e);\n    Cookies.remove('session');\n\n\n  } \n\ntoggleCollapse = collapseID => () =>\n  this.setState(prevState => ({\n  collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n}));\n\nrender() {\n  return (\n      <MDBNavbar color=\"info-color\" dark expand=\"md\" style ={{marginBottom:\"0\"}} >\n        <MDBNavbarBrand href=\"/\"> \n         <img src=\"https://mdbootstrap.com/img/logo/mdb-transparent.png\" height=\"30\" alt=\"\" />\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={this.toggleCollapse(\"navbarCollapse3\")} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.collapseID} navbar>\n          <MDBNavbarNav right>\n             {Cookies.getJSON('session')?\n             \n             (<>\n\n               {Cookies.getJSON('session').type === \"Organization\"?(<>\n              <MDBNavItem style ={{fontSize:\"18px\"}}>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/newEvent\">\n                <MDBIcon icon=\"plus\" className=\"mr-1\" />عمل جديد</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem style ={{fontSize:\"18px\"}}>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/MyEvents\">\n                <MDBIcon icon=\"hands-helping\" className=\"mr-1\" />مبادراتي</MDBNavLink>\n            </MDBNavItem>\n            </>\n              ):(<></>)}\n              <MDBNavItem style ={{fontSize:\"18px\"}}>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/search\">\n                <MDBIcon icon=\"search\" className=\"mr-1\" />بحث</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem style ={{fontSize:\"18px\"}}>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/profile\">\n                <MDBIcon icon=\"sign-in-alt\" className=\"mr-1\" />{Cookies.getJSON('session').name}</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem style ={{fontSize:\"18px\"}}>  \n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/\" onClick={this.logoutHandler}>\n                <MDBIcon icon=\"sign-out-alt\" className=\"mr-1\" />تسجيل الخروج</MDBNavLink>\n            </MDBNavItem>\n\n\n\n             \n             </>)\n             \n             :(<>\n               <MDBNavItem style ={{fontSize:\"18px\"}}>\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/login\">\n                <MDBIcon icon=\"sign-in-alt\" className=\"mr-1\" />تسجيل الدخول</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem style ={{fontSize:\"18px\"}}>  \n              <MDBNavLink className=\"waves-effect waves-light\" to=\"/register\">\n                <MDBIcon icon=\"user-plus\" className=\"mr-1\" />انضم لنا</MDBNavLink>\n            </MDBNavItem>\n             \n             </>)}\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n      \n\n    );\n  }\n}\n\nexport default NavbarPage;","E:\\MVP\\Projects\\charity\\src\\components\\about.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx",[],"E:\\MVP\\Projects\\charity\\src\\views\\App.js",["120","121"],"//import \"../styles/App.css\";\nimport React, { Component } from \"react\";\nimport Header from \"../components/header\";\nimport Features from \"../components/features\";\nimport About from \"../components/about\";\nimport Gallery from \"../components/gallery\";\nimport Team from \"../components/Team\";\nimport Contact from \"../components/contact\";\nimport JsonData from \"../data/data.json\";\n\nclass App extends Component {\n   state = {\n      landingPageData: {},\n   };\n   getlandingPageData() {\n      this.setState({ landingPageData: JsonData });\n   }\n\n   componentDidMount() {\n      this.getlandingPageData();\n   }\n   render() {\n      return (\n         <div>\n            <Header data={this.state.landingPageData.Header} />\n            <About data={this.state.landingPageData.About} />\n            <Gallery />\n            <Contact data={this.state.landingPageData.Contact} />\n         </div>\n      );\n   }\n}\n\nexport default App;\n","E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Login.js",["122"],"E:\\MVP\\Projects\\charity\\src\\views\\Register.js",["123","124","125","126"],"import React, { useState, useEffect } from \"react\";\r\nimport { getTags } from \"../Utils/getTagsUtil\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Contact from \"../components/contact\";\r\nimport Banner from \"../components/banner\";\r\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport JsonData from \"../data/data.json\";\r\nimport SVG from \"../components/svg\";\r\nimport \"../styles/register.css\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nexport default function Register() {\r\n   const [volunteer, setVolunteer] = useState(true);\r\n   const [tags, setTags] = useState([]);\r\n   const [tag1, setTag1] = useState([]);\r\n   const [usedTags] = useState([]);\r\n   const [img, setImg] = useState(\"\");\r\n   const [fullName, setFullName] = useState(\"\");\r\n   const [NID, setNID] = useState(\"\");\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [mobile, setMobile] = useState(\"\");\r\n   const [mobile1, setMobile1] = useState(\"\");\r\n\r\n   const getBase64 = async (e) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n         setImg(reader.result);\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n   };\r\n\r\n   const switchVolunteer = () => {\r\n      setVolunteer(!volunteer);\r\n   };\r\n   const onChangeFullname = (event) => {\r\n      setFullName(event.target.value);\r\n   };\r\n   const onChangeEmail = (event) => {\r\n      setEmail(event.target.value);\r\n   };\r\n   const onChangePassword = (event) => {\r\n      setPassword(event.target.value);\r\n   };\r\n   const onChangeNID = (event) => {\r\n      setNID(event.target.value);\r\n   };\r\n   const onChangeMobile = (event) => {\r\n      setMobile(event.target.value);\r\n   };\r\n   const onChangeMobile1 = (event) => {\r\n      setMobile1(event.target.value);\r\n   };\r\n   const registerNewUser = async (e) => {\r\n      let i = 0;\r\n      for (let tag in tag1) {\r\n         if (tag1[tag] === true) {\r\n            console.log(tag);\r\n            usedTags.push(tags[i][\"id\"]);\r\n         }\r\n         i++;\r\n      }\r\n      const newEntity = {\r\n         name: fullName,\r\n         email: email,\r\n         password: password,\r\n         mobile: mobile,\r\n         mobile2: mobile1,\r\n         NID: NID,\r\n         img: img,\r\n         tags: usedTags,\r\n      };\r\n      console.log(newEntity);\r\n      let requestURL;\r\n      volunteer\r\n         ? (requestURL = serverURL + \"/volunteer/store\")\r\n         : (requestURL = serverURL + \"/organization/store\");\r\n      if (fullName && email && password && mobile && img && usedTags && (NID || mobile1)) {\r\n         axios\r\n            .post(requestURL, newEntity)\r\n            .then(function (response) {\r\n               alert(\"تم التسجيل بنجاح\");\r\n               window.location.href = \"/\";\r\n               console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n               alert(\"حدث خطأ ما\");\r\n               console.log(error);\r\n            });\r\n      } else {\r\n         alert(\"ادخل بيانات صحيحه\");\r\n      }\r\n   };\r\n\r\n   const switchActivity = (e, id) => {\r\n      e.preventDefault();\r\n      setTag1((prevState) => prevState.map((item, idx) => (idx === id ? !item : item)));\r\n   };\r\n   useEffect(() => {\r\n      getTags().then((tagList) => {\r\n         tag1.length = tagList.length; // set array size\r\n         tag1.fill(false);\r\n         setTags(tagList);\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         <Banner data={{ header: \"تسجيل حساب جديد\" }} />\r\n         <div className=\"custom-content-register\">\r\n            <div className=\"custom-container-register\">\r\n               <MDBContainer>\r\n                  <MDBRow>\r\n                     <MDBCol md=\"12\" className=\"d-flex justify-content-center\">\r\n                        <form>\r\n                           <p className=\"text-center mb-4 mt-4 headerText\">انضم لنا</p>\r\n                           <Button\r\n                              size=\"mini\"\r\n                              toggle\r\n                              type=\"button\"\r\n                              active={true}\r\n                              className=\"register-label-button\"\r\n                              onClick={switchVolunteer}>\r\n                              {volunteer ? \"متطوع\" : \"مبادره\"}\r\n                           </Button>\r\n                           <div className=\"\">\r\n                              <MDBInput\r\n                                 label=\"الاسم بالكامل\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"user\"\r\n                                 iconSize\r\n                                 group\r\n                                 onChange={onChangeFullname}\r\n                                 type=\"text\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"البريد الالكتروني\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"envelope\"\r\n                                 group\r\n                                 onChange={onChangeEmail}\r\n                                 type=\"email\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"كلمه السر\"\r\n                                 icon=\"lock\"\r\n                                 className=\"textDirection\"\r\n                                 onChange={onChangePassword}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"password\"\r\n                                 validate\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"رفم الهاتف\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"mobile-alt\"\r\n                                 onChange={onChangeMobile}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"text\"\r\n                                 validate\r\n                              />\r\n                              {volunteer ? (\r\n                                 <MDBInput\r\n                                    label=\"الرقم القومي\"\r\n                                    icon=\"address-card\"\r\n                                    className=\"textDirection\"\r\n                                    group\r\n                                    onChange={onChangeNID}\r\n                                    type=\"text\"\r\n                                    validate\r\n                                    size=\"lg\"\r\n                                    error=\"wrong\"\r\n                                    success=\"right\"\r\n                                 />\r\n                              ) : (\r\n                                 <MDBInput\r\n                                    label=\"رفم هاتف اخر\"\r\n                                    className=\"textDirection\"\r\n                                    icon=\"mobile-alt\"\r\n                                    onChange={onChangeMobile1}\r\n                                    group\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    validate\r\n                                 />\r\n                              )}\r\n\r\n                              <input\r\n                                 type=\"file\"\r\n                                 id=\"img\"\r\n                                 onChange={getBase64}\r\n                                 name=\"img\"\r\n                                 accept=\"image/*\"\r\n                                 className=\"image-button image-uploader\"\r\n                                 required\r\n                              />\r\n                              <div className=\"registerTagList mt-4 mb-4\">\r\n                                 {tags.map((tag) => (\r\n                                    <Button\r\n                                       key={tag.id}\r\n                                       size=\"mini\"\r\n                                       toggle\r\n                                       active={tag1[tag.id - 1]}\r\n                                       onClick={(e) => switchActivity(e, tag.id - 1)}>\r\n                                       {tag.name}\r\n                                    </Button>\r\n                                 ))}\r\n                              </div>\r\n                           </div>\r\n                           <div className=\"text-center \">\r\n                              <MDBBtn\r\n                                 color=\"green\"\r\n                                 className=\"registerBtn\"\r\n                                 type=\"submit\"\r\n                                 onClick={registerNewUser}>\r\n                                 حفظ\r\n                              </MDBBtn>\r\n                           </div>\r\n                        </form>\r\n                     </MDBCol>\r\n                  </MDBRow>\r\n               </MDBContainer>\r\n            </div>\r\n         </div>\r\n         <Contact data={JsonData} />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\Search.js",["127","128","129","130","131","132"],"E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js",["133","134","135","136"],"E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js",["137","138"],"import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { getTags } from \"../Utils/getTagsUtil\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport { MDBJumbotron, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBInput } from \"mdbreact\";\r\nimport SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\nimport { Select } from \"semantic-ui-react\";\r\nimport \"../styles/newEvent.css\";\r\n\r\nexport default function Profile() {\r\n   const [tags, setTags] = useState([]);\r\n   const [cities, setCities] = useState([]);\r\n   const [img, setImg] = useState(\"\");\r\n   const [usedTag, setUsedTag] = useState(\"\");\r\n   const [usedCity, setUsedCity] = useState(\"\");\r\n   const [title, setTitle] = useState(\"\");\r\n   const [description, setDescription] = useState(\"\");\r\n   const [endDate, setEndDate] = useState(\"\");\r\n\r\n   const onChangeDescription = (event) => {\r\n      setDescription(event.target.value);\r\n   };\r\n   const onChangeTitle = (event) => {\r\n      setTitle(event.target.value);\r\n   };\r\n   const onChangeEndDate = (event, data) => {\r\n      let endingDate = new Date(data.value).toISOString().slice(0, 10);\r\n      // console.log(endingDate);\r\n      setEndDate(endingDate);\r\n   };\r\n   const onChangeCity = (e, data) => {\r\n      //console.log(data);\r\n      data.options.forEach((city) => {\r\n         if (data.value == city.value) {\r\n            setUsedCity(city.key);\r\n         }\r\n      });\r\n      console.log(usedCity);\r\n   };\r\n   const onChangeTag = (e, data) => {\r\n      //console.log(data);\r\n      data.options.forEach((tag) => {\r\n         //console.log(tag);\r\n         if (data.value == tag.value) {\r\n            setUsedTag(tag.key);\r\n         }\r\n      });\r\n   };\r\n   useEffect(() => {\r\n      getTags().then((tagList) => {\r\n         setTags(tagList);\r\n      });\r\n      axios\r\n         .get(serverURL + \"/cities/list\")\r\n         .then(function (response) {\r\n            //console.log(response.data.message);\r\n            setCities(response.data.message);\r\n         })\r\n         .catch(console.log);\r\n   }, []);\r\n   useEffect(() => {\r\n      //console.log(tags);\r\n      cities.forEach((city) => {\r\n         Object.defineProperty(city, \"key\", Object.getOwnPropertyDescriptor(city, \"id\"));\r\n         delete city[\"id\"];\r\n         Object.defineProperty(city, \"text\", Object.getOwnPropertyDescriptor(city, \"name\"));\r\n         delete city[\"name\"];\r\n         city.value = city[\"text\"];\r\n      });\r\n      // console.log(tags);\r\n   }, [cities]);\r\n   useEffect(() => {\r\n      //console.log(tags);\r\n      tags.forEach((element) => {\r\n         Object.defineProperty(element, \"key\", Object.getOwnPropertyDescriptor(element, \"id\"));\r\n         delete element[\"id\"];\r\n         Object.defineProperty(element, \"text\", Object.getOwnPropertyDescriptor(element, \"name\"));\r\n         delete element[\"name\"];\r\n         element.value = element[\"text\"];\r\n      });\r\n      // console.log(tags);\r\n   }, [tags]);\r\n\r\n   const handleNewEvent = () => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n\r\n      const bodyParameters = {\r\n         name: title,\r\n         description: description,\r\n         end_date: endDate,\r\n         img: img,\r\n         city_id: usedCity,\r\n         tag_id: usedTag,\r\n      };\r\n      console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/jobs/store\", bodyParameters, config)\r\n         .then(function (response) {\r\n            alert(\"تم تسجيل العمل بنجاح\");\r\n            window.location.href = \"/\";\r\n            console.log(response);\r\n         })\r\n         .catch(console.log);\r\n      //console.log(bodyParameters);\r\n      //console.log(token);\r\n   };\r\n\r\n   const getBase64 = async (e) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n         setImg(reader.result);\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n   };\r\n\r\n   return Cookies.getJSON(\"session\").type === \"Organization\" ? (\r\n      <div className=\"custom-new-event-container\">\r\n         <div></div>\r\n         <div className=\"newEvent\">\r\n            <MDBContainer className=\"mt-5 text-center\">\r\n               <MDBRow>\r\n                  <MDBCol>\r\n                     <MDBJumbotron>\r\n                        <h2 className=\"h1 display-3\">قم بأضافه فعاليه جديده</h2>\r\n                        <form className=\"form-Sizer\">\r\n                           <MDBInput\r\n                              label=\"اسم العمل\"\r\n                              className=\"textDirection\"\r\n                              onChange={onChangeTitle}\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              validate\r\n                              error=\"wrong\"\r\n                              success=\"right\"\r\n                           />\r\n                           <MDBInput\r\n                              type=\"textarea\"\r\n                              label=\"اشرح المحتوي\"\r\n                              onChange={onChangeDescription}\r\n                              rows=\"8\"\r\n                              size=\"lg\"\r\n                              className=\"textDirection\"\r\n                           />\r\n                           <div className=\"input-group mb-3\">\r\n                              <div className=\"input-group-prepend\">\r\n                                 <span className=\"input-group-text\" id=\"inputGroupFileAddon01\">\r\n                                    أرفع\r\n                                 </span>\r\n                              </div>\r\n                              <div className=\"custom-file\">\r\n                                 <input\r\n                                    type=\"file\"\r\n                                    className=\"custom-file-input\"\r\n                                    id=\"inputGroupFile01\"\r\n                                    onChange={getBase64}\r\n                                    aria-describedby=\"inputGroupFileAddon01\"\r\n                                 />\r\n                                 <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\r\n                                    اختر صوره للفعاليه\r\n                                 </label>\r\n                              </div>\r\n                           </div>\r\n                           <div className=\"mb-4\">\r\n                              <SemanticDatepicker\r\n                                 onChange={onChangeEndDate}\r\n                                 datePickerOnly\r\n                                 pointing=\"top left\"\r\n                                 format=\"YYYY-MM-DD\"\r\n                                 filterDate={(date) => {\r\n                                    const now = new Date();\r\n                                    return date >= now;\r\n                                 }}\r\n                              />\r\n                              <span> تاريخ الانتهاء</span>\r\n                           </div>\r\n                           <Select\r\n                              placeholder=\"حدد نوع الفعاليه\"\r\n                              key={tags.key}\r\n                              options={tags}\r\n                              onChange={onChangeTag}\r\n                           />\r\n                           <Select\r\n                              placeholder=\"حدد مكان الفعاليه\"\r\n                              key={cities.key}\r\n                              options={cities}\r\n                              className=\"mt-3\"\r\n                              onChange={onChangeCity}\r\n                           />\r\n                           <p className=\"lead mt-3\">\r\n                              <MDBBtn\r\n                                 color=\"primary\"\r\n                                 className=\"textformatter\"\r\n                                 onClick={handleNewEvent}>\r\n                                 سجل العمل\r\n                              </MDBBtn>\r\n                           </p>\r\n                        </form>\r\n                     </MDBJumbotron>\r\n                  </MDBCol>\r\n               </MDBRow>\r\n            </MDBContainer>\r\n         </div>\r\n      </div>\r\n   ) : (\r\n      //404 page\r\n      <div></div>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js",[],"E:\\MVP\\Projects\\charity\\src\\Utils\\global.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx",["139"],"import React from 'react'\r\nimport { Button, Icon, Image, Modal } from 'semantic-ui-react'\r\nimport \"../styles/customEventDetails.css\"\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\n\r\nimport {\r\n   MDBBtn\r\n} from \"mdbreact\";\r\n\r\n\r\nconst EventDetails = (props) => {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const registerToEvent = () =>{\r\n  const token = Cookies.getJSON(\"session\").token;\r\n  const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n\r\n      //console.log(\"Ya hady\")\r\n      //console.log(props.props.event)\r\n\r\n     const bodyParameters = {\r\n         job_id: props.props.event.id\r\n      }; \r\n      console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/volunteer/request\", bodyParameters, config)\r\n         .then(function (response) {\r\n            alert(\"تم التسجيل بنجاح\");\r\n            //console.log(response);\r\n         })\r\n         .catch(console.log);\r\n      //console.log(bodyParameters);\r\n      //console.log(token);  \r\n   };\r\n  //console.log(props.props);\r\n  return (\r\n    <Modal\r\n\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      trigger={  <MDBBtn className=\"customButtonFont\">عرض المزيد</MDBBtn>}\r\n    >\r\n      <Modal.Header className=\"textRight\">{props.props.event.name}</Modal.Header>\r\n      <Modal.Content image scrolling >\r\n        <Image size='medium'  src={serverURL+props.props.event.img}  wrapped />\r\n        <Modal.Description className=\"descriptionHolder\">\r\n          <p className=\"textRight\">\r\n            {props.props.event.organization}\r\n          </p>\r\n            <p className=\"textRight\">تاريخ الانتهاء: {props.props.event.end_date}</p>\r\n            <p className=\"textRight\">المحتوي</p>\r\n            <p className=\"descriptionFonter\">{props.props.event.description}</p>\r\n         <Image\r\n            src='https://react.semantic-ui.com/images/wireframe/paragraph.png'\r\n            style={{ marginBottom: 10 }}\r\n          />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={() =>  setOpen(false)}>الغاء</Button>\r\n         {Cookies.getJSON('session').type !== \"Organization\"?( <Button onClick={() => {\r\n           registerToEvent();\r\n          setOpen(false)}} positive>\r\n          تسجيل\r\n        </Button>):(<></>)}\r\n       \r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EventDetails\r\n","E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js",["140","141","142","143","144","145","146","147"],"import \"../styles/MyEvents.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Contact from \"../components/contact\";\r\nimport Banner from \"../components/banner\";\r\nimport JsonData from \"../data/data.json\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { MDBDataTableV5, MDBBtn, MDBRating, MDBBadge, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\n/*\r\nexport default function MyEvent() {\r\n   return (\r\n      <div className=\"eventsHolder\">\r\n         <div className=\"eventsTable\">table here</div>\r\n      </div>\r\n   );\r\n}\r\n */\r\n\r\nexport default function MyEvents() {\r\n   /*\r\n   const handleStars = (val) => {\r\n      //console.log(val);\r\n   };\r\n   const [basic] = useState([\r\n      {\r\n         tooltip: \"Very Bad\",\r\n      },\r\n      {\r\n         tooltip: \"Poor\",\r\n      },\r\n      {\r\n         tooltip: \"Ok\",\r\n      },\r\n      {\r\n         tooltip: \"Good\",\r\n      },\r\n      {\r\n         tooltip: \"Excellent\",\r\n      },\r\n   ]);\r\n */\r\n\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [myEventsColumns, setMyEventsColumns] = useState([\r\n      { label: \"اسم الفعاليه\", field: \"eventName\", width: 150 },\r\n      {\r\n         label: \"تاريخ الانتهاء\",\r\n         field: \"endDate\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"عدد المتقدمين\",\r\n         field: \"count\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"حاله الفعاليه\",\r\n         field: \"active\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"عرض المزيد\",\r\n         field: \"moreInfo\",\r\n         width: 150,\r\n      },\r\n   ]);\r\n\r\n   /*    {\r\n            name: \"Garrett Winters\",\r\n            position: \"Accountant\",\r\n            office: \"Tokyo\",\r\n            age: \"63\",\r\n            date: \"2011/07/25\",\r\n            salary: <MDBRating data={basic} getValue={handleStars} />,\r\n         }, */\r\n   useEffect(() => {\r\n      queryMyEvents();\r\n   }, []);\r\n\r\n   const transformData = (data) => {\r\n      //console.log(myEvents);\r\n      // const rows = [];\r\n      data.forEach((dataRow) => {\r\n         let tempObject = {\r\n            eventName: dataRow.name,\r\n            endDate: dataRow.end_date,\r\n            active: (\r\n               <>\r\n                  {dataRow.is_ended == \"working\" ? (\r\n                     <MDBBadge color=\"success\">يعمل</MDBBadge>\r\n                  ) : (\r\n                     <MDBBadge color=\"danger\">انتهي</MDBBadge>\r\n                  )}\r\n               </>\r\n            ),\r\n            count: dataRow.volunteers_count,\r\n            moreInfo: (\r\n               <>\r\n                  <MDBNavLink\r\n                     className=\"waves-effect waves-light\"\r\n                     to={{ pathname: `/EventVolunteer`, params: { dataRow } }}>\r\n                     <MDBBtn color=\"success\" size=\"sm\" className=\"My-events-font\">\r\n                        المزيد\r\n                     </MDBBtn>\r\n                  </MDBNavLink>\r\n               </>\r\n            ),\r\n         };\r\n         setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n      });\r\n   };\r\n   const queryMyEvents = () => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      axios\r\n         .get(serverURL + \"/organization/alljobs\", config)\r\n         .then(function (response) {\r\n            //alert(\"Success\");\r\n            //console.log(response.data.data);\r\n            transformData(response.data.data);\r\n            //console.log(response.data.data);\r\n         })\r\n         .catch(console.log);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }}\r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n      </>\r\n   );\r\n}\r\n/*          <MDBDataTable\r\n            className=\"My-events-font\"\r\n            striped\r\n            borderless\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n            small\r\n            data={data}\r\n         />; */\r\n","E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js",["148","149","150","151","152","153","154","155","156","157","158"],"E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js",["159","160","161","162","163","164","165","166","167","168","169","170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":10,"column":8,"nodeType":"177","messageId":"178","endLine":10,"endColumn":11},{"ruleId":"175","severity":1,"message":"179","line":58,"column":10,"nodeType":"177","messageId":"178","endLine":58,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":81,"column":55,"nodeType":"182","messageId":"183","endLine":81,"endColumn":57},{"ruleId":"180","severity":1,"message":"181","line":93,"column":52,"nodeType":"182","messageId":"183","endLine":93,"endColumn":54},{"ruleId":"175","severity":1,"message":"184","line":2,"column":106,"nodeType":"177","messageId":"178","endLine":2,"endColumn":117},{"ruleId":"175","severity":1,"message":"185","line":3,"column":1,"nodeType":"177","messageId":"178","endLine":3,"endColumn":18},{"ruleId":"175","severity":1,"message":"186","line":3,"column":20,"nodeType":"177","messageId":"178","endLine":3,"endColumn":35},{"ruleId":"175","severity":1,"message":"187","line":3,"column":37,"nodeType":"177","messageId":"178","endLine":3,"endColumn":52},{"ruleId":"175","severity":1,"message":"188","line":3,"column":54,"nodeType":"177","messageId":"178","endLine":3,"endColumn":66},{"ruleId":"175","severity":1,"message":"189","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":16},{"ruleId":"175","severity":1,"message":"190","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":12},{"ruleId":"175","severity":1,"message":"176","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":11},{"ruleId":"175","severity":1,"message":"191","line":9,"column":18,"nodeType":"177","messageId":"178","endLine":9,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":12,"column":8,"nodeType":"177","messageId":"178","endLine":12,"endColumn":11},{"ruleId":"175","severity":1,"message":"192","line":14,"column":10,"nodeType":"177","messageId":"178","endLine":14,"endColumn":13},{"ruleId":"193","severity":1,"message":"194","line":109,"column":7,"nodeType":"195","endLine":109,"endColumn":9,"suggestions":"196"},{"ruleId":"175","severity":1,"message":"197","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"198","line":10,"column":4,"nodeType":"177","messageId":"178","endLine":10,"endColumn":10},{"ruleId":"175","severity":1,"message":"199","line":22,"column":10,"nodeType":"177","messageId":"178","endLine":22,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":46,"column":7,"nodeType":"195","endLine":46,"endColumn":9,"suggestions":"200"},{"ruleId":"193","severity":1,"message":"201","line":64,"column":7,"nodeType":"195","endLine":64,"endColumn":23,"suggestions":"202"},{"ruleId":"180","severity":1,"message":"181","line":69,"column":25,"nodeType":"182","messageId":"183","endLine":69,"endColumn":27},{"ruleId":"175","severity":1,"message":"191","line":10,"column":18,"nodeType":"177","messageId":"178","endLine":10,"endColumn":25},{"ruleId":"180","severity":1,"message":"181","line":78,"column":39,"nodeType":"182","messageId":"183","endLine":78,"endColumn":41},{"ruleId":"193","severity":1,"message":"194","line":110,"column":7,"nodeType":"195","endLine":110,"endColumn":9,"suggestions":"203"},{"ruleId":"180","severity":1,"message":"181","line":171,"column":64,"nodeType":"182","messageId":"183","endLine":171,"endColumn":66},{"ruleId":"180","severity":1,"message":"181","line":36,"column":25,"nodeType":"182","messageId":"183","endLine":36,"endColumn":27},{"ruleId":"180","severity":1,"message":"181","line":46,"column":25,"nodeType":"182","messageId":"183","endLine":46,"endColumn":27},{"ruleId":"175","severity":1,"message":"204","line":2,"column":18,"nodeType":"177","messageId":"178","endLine":2,"endColumn":22},{"ruleId":"175","severity":1,"message":"205","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":15},{"ruleId":"175","severity":1,"message":"206","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":14},{"ruleId":"175","severity":1,"message":"207","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":16},{"ruleId":"175","severity":1,"message":"208","line":10,"column":34,"nodeType":"177","messageId":"178","endLine":10,"endColumn":43},{"ruleId":"175","severity":1,"message":"209","line":10,"column":55,"nodeType":"177","messageId":"178","endLine":10,"endColumn":65},{"ruleId":"175","severity":1,"message":"210","line":46,"column":28,"nodeType":"177","messageId":"178","endLine":46,"endColumn":46},{"ruleId":"193","severity":1,"message":"211","line":80,"column":7,"nodeType":"195","endLine":80,"endColumn":9,"suggestions":"212"},{"ruleId":"180","severity":1,"message":"181","line":91,"column":37,"nodeType":"182","messageId":"183","endLine":91,"endColumn":39},{"ruleId":"175","severity":1,"message":"209","line":7,"column":55,"nodeType":"177","messageId":"178","endLine":7,"endColumn":65},{"ruleId":"175","severity":1,"message":"213","line":7,"column":67,"nodeType":"177","messageId":"178","endLine":7,"endColumn":77},{"ruleId":"175","severity":1,"message":"214","line":12,"column":25,"nodeType":"177","messageId":"178","endLine":12,"endColumn":42},{"ruleId":"175","severity":1,"message":"210","line":16,"column":28,"nodeType":"177","messageId":"178","endLine":16,"endColumn":46},{"ruleId":"180","severity":1,"message":"181","line":112,"column":38,"nodeType":"182","messageId":"183","endLine":112,"endColumn":40},{"ruleId":"180","severity":1,"message":"181","line":112,"column":76,"nodeType":"182","messageId":"183","endLine":112,"endColumn":78},{"ruleId":"180","severity":1,"message":"181","line":136,"column":45,"nodeType":"182","messageId":"183","endLine":136,"endColumn":47},{"ruleId":"193","severity":1,"message":"215","line":152,"column":7,"nodeType":"195","endLine":152,"endColumn":18,"suggestions":"216"},{"ruleId":"180","severity":1,"message":"181","line":173,"column":29,"nodeType":"182","messageId":"183","endLine":173,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":178,"column":39,"nodeType":"182","messageId":"183","endLine":178,"endColumn":41},{"ruleId":"193","severity":1,"message":"217","line":193,"column":7,"nodeType":"195","endLine":193,"endColumn":9,"suggestions":"218"},{"ruleId":"175","severity":1,"message":"198","line":7,"column":26,"nodeType":"177","messageId":"178","endLine":7,"endColumn":32},{"ruleId":"175","severity":1,"message":"209","line":7,"column":55,"nodeType":"177","messageId":"178","endLine":7,"endColumn":65},{"ruleId":"175","severity":1,"message":"213","line":7,"column":67,"nodeType":"177","messageId":"178","endLine":7,"endColumn":77},{"ruleId":"175","severity":1,"message":"214","line":12,"column":25,"nodeType":"177","messageId":"178","endLine":12,"endColumn":42},{"ruleId":"175","severity":1,"message":"219","line":15,"column":25,"nodeType":"177","messageId":"178","endLine":15,"endColumn":40},{"ruleId":"175","severity":1,"message":"210","line":16,"column":28,"nodeType":"177","messageId":"178","endLine":16,"endColumn":46},{"ruleId":"180","severity":1,"message":"181","line":60,"column":45,"nodeType":"182","messageId":"183","endLine":60,"endColumn":47},{"ruleId":"193","severity":1,"message":"220","line":76,"column":7,"nodeType":"195","endLine":76,"endColumn":18,"suggestions":"221"},{"ruleId":"175","severity":1,"message":"222","line":78,"column":10,"nodeType":"177","messageId":"178","endLine":78,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":97,"column":29,"nodeType":"182","messageId":"183","endLine":97,"endColumn":31},{"ruleId":"180","severity":1,"message":"181","line":102,"column":39,"nodeType":"182","messageId":"183","endLine":102,"endColumn":41},{"ruleId":"175","severity":1,"message":"223","line":118,"column":13,"nodeType":"177","messageId":"178","endLine":118,"endColumn":19},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'SVG' is defined but never used.","Identifier","unusedVar","'getAllAchievments' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MDBDropdown' is defined but never used.","'MDBDropdownToggle' is defined but never used.","'MDBDropdownMenu' is defined but never used.","'MDBDropdownItem' is defined but never used.","'MDBContainer' is defined but never used.","'Features' is defined but never used.","'Team' is defined but never used.","'MDBIcon' is defined but never used.","'act' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tag1'. Either include it or remove the dependency array.","ArrayExpression",["226"],"'Link' is defined but never used.","'MDBBtn' is defined but never used.","'AnimateOnChange' is defined but never used.",["227"],"React Hook useEffect has a missing dependency: 'queryEvents'. Either include it or remove the dependency array.",["228"],["229"],"'Icon' is defined but never used.","'Contact' is defined but never used.","'Banner' is defined but never used.","'JsonData' is defined but never used.","'MDBRating' is defined but never used.","'MDBNavItem' is defined but never used.","'setMyEventsColumns' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'queryMyEvents'. Either include it or remove the dependency array.",["230"],"'MDBNavLink' is defined but never used.","'setMyEventDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataCallback', 'eventDetails.is_ended', 'handleAccept', 'handleReject', and 'handleStars'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'props.location.params' and 'queryMyVolunteers'. Either include them or remove the dependency array.",["232"],"'setDataCallback' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataCallback', 'eventDetails.is_ended', and 'handleStars'. Either include them or remove the dependency array.",["233"],"'transformData' is assigned a value but never used.","'config' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},{"desc":"237","fix":"238"},{"desc":"234","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Update the dependencies array to be: [tag1]",{"range":"248","text":"249"},{"range":"250","text":"249"},"Update the dependencies array to be: [queryEvents, tag1, usedCity]",{"range":"251","text":"252"},{"range":"253","text":"249"},"Update the dependencies array to be: [queryMyEvents]",{"range":"254","text":"255"},"Update the dependencies array to be: [dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",{"range":"256","text":"257"},"Update the dependencies array to be: [props.location.params, queryMyVolunteers]",{"range":"258","text":"259"},"Update the dependencies array to be: [dataCallback, eventDetails.is_ended, handleStars, starRates]",{"range":"260","text":"261"},[3501,3503],"[tag1]",[1490,1492],[2030,2046],"[queryEvents, tag1, usedCity]",[3776,3778],[1916,1918],"[queryMyEvents]",[5082,5093],"[dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",[6165,6167],"[props.location.params, queryMyVolunteers]",[2488,2499],"[dataCallback, eventDetails.is_ended, handleStars, starRates]"]