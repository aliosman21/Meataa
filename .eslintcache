[{"E:\\MVP\\Projects\\charity\\src\\index.js":"1","E:\\MVP\\Projects\\charity\\src\\views\\Profile.js":"2","E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js":"3","E:\\MVP\\Projects\\charity\\src\\components\\features.jsx":"4","E:\\MVP\\Projects\\charity\\src\\components\\header.jsx":"5","E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx":"6","E:\\MVP\\Projects\\charity\\src\\components\\about.jsx":"7","E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx":"8","E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx":"9","E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx":"10","E:\\MVP\\Projects\\charity\\src\\views\\App.js":"11","E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js":"12","E:\\MVP\\Projects\\charity\\src\\views\\Login.js":"13","E:\\MVP\\Projects\\charity\\src\\views\\Register.js":"14","E:\\MVP\\Projects\\charity\\src\\views\\Search.js":"15","E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js":"16","E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js":"17","E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js":"18","E:\\MVP\\Projects\\charity\\src\\Utils\\global.js":"19","E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx":"20","E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx":"21","E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx":"22","E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js":"23","E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js":"24","E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js":"25","E:\\MVP\\Projects\\charity\\src\\views\\addTags.js":"26","E:\\MVP\\Projects\\charity\\src\\components\\VolunteerDetails.jsx":"27"},{"size":516,"mtime":1613737899088,"results":"28","hashOfConfig":"29"},{"size":3940,"mtime":1614118594704,"results":"30","hashOfConfig":"29"},{"size":1846,"mtime":1614119541051,"results":"31","hashOfConfig":"29"},{"size":894,"mtime":1612469607259,"results":"32","hashOfConfig":"29"},{"size":665,"mtime":1614184656811,"results":"33","hashOfConfig":"29"},{"size":4071,"mtime":1614187089632,"results":"34","hashOfConfig":"29"},{"size":1283,"mtime":1612224217342,"results":"35","hashOfConfig":"29"},{"size":7864,"mtime":1612224282662,"results":"36","hashOfConfig":"29"},{"size":1040,"mtime":1612224345032,"results":"37","hashOfConfig":"29"},{"size":1528,"mtime":1613670982598,"results":"38","hashOfConfig":"29"},{"size":911,"mtime":1613745235838,"results":"39","hashOfConfig":"29"},{"size":91,"mtime":1612354907545,"results":"40","hashOfConfig":"29"},{"size":4682,"mtime":1614115196338,"results":"41","hashOfConfig":"29"},{"size":9711,"mtime":1614097640139,"results":"42","hashOfConfig":"29"},{"size":5978,"mtime":1614118855284,"results":"43","hashOfConfig":"29"},{"size":9837,"mtime":1614117352279,"results":"44","hashOfConfig":"29"},{"size":9289,"mtime":1614185175666,"results":"45","hashOfConfig":"29"},{"size":268,"mtime":1613562968924,"results":"46","hashOfConfig":"29"},{"size":62,"mtime":1613522665267,"results":"47","hashOfConfig":"29"},{"size":283,"mtime":1613667065520,"results":"48","hashOfConfig":"29"},{"size":7905,"mtime":1613747169478,"results":"49","hashOfConfig":"29"},{"size":2506,"mtime":1614187196718,"results":"50","hashOfConfig":"29"},{"size":3694,"mtime":1614185574478,"results":"51","hashOfConfig":"29"},{"size":8221,"mtime":1614186760456,"results":"52","hashOfConfig":"29"},{"size":2132,"mtime":1614118436255,"results":"53","hashOfConfig":"29"},{"size":2744,"mtime":1614120176547,"results":"54","hashOfConfig":"29"},{"size":1437,"mtime":1614186710968,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1s3xdrw",{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\MVP\\Projects\\charity\\src\\index.js",[],["119","120"],"E:\\MVP\\Projects\\charity\\src\\views\\Profile.js",["121","122","123","124","125","126","127"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/profile.css\";\r\nimport Banner from \"../components/banner\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MDBDataTableV5, MDBBtn, MDBRating, MDBBadge, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport axios from \"axios\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nexport default function Profile() {\r\n   const [isFlipped, setIsFlipped] = useState(false);\r\n   const getDataFromCookie = () => {\r\n      let profileData = Cookies.getJSON(\"session\");\r\n      let data = {\r\n         name: profileData.name,\r\n         ssn: profileData.NID,\r\n         mobile: profileData.mobile,\r\n         pic: serverURL + profileData.img,\r\n         email: profileData.email,\r\n         mobile2: profileData.mobile2,\r\n      };\r\n      return data;\r\n   };\r\n\r\n   const handleFlip = (e) => {\r\n      e.preventDefault();\r\n      setIsFlipped(!isFlipped);\r\n   };\r\n\r\n   useEffect(() => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      if (!isFlipped) {\r\n         axios\r\n            .get(serverURL + \"/userdata\", config)\r\n            .then(function (response) {})\r\n            .catch(console.log);\r\n      }\r\n   }, [isFlipped]);\r\n\r\n   const history = useHistory();\r\n   const ChangeInfo = () => history.push(\"/setInfo\");\r\n\r\n   const [data] = useState(() => getDataFromCookie());\r\n\r\n   return Cookies.getJSON(\"session\") ? (\r\n      <>\r\n         <Banner data={{ header: \"الحساب الشخصي\" }} />\r\n         <div className=\"custom-content-profile\">\r\n            <div></div>\r\n            <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n               <div className=\"FrontCard\">\r\n                  <div className=\"information\">\r\n                     <p className=\"profileFont\"> {data.name} :الاسم</p>\r\n                     <p className=\"profileFont\">{data.email} :البريد الالكتروني</p>\r\n                     <p className=\"profileFont\">رقم الهاتف:{data.mobile}</p>\r\n                     {Cookies.getJSON(\"session\").type == \"Volunteer\" ? (\r\n                        <p className=\"profileFont\">الرقم القومي:{data.ssn}</p>\r\n                     ) : (\r\n                        <p className=\"profileFont\">رقم اخر:{data.mobile}</p>\r\n                     )}\r\n                  </div>\r\n                  <div className=\"imageHolder\">\r\n                     <img src={data.pic} alt=\"profile\" className=\"profileImage\" />\r\n                  </div>\r\n                  <div className=\"editButtonHolder\">\r\n                     <Button content=\"تحديث البيانات\" secondary onClick={ChangeInfo} />\r\n                  </div>\r\n                  {Cookies.getJSON(\"session\").type == \"Volunteer\" ? (\r\n                     <div className=\"flipButtonHolder\">\r\n                        <Button content=\"الأعمال\" primary onClick={handleFlip} />\r\n                     </div>\r\n                  ) : (\r\n                     <></>\r\n                  )}\r\n               </div>\r\n\r\n               <div className=\"BackCard\">\r\n                  <MDBNavLink\r\n                     className=\"waves-effect waves-light navShortner\"\r\n                     to={{ pathname: `#` }}>\r\n                     <Button content=\"المعلومات الشخصيه\" primary onClick={handleFlip} />\r\n                  </MDBNavLink>\r\n                  <MDBNavLink\r\n                     className=\"waves-effect waves-light navShortner\"\r\n                     to={{ pathname: `/allJobs` }}>\r\n                     <Button content=\"عرض كل الأعمال\" primary />\r\n                  </MDBNavLink>\r\n               </div>\r\n            </ReactCardFlip>\r\n         </div>\r\n      </>\r\n   ) : (\r\n      //404 page\r\n      <div></div>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\features.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\header.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx",["128","129","130","131","132"],"E:\\MVP\\Projects\\charity\\src\\components\\about.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx",[],"E:\\MVP\\Projects\\charity\\src\\views\\App.js",["133","134"],"//import \"../styles/App.css\";\nimport React, { Component } from \"react\";\nimport Header from \"../components/header\";\nimport Features from \"../components/features\";\nimport About from \"../components/about\";\nimport Gallery from \"../components/gallery\";\nimport Team from \"../components/Team\";\nimport Contact from \"../components/contact\";\nimport JsonData from \"../data/data.json\";\n\nclass App extends Component {\n   state = {\n      landingPageData: {},\n   };\n   getlandingPageData() {\n      this.setState({ landingPageData: JsonData });\n   }\n\n   componentDidMount() {\n      this.getlandingPageData();\n   }\n   render() {\n      return (\n         <div>\n            <Header data={this.state.landingPageData.Header} />\n            <About data={this.state.landingPageData.About} />\n            <Gallery />\n            <Contact data={this.state.landingPageData.Contact} />\n         </div>\n      );\n   }\n}\n\nexport default App;\n","E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Login.js",["135"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Cookies from \"js-cookie\";\r\nimport Banner from \"../components/banner\";\r\nimport JsonData from \"../data/data.json\";\r\nimport \"../styles/login.css\";\r\nimport Contact from \"../components/contact\";\r\nimport SVG from \"../components/svg\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\r\n\r\nexport default class Login extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         email: \"\",\r\n         password: \"\",\r\n      };\r\n   }\r\n\r\n   handleFieldChange(e) {\r\n      this.setState((state) => {\r\n         return { [e.target.name]: e.target.value };\r\n      });\r\n   }\r\n\r\n   loginHandler(e) {\r\n      e.preventDefault();\r\n      console.log(this.state.email);\r\n      console.log(this.state.password);\r\n      let loginData = {\r\n         email: this.state.email,\r\n         password: this.state.password,\r\n      };\r\n\r\n      axios\r\n         .post(serverURL + \"/login\", loginData)\r\n         .then((res) => {\r\n            if (res.status === 200) {\r\n               let in1Hour = 1 / 24;\r\n               Cookies.set(\r\n                  \"session\",\r\n                  {\r\n                     token: res.data[0].original.token,\r\n                     email: res.data[1].email,\r\n                     img: res.data[1].img,\r\n                     NID: res.data[1].NID,\r\n                     tags: res.data[1].tags,\r\n                     name: res.data[1].name,\r\n                     mobile2: res.data[1].mobile2,\r\n                     mobile: res.data[1].mobile,\r\n                     type: res.data[1].type,\r\n                  },\r\n                  {\r\n                     expires: in1Hour,\r\n                  }\r\n               );\r\n               console.log(res);\r\n               console.log(\"Cookie is\");\r\n               console.log(Cookies.getJSON(\"session\"));\r\n               window.location.href = \"/\";\r\n            } else {\r\n               alert(\"حدث حطأ ما\");\r\n            }\r\n         })\r\n         .catch(console.log);\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <>\r\n            <Banner data={{ header: \"تسجيل الدخول\" }} />\r\n            <div className=\"custom-content-login\">\r\n               <MDBContainer>\r\n                  <MDBRow>\r\n                     <MDBCol md=\"3\"></MDBCol>\r\n                     <MDBCol md=\"6\" className=\"loginFormHolder\">\r\n                        <form>\r\n                           <p className=\"h5 text-center mb-4 mt-4 headerText\">سجل دخولك</p>\r\n                           <div className=\"grey-text\">\r\n                              <MDBInput\r\n                                 className=\"textDirection\"\r\n                                 label=\"البريد الالكتروني\"\r\n                                 icon=\"envelope\"\r\n                                 name=\"email\"\r\n                                 size=\"lg\"\r\n                                 group\r\n                                 type=\"email\"\r\n                                 validate\r\n                                 onChange={(e) => {\r\n                                    this.handleFieldChange(e);\r\n                                 }}\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"كلمه السر\"\r\n                                 icon=\"lock\"\r\n                                 group\r\n                                 name=\"password\"\r\n                                 size=\"lg\"\r\n                                 className=\"textDirection\"\r\n                                 onChange={(e) => {\r\n                                    this.handleFieldChange(e);\r\n                                 }}\r\n                                 type=\"password\"\r\n                                 validate\r\n                              />\r\n                           </div>\r\n                           <div className=\"text-center\">\r\n                              <MDBBtn\r\n                                 color=\"green\"\r\n                                 type=\"submit\"\r\n                                 className=\"loginBtn\"\r\n                                 onClick={(e) => this.loginHandler(e)}>\r\n                                 سجل الدخول\r\n                              </MDBBtn>\r\n                           </div>\r\n                        </form>\r\n                     </MDBCol>\r\n                  </MDBRow>\r\n               </MDBContainer>\r\n            </div>\r\n            <Contact data={JsonData} />\r\n         </>\r\n      );\r\n   }\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\Register.js",["136","137","138","139"],"import React, { useState, useEffect } from \"react\";\r\nimport { getTags } from \"../Utils/getTagsUtil\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Contact from \"../components/contact\";\r\nimport Banner from \"../components/banner\";\r\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport JsonData from \"../data/data.json\";\r\nimport SVG from \"../components/svg\";\r\nimport \"../styles/register.css\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nexport default function Register() {\r\n   const [volunteer, setVolunteer] = useState(true);\r\n   const [tags, setTags] = useState([]);\r\n   const [tag1, setTag1] = useState([]);\r\n   const [usedTags] = useState([]);\r\n   const [img, setImg] = useState(\"\");\r\n   const [fullName, setFullName] = useState(\"\");\r\n   const [NID, setNID] = useState(\"\");\r\n   const [email, setEmail] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [mobile, setMobile] = useState(\"\");\r\n   const [mobile1, setMobile1] = useState(\"\");\r\n\r\n   const getBase64 = async (e) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n         setImg(reader.result);\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n   };\r\n\r\n   const switchVolunteer = () => {\r\n      setVolunteer(!volunteer);\r\n   };\r\n   const onChangeFullname = (event) => {\r\n      setFullName(event.target.value);\r\n   };\r\n   const onChangeEmail = (event) => {\r\n      setEmail(event.target.value);\r\n   };\r\n   const onChangePassword = (event) => {\r\n      setPassword(event.target.value);\r\n   };\r\n   const onChangeNID = (event) => {\r\n      setNID(event.target.value);\r\n   };\r\n   const onChangeMobile = (event) => {\r\n      setMobile(event.target.value);\r\n   };\r\n   const onChangeMobile1 = (event) => {\r\n      setMobile1(event.target.value);\r\n   };\r\n   const registerNewUser = async (e) => {\r\n      let i = 0;\r\n      for (let tag in tag1) {\r\n         if (tag1[tag] === true) {\r\n            console.log(tag);\r\n            usedTags.push(tags[i][\"id\"]);\r\n         }\r\n         i++;\r\n      }\r\n      const newEntity = {\r\n         name: fullName,\r\n         email: email,\r\n         password: password,\r\n         mobile: mobile,\r\n         mobile2: mobile1,\r\n         NID: NID,\r\n         img: img,\r\n         tags: usedTags,\r\n      };\r\n      console.log(newEntity);\r\n      let requestURL;\r\n      volunteer\r\n         ? (requestURL = serverURL + \"/volunteer/store\")\r\n         : (requestURL = serverURL + \"/organization/store\");\r\n      if (fullName && email && password && mobile && img && usedTags && (NID || mobile1)) {\r\n         axios\r\n            .post(requestURL, newEntity)\r\n            .then(function (response) {\r\n               alert(\"تم التسجيل بنجاح\");\r\n               window.location.href = \"/\";\r\n               console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n               alert(\"حدث خطأ ما\");\r\n               console.log(error);\r\n            });\r\n      } else {\r\n         alert(\"ادخل بيانات صحيحه\");\r\n      }\r\n   };\r\n\r\n   const switchActivity = (e, id) => {\r\n      e.preventDefault();\r\n      setTag1((prevState) => prevState.map((item, idx) => (idx === id ? !item : item)));\r\n   };\r\n   useEffect(() => {\r\n      getTags().then((tagList) => {\r\n         tag1.length = tagList.length; // set array size\r\n         tag1.fill(false);\r\n         setTags(tagList);\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         <Banner data={{ header: \"تسجيل حساب جديد\" }} />\r\n         <div className=\"custom-content-register\">\r\n            <div className=\"custom-container-register\">\r\n               <MDBContainer>\r\n                  <MDBRow>\r\n                     <MDBCol md=\"12\" className=\"d-flex justify-content-center\">\r\n                        <form>\r\n                           <p className=\"text-center mb-4 mt-4 headerText\">انضم لنا</p>\r\n                           <Button\r\n                              size=\"mini\"\r\n                              toggle\r\n                              type=\"button\"\r\n                              active={true}\r\n                              className=\"register-label-button\"\r\n                              onClick={switchVolunteer}>\r\n                              {volunteer ? \"متطوع\" : \"مبادره\"}\r\n                           </Button>\r\n                           <div className=\"\">\r\n                              <MDBInput\r\n                                 label=\"الاسم بالكامل\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"user\"\r\n                                 iconSize\r\n                                 group\r\n                                 onChange={onChangeFullname}\r\n                                 type=\"text\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"البريد الالكتروني\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"envelope\"\r\n                                 group\r\n                                 onChange={onChangeEmail}\r\n                                 type=\"email\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"كلمه السر\"\r\n                                 icon=\"lock\"\r\n                                 className=\"textDirection\"\r\n                                 onChange={onChangePassword}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"password\"\r\n                                 validate\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"رفم الهاتف\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"mobile-alt\"\r\n                                 onChange={onChangeMobile}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"text\"\r\n                                 validate\r\n                              />\r\n                              {volunteer ? (\r\n                                 <MDBInput\r\n                                    label=\"الرقم القومي\"\r\n                                    icon=\"address-card\"\r\n                                    className=\"textDirection\"\r\n                                    group\r\n                                    onChange={onChangeNID}\r\n                                    type=\"text\"\r\n                                    validate\r\n                                    size=\"lg\"\r\n                                    error=\"wrong\"\r\n                                    success=\"right\"\r\n                                 />\r\n                              ) : (\r\n                                 <MDBInput\r\n                                    label=\"رفم هاتف اخر\"\r\n                                    className=\"textDirection\"\r\n                                    icon=\"mobile-alt\"\r\n                                    onChange={onChangeMobile1}\r\n                                    group\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    validate\r\n                                 />\r\n                              )}\r\n\r\n                              <input\r\n                                 type=\"file\"\r\n                                 id=\"img\"\r\n                                 onChange={getBase64}\r\n                                 name=\"img\"\r\n                                 accept=\"image/*\"\r\n                                 className=\"image-button image-uploader\"\r\n                                 required\r\n                              />\r\n                              <div className=\"registerTagList mt-4 mb-4\">\r\n                                 {tags.map((tag) => (\r\n                                    <Button\r\n                                       key={tag.id}\r\n                                       size=\"mini\"\r\n                                       toggle\r\n                                       active={tag1[tag.id - 1]}\r\n                                       onClick={(e) => switchActivity(e, tag.id - 1)}>\r\n                                       {tag.name}\r\n                                    </Button>\r\n                                 ))}\r\n                              </div>\r\n                           </div>\r\n                           <div className=\"text-center \">\r\n                              <MDBBtn\r\n                                 color=\"green\"\r\n                                 className=\"registerBtn\"\r\n                                 type=\"submit\"\r\n                                 onClick={registerNewUser}>\r\n                                 حفظ\r\n                              </MDBBtn>\r\n                           </div>\r\n                        </form>\r\n                     </MDBCol>\r\n                  </MDBRow>\r\n               </MDBContainer>\r\n            </div>\r\n         </div>\r\n         <Contact data={JsonData} />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\Search.js",["140","141","142","143","144","145"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Contact from \"../components/contact\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport Banner from \"../components/banner\";\r\nimport JsonData from \"../data/data.json\";\r\nimport { Select } from \"semantic-ui-react\";\r\nimport {\r\n   MDBBtn,\r\n   MDBCard,\r\n   MDBCardBody,\r\n   MDBCardImage,\r\n   MDBCardTitle,\r\n   MDBCardText,\r\n   MDBCol,\r\n} from \"mdbreact\";\r\n\r\nimport axios from \"axios\";\r\nimport EventDetails from \"../components/EventDetails\";\r\nimport Cookies from \"js-cookie\";\r\nimport { AnimateOnChange } from \"react-animation\";\r\nimport { getTags } from \"../Utils/getTagsUtil\";\r\nimport \"../styles/search.css\";\r\n\r\nexport default function Search() {\r\n   const [tags, setTags] = useState([]);\r\n   const [tag1, setTag1] = useState([]);\r\n   const [events, setEvents] = useState([]);\r\n   const [usedTags, setUsedTags] = useState([]);\r\n   const [cities, setCities] = useState([]);\r\n   const [usedCityName, setUsedCityName] = useState(\"\");\r\n   const [usedCity, setUsedCity] = useState(\"\");\r\n   useEffect(() => {\r\n      getTags().then((tagList) => {\r\n         tag1.length = tagList.length; // set array size\r\n         tag1.fill(false);\r\n         setTags(tagList);\r\n      });\r\n      axios\r\n         .get(serverURL + \"/cities/list\")\r\n         .then(function (response) {\r\n            //console.log(response.data.message);\r\n            setCities(response.data.message);\r\n         })\r\n         .catch(console.log);\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      //console.log(tags);\r\n      cities.forEach((city) => {\r\n         Object.defineProperty(city, \"key\", Object.getOwnPropertyDescriptor(city, \"id\"));\r\n         delete city[\"id\"];\r\n         Object.defineProperty(city, \"text\", Object.getOwnPropertyDescriptor(city, \"name\"));\r\n         delete city[\"name\"];\r\n         city.value = city[\"text\"];\r\n      });\r\n      // console.log(tags);\r\n   }, [cities]);\r\n\r\n   useEffect(() => {\r\n      //console.log(tag1);\r\n      console.log(usedCity);\r\n      queryEvents();\r\n   }, [tag1, usedCity]);\r\n\r\n   const onChangeCity = (e, data) => {\r\n      //console.log(data);\r\n      data.options.forEach((city) => {\r\n         if (data.value == city.value) {\r\n            setUsedCity(city.key);\r\n            setUsedCityName(city.name);\r\n         }\r\n      });\r\n   };\r\n   const switchActivity = (e, id) => {\r\n      e.preventDefault();\r\n      setTag1((prevState) => prevState.map((item, idx) => (idx === id ? !item : item)));\r\n      //queryEvents();\r\n   };\r\n\r\n   const queryEvents = () => {\r\n      //console.log(usedTags);\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      let i = 0;\r\n      for (let tag in tag1) {\r\n         if (tag1[tag] === true && !usedTags.includes(tags[i][\"id\"])) {\r\n            usedTags.push(tags[i][\"id\"]);\r\n         }\r\n         i++;\r\n      }\r\n\r\n      const bodyParameters = {\r\n         tags: usedTags,\r\n         city_id: usedCity,\r\n      };\r\n      //console.log(bodyParameters);\r\n      // console.log(usedCity);\r\n      axios\r\n         .post(serverURL + \"/jobs/jobsbytags\", bodyParameters, config)\r\n         .then(function (response) {\r\n            //alert(\"Success\");\r\n            setEvents(response.data.data);\r\n            // console.log(response.data.data);\r\n            //console.log(events);\r\n         })\r\n         .catch(console.log);\r\n      setUsedTags([]);\r\n      //setUsedCity(\"\");\r\n      //console.log(bodyParameters);\r\n      //console.log(token);\r\n   };\r\n\r\n   return Cookies.getJSON(\"session\") ? (\r\n      <>\r\n         <Banner data={{ header: \"الفعاليات الجديده\" }} />\r\n         <div className=\"custom-search-content\">\r\n            <div className=\"searchTagsList\">\r\n               <div className=\"tagsHolder\">\r\n                  <span className=\"mr-3\">\r\n                     <Select\r\n                        placeholder={usedCity}\r\n                        key={cities.key}\r\n                        options={cities}\r\n                        className=\"mt-3\"\r\n                        value={usedCityName}\r\n                        onChange={onChangeCity}\r\n                     />\r\n                  </span>\r\n                  <span>\r\n                     {tags.map((tag) => (\r\n                        <Button\r\n                           key={tag.id}\r\n                           className=\"customSearchTagBtn\"\r\n                           size=\"mini\"\r\n                           toggle\r\n                           active={tag1[tag.id - 1]}\r\n                           onClick={(e) => switchActivity(e, tag.id - 1)}>\r\n                           {tag.name}\r\n                        </Button>\r\n                     ))}\r\n                  </span>\r\n               </div>\r\n            </div>\r\n            <div className=\"eventsList\">\r\n               {events.map((event) => (\r\n                  <MDBCol style={{ maxWidth: \"22rem\" }}>\r\n                     <MDBCard className=\"card-event\">\r\n                        <MDBCardImage\r\n                           className=\"img-fluid customImage\"\r\n                           src={serverURL + \"/\" + event.img}\r\n                           waves\r\n                        />\r\n                        <MDBCardBody>\r\n                           <MDBCardTitle className=\"customCardFont\">{event.name}</MDBCardTitle>\r\n                           <MDBCardText className=\"customCardFont description-cut\">\r\n                              {event.description}\r\n                           </MDBCardText>\r\n                           <div>\r\n                              <EventDetails props={{ event: event }} />\r\n                           </div>\r\n                        </MDBCardBody>\r\n                     </MDBCard>\r\n                  </MDBCol>\r\n               ))}\r\n            </div>\r\n         </div>\r\n         <Contact data={JsonData} />\r\n      </>\r\n   ) : (\r\n      //404 page\r\n      <div></div>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js",["146","147","148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport { getTags } from \"../Utils/getTagsUtil\";\r\nimport { MDBInput } from \"mdbreact\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Contact from \"../components/contact\";\r\nimport Banner from \"../components/banner\";\r\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport JsonData from \"../data/data.json\";\r\nimport \"../styles/register.css\";\r\n\r\nexport default function InfoChange() {\r\n   const [tags, setTags] = useState([]);\r\n   const [tag1, setTag1] = useState([]);\r\n   const [usedTags] = useState([]);\r\n   const [img, setImg] = useState(\"\");\r\n   const [fullName, setFullName] = useState(Cookies.getJSON(\"session\").name);\r\n   const [NID, setNID] = useState(Cookies.getJSON(\"session\").NID);\r\n   const [email, setEmail] = useState(Cookies.getJSON(\"session\").email);\r\n   const [password, setPassword] = useState(\"\");\r\n   const [mobile, setMobile] = useState(Cookies.getJSON(\"session\").mobile);\r\n   const [mobile1, setMobile1] = useState(Cookies.getJSON(\"session\").mobile1);\r\n\r\n   const getBase64 = async (e) => {\r\n      const reader = new FileReader();\r\n      reader.onload = function (e) {\r\n         setImg(reader.result);\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n   };\r\n\r\n   const onChangeFullname = (event) => {\r\n      setFullName(event.target.value);\r\n   };\r\n   const onChangeEmail = (event) => {\r\n      setEmail(event.target.value);\r\n   };\r\n   const onChangePassword = (event) => {\r\n      setPassword(event.target.value);\r\n   };\r\n   const onChangeNID = (event) => {\r\n      setNID(event.target.value);\r\n   };\r\n   const onChangeMobile = (event) => {\r\n      setMobile(event.target.value);\r\n   };\r\n   const onChangeMobile1 = (event) => {\r\n      setMobile1(event.target.value);\r\n   };\r\n   const editUserData = async (e) => {\r\n      e.preventDefault();\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      let i = 0;\r\n      for (let tag in tag1) {\r\n         if (tag1[tag] === true) {\r\n            console.log(tag);\r\n            usedTags.push(tags[i][\"id\"]);\r\n         }\r\n         i++;\r\n      }\r\n      const newEntity = {\r\n         name: fullName,\r\n         email: email,\r\n         password: password,\r\n         mobile: mobile,\r\n         mobile2: mobile1,\r\n         NID: NID,\r\n         img: img,\r\n         tags: usedTags,\r\n      };\r\n      console.log(newEntity);\r\n      let requestURL;\r\n      Cookies.getJSON(\"session\").type == \"Volunteer\"\r\n         ? (requestURL = serverURL + \"/volunteer/update\")\r\n         : (requestURL = serverURL + \"/organization/update\");\r\n      if (fullName && email && password && mobile && usedTags && (NID || mobile1)) {\r\n         axios\r\n            .post(requestURL, newEntity, config)\r\n            .then(function (response) {\r\n               alert(\"تم التعديل بنجاح برجاء تسجيل الدخول مره اخري\");\r\n               Cookies.remove(\"session\");\r\n               window.location.href = \"/\";\r\n               console.log(response);\r\n            })\r\n            .catch(function (error) {\r\n               alert(\"حدث خطأ ما\");\r\n               console.log(error);\r\n            });\r\n      } else {\r\n         alert(\"ادخل بيانات صحيحه\");\r\n      }\r\n   };\r\n\r\n   const switchActivity = (e, id) => {\r\n      e.preventDefault();\r\n      setTag1((prevState) => prevState.map((item, idx) => (idx === id ? !item : item)));\r\n   };\r\n   useEffect(() => {\r\n      getTags().then((tagList) => {\r\n         tag1.length = tagList.length; // set array size\r\n         tag1.fill(false);\r\n         setTags(tagList);\r\n      });\r\n      console.log(Cookies.getJSON(\"session\"));\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         <Banner data={{ header: \"تعديل البيانات\" }} />\r\n         <div className=\"custom-content-register\">\r\n            <div className=\"custom-container-register\">\r\n               <MDBContainer>\r\n                  <MDBRow>\r\n                     <MDBCol md=\"12\" className=\"d-flex justify-content-center\">\r\n                        <form>\r\n                           <p className=\"text-center mb-4 mt-4 headerText\">انضم لنا</p>\r\n                           <div className=\"\">\r\n                              <MDBInput\r\n                                 label=\"الاسم بالكامل\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"user\"\r\n                                 iconSize\r\n                                 group\r\n                                 value={fullName}\r\n                                 onChange={onChangeFullname}\r\n                                 type=\"text\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"البريد الالكتروني\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"envelope\"\r\n                                 group\r\n                                 onChange={onChangeEmail}\r\n                                 value={email}\r\n                                 type=\"email\"\r\n                                 size=\"lg\"\r\n                                 validate\r\n                                 error=\"wrong\"\r\n                                 success=\"right\"\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"كلمه السر\"\r\n                                 icon=\"lock\"\r\n                                 className=\"textDirection\"\r\n                                 onChange={onChangePassword}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"password\"\r\n                                 validate\r\n                              />\r\n                              <MDBInput\r\n                                 label=\"رفم الهاتف\"\r\n                                 className=\"textDirection\"\r\n                                 icon=\"mobile-alt\"\r\n                                 onChange={onChangeMobile}\r\n                                 value={mobile}\r\n                                 group\r\n                                 size=\"lg\"\r\n                                 type=\"text\"\r\n                                 validate\r\n                              />\r\n                              {Cookies.getJSON(\"session\").type == \"Volunteer\" ? (\r\n                                 <MDBInput\r\n                                    label=\"الرقم القومي\"\r\n                                    icon=\"address-card\"\r\n                                    className=\"textDirection\"\r\n                                    group\r\n                                    onChange={onChangeNID}\r\n                                    type=\"text\"\r\n                                    value={NID}\r\n                                    validate\r\n                                    size=\"lg\"\r\n                                    error=\"wrong\"\r\n                                    success=\"right\"\r\n                                 />\r\n                              ) : (\r\n                                 <MDBInput\r\n                                    label=\"رفم هاتف اخر\"\r\n                                    className=\"textDirection\"\r\n                                    icon=\"mobile-alt\"\r\n                                    onChange={onChangeMobile1}\r\n                                    value={mobile1}\r\n                                    group\r\n                                    size=\"lg\"\r\n                                    type=\"text\"\r\n                                    validate\r\n                                 />\r\n                              )}\r\n\r\n                              <input\r\n                                 type=\"file\"\r\n                                 id=\"img\"\r\n                                 onChange={getBase64}\r\n                                 name=\"img\"\r\n                                 accept=\"image/*\"\r\n                                 className=\"image-button image-uploader\"\r\n                              />\r\n                              <div className=\"registerTagList mt-4 mb-4\">\r\n                                 {tags.map((tag) => (\r\n                                    <Button\r\n                                       key={tag.id}\r\n                                       size=\"mini\"\r\n                                       toggle\r\n                                       active={tag1[tag.id - 1]}\r\n                                       onClick={(e) => switchActivity(e, tag.id - 1)}>\r\n                                       {tag.name}\r\n                                    </Button>\r\n                                 ))}\r\n                              </div>\r\n                           </div>\r\n                           <div className=\"text-center \">\r\n                              <MDBBtn\r\n                                 color=\"green\"\r\n                                 className=\"registerBtn\"\r\n                                 type=\"submit\"\r\n                                 onClick={editUserData}>\r\n                                 تعديل\r\n                              </MDBBtn>\r\n                           </div>\r\n                        </form>\r\n                     </MDBCol>\r\n                  </MDBRow>\r\n               </MDBContainer>\r\n            </div>\r\n         </div>\r\n         <Contact data={JsonData} />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js",["150","151","152"],"E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js",[],"E:\\MVP\\Projects\\charity\\src\\Utils\\global.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx",["153","154"],"E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js",["155","156","157","158","159","160","161","162"],"E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js",["163","164","165","166","167","168","169","170","171","172","173","174","175"],"E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js",["176","177","178","179","180","181","182","183","184","185","186","187","188"],"import \"../styles/MyEvents.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { MDBDataTableV5, MDBBtn, MDBRating, MDBBadge, MDBNavItem, MDBNavLink } from \"mdbreact\";\r\nimport { data } from \"jquery\";\r\n\r\nexport default function AllJobs() {\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [eventDetails, setMyEventDetails] = useState({});\r\n\r\n   const [starRates, setStarRates] = useState([]);\r\n   const [dataCallback, setDataCallback] = useState({});\r\n   const [myEventsColumns, setMyEventsColumns] = useState([\r\n      { label: \"اسم العمل\", field: \"eventInfo\", width: 150 },\r\n      {\r\n         label: \"اسم المبادره\",\r\n         field: \"orgInfo\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"المدينه\",\r\n         field: \"city\",\r\n         width: 150,\r\n      },\r\n   ]);\r\n\r\n   const transformData = (data) => {\r\n      console.log(data);\r\n      data.forEach((dataRow) => {\r\n         let tempObject = {\r\n            eventInfo: dataRow.name,\r\n            orgInfo: dataRow.organization,\r\n            city: dataRow.city,\r\n         };\r\n         setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n      });\r\n   };\r\n\r\n   useEffect(() => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      axios\r\n         .get(serverURL + \"/userdata\", config)\r\n         .then(function (response) {\r\n            //console.log(response.data.data.jobs);\r\n            transformData(response.data.data.jobs);\r\n         })\r\n         .catch(console.log);\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }}\r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\addTags.js",["189"],"import React, { useState } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport serverURL from \"../Utils/global\";\r\nimport { MDBJumbotron, MDBBtn, MDBContainer, MDBRow, MDBCol, MDBInput } from \"mdbreact\";\r\nimport \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\n\r\nexport default function AddTag() {\r\n   const [newTag, setNewTag] = useState(\"\");\r\n   const onChangeTag = (event) => {\r\n      console.log(event.target.value);\r\n      setNewTag(event.target.value);\r\n   };\r\n\r\n   const handleNewTag = () => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      const bodyParameters = {\r\n         name: newTag,\r\n      };\r\n      // console.log(bodyParameters);\r\n      axios\r\n         .post(serverURL + \"/tags/store\", bodyParameters, config)\r\n         .then(function (response) {\r\n            if (response.status == 200) {\r\n               console.log(response);\r\n               alert(\"تم تسجيل الفئه بنجاح\");\r\n            } else {\r\n               alert(\"لا يمكنك اضافه فئه\");\r\n            }\r\n         })\r\n         .catch(console.log);\r\n      //console.log(bodyParameters);\r\n      //console.log(token);\r\n   };\r\n\r\n   return (\r\n      <div className=\"custom-new-event-container\">\r\n         <div></div>\r\n         <div className=\"newEvent\">\r\n            <MDBContainer className=\"mt-5 text-center\">\r\n               <MDBRow>\r\n                  <MDBCol>\r\n                     <MDBJumbotron>\r\n                        <h2 className=\"h1 display-3\">قم بأضافه فئه جديده</h2>\r\n                        <form className=\"form-Sizer\">\r\n                           <MDBInput\r\n                              label=\"اسم الفئه\"\r\n                              className=\"textDirection\"\r\n                              onChange={onChangeTag}\r\n                              type=\"text\"\r\n                              size=\"lg\"\r\n                              validate\r\n                              error=\"wrong\"\r\n                              success=\"right\"\r\n                           />\r\n\r\n                           <p className=\"lead mt-3\">\r\n                              <MDBBtn\r\n                                 color=\"primary\"\r\n                                 className=\"textformatter\"\r\n                                 onClick={handleNewTag}>\r\n                                 اضف فئه\r\n                              </MDBBtn>\r\n                           </p>\r\n                        </form>\r\n                     </MDBJumbotron>\r\n                  </MDBCol>\r\n               </MDBRow>\r\n            </MDBContainer>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\components\\VolunteerDetails.jsx",["190","191","192","193","194","195","196","197","198","199","200","201"],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":7,"column":10,"nodeType":"208","messageId":"209","endLine":7,"endColumn":24},{"ruleId":"206","severity":1,"message":"210","line":7,"column":26,"nodeType":"208","messageId":"209","endLine":7,"endColumn":32},{"ruleId":"206","severity":1,"message":"211","line":7,"column":34,"nodeType":"208","messageId":"209","endLine":7,"endColumn":43},{"ruleId":"206","severity":1,"message":"212","line":7,"column":45,"nodeType":"208","messageId":"209","endLine":7,"endColumn":53},{"ruleId":"206","severity":1,"message":"213","line":7,"column":55,"nodeType":"208","messageId":"209","endLine":7,"endColumn":65},{"ruleId":"214","severity":1,"message":"215","line":61,"column":55,"nodeType":"216","messageId":"217","endLine":61,"endColumn":57},{"ruleId":"214","severity":1,"message":"215","line":73,"column":52,"nodeType":"216","messageId":"217","endLine":73,"endColumn":54},{"ruleId":"206","severity":1,"message":"218","line":2,"column":106,"nodeType":"208","messageId":"209","endLine":2,"endColumn":117},{"ruleId":"206","severity":1,"message":"219","line":3,"column":1,"nodeType":"208","messageId":"209","endLine":3,"endColumn":18},{"ruleId":"206","severity":1,"message":"220","line":3,"column":20,"nodeType":"208","messageId":"209","endLine":3,"endColumn":35},{"ruleId":"206","severity":1,"message":"221","line":3,"column":37,"nodeType":"208","messageId":"209","endLine":3,"endColumn":52},{"ruleId":"206","severity":1,"message":"222","line":3,"column":54,"nodeType":"208","messageId":"209","endLine":3,"endColumn":66},{"ruleId":"206","severity":1,"message":"223","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":16},{"ruleId":"206","severity":1,"message":"224","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":12},{"ruleId":"206","severity":1,"message":"225","line":9,"column":8,"nodeType":"208","messageId":"209","endLine":9,"endColumn":11},{"ruleId":"206","severity":1,"message":"226","line":9,"column":18,"nodeType":"208","messageId":"209","endLine":9,"endColumn":25},{"ruleId":"206","severity":1,"message":"225","line":12,"column":8,"nodeType":"208","messageId":"209","endLine":12,"endColumn":11},{"ruleId":"206","severity":1,"message":"227","line":14,"column":10,"nodeType":"208","messageId":"209","endLine":14,"endColumn":13},{"ruleId":"228","severity":1,"message":"229","line":109,"column":7,"nodeType":"230","endLine":109,"endColumn":9,"suggestions":"231"},{"ruleId":"206","severity":1,"message":"232","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"210","line":10,"column":4,"nodeType":"208","messageId":"209","endLine":10,"endColumn":10},{"ruleId":"206","severity":1,"message":"233","line":22,"column":10,"nodeType":"208","messageId":"209","endLine":22,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":47,"column":7,"nodeType":"230","endLine":47,"endColumn":9,"suggestions":"234"},{"ruleId":"228","severity":1,"message":"235","line":65,"column":7,"nodeType":"230","endLine":65,"endColumn":23,"suggestions":"236"},{"ruleId":"214","severity":1,"message":"215","line":70,"column":25,"nodeType":"216","messageId":"217","endLine":70,"endColumn":27},{"ruleId":"206","severity":1,"message":"226","line":10,"column":18,"nodeType":"208","messageId":"209","endLine":10,"endColumn":25},{"ruleId":"214","severity":1,"message":"215","line":79,"column":39,"nodeType":"216","messageId":"217","endLine":79,"endColumn":41},{"ruleId":"228","severity":1,"message":"229","line":111,"column":7,"nodeType":"230","endLine":111,"endColumn":9,"suggestions":"237"},{"ruleId":"214","severity":1,"message":"215","line":172,"column":64,"nodeType":"216","messageId":"217","endLine":172,"endColumn":66},{"ruleId":"206","severity":1,"message":"238","line":21,"column":11,"nodeType":"208","messageId":"209","endLine":21,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":41,"column":25,"nodeType":"216","messageId":"217","endLine":41,"endColumn":27},{"ruleId":"214","severity":1,"message":"215","line":51,"column":25,"nodeType":"216","messageId":"217","endLine":51,"endColumn":27},{"ruleId":"206","severity":1,"message":"239","line":2,"column":18,"nodeType":"208","messageId":"209","endLine":2,"endColumn":22},{"ruleId":"214","severity":1,"message":"215","line":66,"column":43,"nodeType":"216","messageId":"217","endLine":66,"endColumn":45},{"ruleId":"206","severity":1,"message":"240","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":15},{"ruleId":"206","severity":1,"message":"241","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":14},{"ruleId":"206","severity":1,"message":"242","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":16},{"ruleId":"206","severity":1,"message":"211","line":10,"column":34,"nodeType":"208","messageId":"209","endLine":10,"endColumn":43},{"ruleId":"206","severity":1,"message":"213","line":10,"column":55,"nodeType":"208","messageId":"209","endLine":10,"endColumn":65},{"ruleId":"206","severity":1,"message":"243","line":14,"column":28,"nodeType":"208","messageId":"209","endLine":14,"endColumn":46},{"ruleId":"228","severity":1,"message":"244","line":53,"column":7,"nodeType":"230","endLine":53,"endColumn":9,"suggestions":"245"},{"ruleId":"214","severity":1,"message":"215","line":65,"column":37,"nodeType":"216","messageId":"217","endLine":65,"endColumn":39},{"ruleId":"206","severity":1,"message":"211","line":7,"column":34,"nodeType":"208","messageId":"209","endLine":7,"endColumn":43},{"ruleId":"206","severity":1,"message":"213","line":7,"column":55,"nodeType":"208","messageId":"209","endLine":7,"endColumn":65},{"ruleId":"206","severity":1,"message":"246","line":7,"column":67,"nodeType":"208","messageId":"209","endLine":7,"endColumn":77},{"ruleId":"206","severity":1,"message":"247","line":10,"column":10,"nodeType":"208","messageId":"209","endLine":10,"endColumn":14},{"ruleId":"206","severity":1,"message":"248","line":14,"column":25,"nodeType":"208","messageId":"209","endLine":14,"endColumn":42},{"ruleId":"206","severity":1,"message":"243","line":18,"column":28,"nodeType":"208","messageId":"209","endLine":18,"endColumn":46},{"ruleId":"214","severity":1,"message":"215","line":119,"column":38,"nodeType":"216","messageId":"217","endLine":119,"endColumn":40},{"ruleId":"214","severity":1,"message":"215","line":119,"column":76,"nodeType":"216","messageId":"217","endLine":119,"endColumn":78},{"ruleId":"214","severity":1,"message":"215","line":143,"column":45,"nodeType":"216","messageId":"217","endLine":143,"endColumn":47},{"ruleId":"228","severity":1,"message":"249","line":165,"column":7,"nodeType":"230","endLine":165,"endColumn":18,"suggestions":"250"},{"ruleId":"214","severity":1,"message":"215","line":186,"column":29,"nodeType":"216","messageId":"217","endLine":186,"endColumn":31},{"ruleId":"214","severity":1,"message":"215","line":191,"column":39,"nodeType":"216","messageId":"217","endLine":191,"endColumn":41},{"ruleId":"228","severity":1,"message":"251","line":206,"column":7,"nodeType":"230","endLine":206,"endColumn":9,"suggestions":"252"},{"ruleId":"206","severity":1,"message":"210","line":7,"column":26,"nodeType":"208","messageId":"209","endLine":7,"endColumn":32},{"ruleId":"206","severity":1,"message":"211","line":7,"column":34,"nodeType":"208","messageId":"209","endLine":7,"endColumn":43},{"ruleId":"206","severity":1,"message":"212","line":7,"column":45,"nodeType":"208","messageId":"209","endLine":7,"endColumn":53},{"ruleId":"206","severity":1,"message":"213","line":7,"column":55,"nodeType":"208","messageId":"209","endLine":7,"endColumn":65},{"ruleId":"206","severity":1,"message":"246","line":7,"column":67,"nodeType":"208","messageId":"209","endLine":7,"endColumn":77},{"ruleId":"206","severity":1,"message":"247","line":8,"column":10,"nodeType":"208","messageId":"209","endLine":8,"endColumn":14},{"ruleId":"206","severity":1,"message":"253","line":12,"column":11,"nodeType":"208","messageId":"209","endLine":12,"endColumn":23},{"ruleId":"206","severity":1,"message":"248","line":12,"column":25,"nodeType":"208","messageId":"209","endLine":12,"endColumn":42},{"ruleId":"206","severity":1,"message":"254","line":14,"column":11,"nodeType":"208","messageId":"209","endLine":14,"endColumn":20},{"ruleId":"206","severity":1,"message":"255","line":14,"column":22,"nodeType":"208","messageId":"209","endLine":14,"endColumn":34},{"ruleId":"206","severity":1,"message":"256","line":15,"column":11,"nodeType":"208","messageId":"209","endLine":15,"endColumn":23},{"ruleId":"206","severity":1,"message":"257","line":15,"column":25,"nodeType":"208","messageId":"209","endLine":15,"endColumn":40},{"ruleId":"206","severity":1,"message":"243","line":16,"column":28,"nodeType":"208","messageId":"209","endLine":16,"endColumn":46},{"ruleId":"214","severity":1,"message":"215","line":27,"column":33,"nodeType":"216","messageId":"217","endLine":27,"endColumn":35},{"ruleId":"206","severity":1,"message":"239","line":2,"column":18,"nodeType":"208","messageId":"209","endLine":2,"endColumn":22},{"ruleId":"206","severity":1,"message":"258","line":2,"column":24,"nodeType":"208","messageId":"209","endLine":2,"endColumn":29},{"ruleId":"206","severity":1,"message":"259","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":15},{"ruleId":"206","severity":1,"message":"260","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":13},{"ruleId":"206","severity":1,"message":"211","line":6,"column":27,"nodeType":"208","messageId":"209","endLine":6,"endColumn":36},{"ruleId":"206","severity":1,"message":"212","line":6,"column":38,"nodeType":"208","messageId":"209","endLine":6,"endColumn":46},{"ruleId":"206","severity":1,"message":"213","line":6,"column":48,"nodeType":"208","messageId":"209","endLine":6,"endColumn":58},{"ruleId":"206","severity":1,"message":"246","line":6,"column":60,"nodeType":"208","messageId":"209","endLine":6,"endColumn":70},{"ruleId":"206","severity":1,"message":"261","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":17},{"ruleId":"206","severity":1,"message":"210","line":10,"column":4,"nodeType":"208","messageId":"209","endLine":10,"endColumn":10},{"ruleId":"206","severity":1,"message":"262","line":17,"column":9,"nodeType":"208","messageId":"209","endLine":17,"endColumn":24},{"ruleId":"263","severity":1,"message":"264","line":26,"column":18,"nodeType":"265","endLine":26,"endColumn":69},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"no-unused-vars","'MDBDataTableV5' is defined but never used.","Identifier","unusedVar","'MDBBtn' is defined but never used.","'MDBRating' is defined but never used.","'MDBBadge' is defined but never used.","'MDBNavItem' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MDBDropdown' is defined but never used.","'MDBDropdownToggle' is defined but never used.","'MDBDropdownMenu' is defined but never used.","'MDBDropdownItem' is defined but never used.","'MDBContainer' is defined but never used.","'Features' is defined but never used.","'Team' is defined but never used.","'SVG' is defined but never used.","'MDBIcon' is defined but never used.","'act' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tag1'. Either include it or remove the dependency array.","ArrayExpression",["268"],"'Link' is defined but never used.","'AnimateOnChange' is defined but never used.",["269"],"React Hook useEffect has a missing dependency: 'queryEvents'. Either include it or remove the dependency array.",["270"],["271"],"'endDateReg' is assigned a value but never used.","'Icon' is defined but never used.","'Contact' is defined but never used.","'Banner' is defined but never used.","'JsonData' is defined but never used.","'setMyEventsColumns' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'queryMyEvents'. Either include it or remove the dependency array.",["272"],"'MDBNavLink' is defined but never used.","'data' is defined but never used.","'setMyEventDetails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataCallback', 'eventDetails.is_ended', 'handleAccept', 'handleReject', and 'handleStars'. Either include them or remove the dependency array.",["273"],"React Hook useEffect has missing dependencies: 'props.location.params' and 'queryMyVolunteers'. Either include them or remove the dependency array.",["274"],"'eventDetails' is assigned a value but never used.","'starRates' is assigned a value but never used.","'setStarRates' is assigned a value but never used.","'dataCallback' is assigned a value but never used.","'setDataCallback' is assigned a value but never used.","'Image' is defined but never used.","'Cookies' is defined but never used.","'axios' is defined but never used.","'serverURL' is defined but never used.","'registerToEvent' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"275","fix":"277"},{"desc":"278","fix":"279"},{"desc":"275","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},"Update the dependencies array to be: [tag1]",{"range":"287","text":"288"},{"range":"289","text":"288"},"Update the dependencies array to be: [queryEvents, tag1, usedCity]",{"range":"290","text":"291"},{"range":"292","text":"288"},"Update the dependencies array to be: [queryMyEvents]",{"range":"293","text":"294"},"Update the dependencies array to be: [dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",{"range":"295","text":"296"},"Update the dependencies array to be: [props.location.params, queryMyVolunteers]",{"range":"297","text":"298"},[3501,3503],"[tag1]",[1548,1550],[2090,2106],"[queryEvents, tag1, usedCity]",[3803,3805],[1500,1502],"[queryMyEvents]",[5641,5652],"[dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",[6724,6726],"[props.location.params, queryMyVolunteers]"]