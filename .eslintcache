[{"E:\\MVP\\Projects\\charity\\src\\index.js":"1","E:\\MVP\\Projects\\charity\\src\\views\\Profile.js":"2","E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js":"3","E:\\MVP\\Projects\\charity\\src\\components\\features.jsx":"4","E:\\MVP\\Projects\\charity\\src\\components\\header.jsx":"5","E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx":"6","E:\\MVP\\Projects\\charity\\src\\components\\about.jsx":"7","E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx":"8","E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx":"9","E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx":"10","E:\\MVP\\Projects\\charity\\src\\views\\App.js":"11","E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js":"12","E:\\MVP\\Projects\\charity\\src\\views\\Login.js":"13","E:\\MVP\\Projects\\charity\\src\\views\\Register.js":"14","E:\\MVP\\Projects\\charity\\src\\views\\Search.js":"15","E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js":"16","E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js":"17","E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js":"18","E:\\MVP\\Projects\\charity\\src\\Utils\\global.js":"19","E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx":"20","E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx":"21","E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx":"22","E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js":"23","E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js":"24","E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js":"25","E:\\MVP\\Projects\\charity\\src\\views\\addTags.js":"26","E:\\MVP\\Projects\\charity\\src\\components\\VolunteerDetails.jsx":"27","E:\\MVP\\Projects\\charity\\src\\components\\footer.jsx":"28","E:\\MVP\\Projects\\charity\\src\\components\\messageModal.jsx":"29"},{"size":516,"mtime":1613737899088,"results":"30","hashOfConfig":"31"},{"size":3887,"mtime":1614303287422,"results":"32","hashOfConfig":"31"},{"size":2401,"mtime":1614337944758,"results":"33","hashOfConfig":"31"},{"size":894,"mtime":1612469607259,"results":"34","hashOfConfig":"31"},{"size":665,"mtime":1614184656811,"results":"35","hashOfConfig":"31"},{"size":4019,"mtime":1614304152883,"results":"36","hashOfConfig":"31"},{"size":1313,"mtime":1614266488557,"results":"37","hashOfConfig":"31"},{"size":7797,"mtime":1614267289898,"results":"38","hashOfConfig":"31"},{"size":1040,"mtime":1612224345032,"results":"39","hashOfConfig":"31"},{"size":1528,"mtime":1613670982598,"results":"40","hashOfConfig":"31"},{"size":780,"mtime":1614336980763,"results":"41","hashOfConfig":"31"},{"size":91,"mtime":1612354907545,"results":"42","hashOfConfig":"31"},{"size":4494,"mtime":1614338685915,"results":"43","hashOfConfig":"31"},{"size":9540,"mtime":1614338278842,"results":"44","hashOfConfig":"31"},{"size":5200,"mtime":1614303452574,"results":"45","hashOfConfig":"31"},{"size":9648,"mtime":1614338198495,"results":"46","hashOfConfig":"31"},{"size":8968,"mtime":1614338254559,"results":"47","hashOfConfig":"31"},{"size":268,"mtime":1614299506270,"results":"48","hashOfConfig":"31"},{"size":62,"mtime":1613522665267,"results":"49","hashOfConfig":"31"},{"size":283,"mtime":1613667065520,"results":"50","hashOfConfig":"31"},{"size":7905,"mtime":1613747169478,"results":"51","hashOfConfig":"31"},{"size":2701,"mtime":1614338304474,"results":"52","hashOfConfig":"31"},{"size":3419,"mtime":1614303195961,"results":"53","hashOfConfig":"31"},{"size":8188,"mtime":1614338162038,"results":"54","hashOfConfig":"31"},{"size":4454,"mtime":1614296785942,"results":"55","hashOfConfig":"31"},{"size":2959,"mtime":1614338105103,"results":"56","hashOfConfig":"31"},{"size":4219,"mtime":1614303080684,"results":"57","hashOfConfig":"31"},{"size":1674,"mtime":1614266798606,"results":"58","hashOfConfig":"31"},{"size":1332,"mtime":1614337845194,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1s3xdrw",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\MVP\\Projects\\charity\\src\\index.js",[],["125","126"],"E:\\MVP\\Projects\\charity\\src\\views\\Profile.js",[],"E:\\MVP\\Projects\\charity\\src\\Routes\\Routes.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\features.jsx",[],["127","128"],"E:\\MVP\\Projects\\charity\\src\\components\\header.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\navigation.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\about.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\gallery.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\Team.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\contact.jsx",[],"E:\\MVP\\Projects\\charity\\src\\views\\App.js",[],"E:\\MVP\\Projects\\charity\\src\\context\\UserContext.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Login.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Register.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\Search.js",["129","130","131","132"],"import React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport Footer from \"../components/footer\";\r\nimport Banner from \"../components/banner\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport EventDetails from \"../components/EventDetails\";\r\nimport Cookies from \"js-cookie\";\r\nimport { getTags } from \"../Utils/getTagsUtil\";\r\nimport \"../styles/search.css\";\r\n\r\nexport default function Search() {\r\n   const [tags, setTags] = useState([]);\r\n   const [events, setEvents] = useState([]);\r\n   const [usedTags, setUsedTags] = useState([]);\r\n   const [cities, setCities] = useState([]);\r\n   const [usedCityName, setUsedCityName] = useState(\"\");\r\n   const [usedCity, setUsedCity] = useState(\"\");\r\n   useEffect(() => {\r\n      getTags().then((tagList) => {\r\n         setTags(tagList);\r\n      });\r\n      axios\r\n         .get(serverURL + \"/cities/list\")\r\n         .then(function (response) {\r\n            //console.log(response.data.message);\r\n            setCities(response.data.message);\r\n         })\r\n         .catch(console.log);\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      //console.log(tags);\r\n      cities.forEach((city) => {\r\n         Object.defineProperty(city, \"key\", Object.getOwnPropertyDescriptor(city, \"id\"));\r\n         delete city[\"id\"];\r\n         Object.defineProperty(city, \"text\", Object.getOwnPropertyDescriptor(city, \"name\"));\r\n         delete city[\"name\"];\r\n         city.value = city[\"text\"];\r\n      });\r\n   }, [cities]);\r\n\r\n   useEffect(() => {\r\n      queryEvents();\r\n   }, [usedCity]);\r\n\r\n   const switchActivity = (e, data) => {\r\n      for (let tagList in tags) {\r\n         for (let tag in data.value) {\r\n            if (tags[tagList].text === data.value[tag]) {\r\n               usedTags.push(tags[tagList].key);\r\n            }\r\n         }\r\n      }\r\n      queryEvents();\r\n   };\r\n\r\n   const queryEvents = () => {\r\n      //console.log(usedTags);\r\n      /*       const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n */\r\n      const bodyParameters = {\r\n         tags: usedTags,\r\n         city_id: usedCity,\r\n      };\r\n      //console.log(bodyParameters);\r\n      // console.log(usedCity);\r\n      axios\r\n         .post(serverURL + \"/jobs/jobsbytags\", bodyParameters)\r\n         .then(function (response) {\r\n            setEvents(response.data.data);\r\n         })\r\n         .catch(console.log);\r\n      setUsedTags([]);\r\n   };\r\n   const onChangeCity = (e, data) => {\r\n      if (data.value === \"\") setUsedCity(\"\");\r\n      else {\r\n         data.options.forEach((city) => {\r\n            if (data.value === city.value) {\r\n               setUsedCity(city.key);\r\n               setUsedCityName(city.name);\r\n            }\r\n         });\r\n      }\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Banner data={{ header: \"الفعاليات الجديده\" }} />\r\n         <div className=\"custom-search-content\">\r\n            <div className=\"searchTagsList\">\r\n               <div className=\"tagsHolder\">\r\n                  <span className=\"mr-3\">\r\n                     <Dropdown\r\n                        className=\"mt-3\"\r\n                        placeholder=\"المدينه\"\r\n                        fluid\r\n                        selection\r\n                        clearable\r\n                        selection\r\n                        options={cities}\r\n                        onChange={onChangeCity}\r\n                     />\r\n                  </span>\r\n                  <span>\r\n                     <Dropdown\r\n                        className=\"mt-3\"\r\n                        placeholder=\"الفعاليه\"\r\n                        options={tags}\r\n                        search\r\n                        selection\r\n                        fluid\r\n                        multiple\r\n                        allowAdditions\r\n                        onChange={(e, data) => switchActivity(e, data)}\r\n                     />\r\n                  </span>\r\n               </div>\r\n            </div>\r\n            <div className=\"eventsList\">\r\n               {events.map((event) => (\r\n                  <MDBCol key={event.id}>\r\n                     <MDBCard className=\"card-event\">\r\n                        <MDBCardImage\r\n                           className=\"img-fluid customImage\"\r\n                           src={serverURL + \"/\" + event.img}\r\n                           waves\r\n                        />\r\n                        <MDBCardBody>\r\n                           <MDBCardTitle className=\"customCardFont\">{event.name}</MDBCardTitle>\r\n                           <MDBCardText className=\"customCardFont description-cut\">\r\n                              {event.description}\r\n                           </MDBCardText>\r\n                           <div>\r\n                              <EventDetails props={{ event: event }} />\r\n                           </div>\r\n                        </MDBCardBody>\r\n                     </MDBCard>\r\n                  </MDBCol>\r\n               ))}\r\n            </div>\r\n         </div>\r\n         <Footer />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\InfoChange.js",[],"E:\\MVP\\Projects\\charity\\src\\views\\NewEvent.js",[],"E:\\MVP\\Projects\\charity\\src\\Utils\\getTagsUtil.js",[],"E:\\MVP\\Projects\\charity\\src\\Utils\\global.js",[],"E:\\MVP\\Projects\\charity\\src\\components\\banner.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\svg.jsx",[],["133","134"],"E:\\MVP\\Projects\\charity\\src\\components\\EventDetails.jsx",[],"E:\\MVP\\Projects\\charity\\src\\views\\MyEvents.js",["135"],"import \"../styles/MyEvents.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { MDBDataTableV5, MDBBtn, MDBBadge, MDBNavLink } from \"mdbreact\";\r\n\r\nexport default function MyEvents() {\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [myEventsColumns] = useState([\r\n      { label: \"اسم الفعاليه\", field: \"eventName\", width: 150 },\r\n      {\r\n         label: \"تاريخ انتهاء التسجيل\",\r\n         field: \"endDateReg\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"تاريخ انتهاء الفعاليه\",\r\n         field: \"endDate\",\r\n         width: 150,\r\n      },\r\n\r\n      {\r\n         label: \"عدد المتقدمين\",\r\n         field: \"count\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"حاله الفعاليه\",\r\n         field: \"active\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"عرض المزيد\",\r\n         field: \"moreInfo\",\r\n         width: 150,\r\n      },\r\n   ]);\r\n   useEffect(() => {\r\n      queryMyEvents();\r\n      console.log(Cookies.getJSON(\"session\").token);\r\n   }, []);\r\n\r\n   const transformData = (data) => {\r\n      //console.log(myEvents);\r\n      // const rows = [];\r\n      data.forEach((dataRow) => {\r\n         let tempObject = {\r\n            eventName: dataRow.name,\r\n            endDate: dataRow.end_date,\r\n            endDateReg: dataRow.registration_date,\r\n            active: (\r\n               <>\r\n                  {dataRow.can_register === \"working\" ? (\r\n                     <MDBBadge color=\"warning\">التسجيل مفتوح</MDBBadge>\r\n                  ) : dataRow.is_ended === \"working\" ? (\r\n                     <MDBBadge color=\"success\">قيد العمل</MDBBadge>\r\n                  ) : (\r\n                     <MDBBadge color=\"danger\">انتهي</MDBBadge>\r\n                  )}\r\n               </>\r\n            ),\r\n            count: dataRow.volunteers_count,\r\n            moreInfo: (\r\n               <>\r\n                  <MDBNavLink\r\n                     className=\"waves-effect waves-light\"\r\n                     to={{ pathname: `/EventVolunteer`, params: { dataRow } }}>\r\n                     <MDBBtn color=\"success\" size=\"sm\" className=\"My-events-font\">\r\n                        المزيد\r\n                     </MDBBtn>\r\n                  </MDBNavLink>\r\n               </>\r\n            ),\r\n         };\r\n         setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n      });\r\n   };\r\n   const queryMyEvents = () => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      axios\r\n         .get(serverURL + \"/organization/alljobs\", config)\r\n         .then(function (response) {\r\n            console.log(response.data.data);\r\n            transformData(response.data.data);\r\n         })\r\n         .catch(console.log);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <MDBDataTableV5\r\n            hover\r\n            scrollX\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }}\r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\eventVolunteer.js",["136","137","138","139","140","141","142","143","144"],"E:\\MVP\\Projects\\charity\\src\\views\\allJobs.js",["145","146","147","148","149"],"import \"../styles/MyEvents.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport serverURL from \"../Utils/global\";\r\nimport axios from \"axios\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { MDBDataTableV5, MDBBadge } from \"mdbreact\";\r\n\r\nexport default function AllJobs() {\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [myEventsColumns, setMyEventsColumns] = useState([\r\n      {\r\n         label: \"اسم المبادره\",\r\n         field: \"orgInfo\",\r\n         width: 150,\r\n      },\r\n      { label: \"اسم العمل\", field: \"eventInfo\", width: 150 },\r\n\r\n      {\r\n         label: \"بريد المبادره الالكتروني\",\r\n         field: \"orgEmail\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"رقم المبادره\",\r\n         field: \"orgMobile\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"رقم اخر\",\r\n         field: \"orgMobile1\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"المدينه\",\r\n         field: \"city\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"الحاله\",\r\n         field: \"status\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"تاريخ البدايه\",\r\n         field: \"startDate\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"تاريخ الانتهاء\",\r\n         field: \"endDate\",\r\n         width: 150,\r\n      },\r\n      {\r\n         label: \"التقيم\",\r\n         field: \"rate\",\r\n         width: 150,\r\n      },\r\n   ]);\r\n\r\n   const transformData = (data) => {\r\n      console.log(data);\r\n      data.forEach((dataRow) => {\r\n         let tempObject = {\r\n            eventInfo: dataRow.name,\r\n            orgInfo: dataRow.organization,\r\n            city: dataRow.city,\r\n            orgEmail: dataRow.organization_email,\r\n            orgMobile: dataRow.organization_mobile,\r\n            orgMobile1: dataRow.organization_mobile2,\r\n            startDate: dataRow.registration_date,\r\n            endDate: dataRow.end_date,\r\n            status: (\r\n               <>\r\n                  {dataRow.status == \"pending\" ? (\r\n                     <MDBBadge color=\"warning\" key={dataRow.id}>\r\n                        لم يتم التأكيد\r\n                     </MDBBadge>\r\n                  ) : dataRow.status == \"rejected\" ? (\r\n                     <MDBBadge color=\"danger\" key={dataRow.id}>\r\n                        مرفوض\r\n                     </MDBBadge>\r\n                  ) : (\r\n                     <MDBBadge color=\"success\" key={dataRow.id}>\r\n                        مشترك\r\n                     </MDBBadge>\r\n                  )}\r\n               </>\r\n            ),\r\n            rate: (\r\n               <>\r\n                  {dataRow.status == \"rejected\" ? (\r\n                     <MDBBadge color=\"danger\" key={dataRow.id}>\r\n                        غير قابل للتقيم\r\n                     </MDBBadge>\r\n                  ) : dataRow.is_ended == \"working\" ? (\r\n                     <MDBBadge color=\"warning\" key={dataRow.id}>\r\n                        لم يقيم\r\n                     </MDBBadge>\r\n                  ) : (\r\n                     <Rating\r\n                        key={dataRow.id}\r\n                        maxRating={5}\r\n                        size=\"huge\"\r\n                        icon=\"star\"\r\n                        disabled\r\n                        defaultRating={dataRow.stars}\r\n                     />\r\n                  )}\r\n               </>\r\n            ),\r\n         };\r\n         setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n      });\r\n   };\r\n\r\n   useEffect(() => {\r\n      const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n      axios\r\n         .get(serverURL + \"/userdata\", config)\r\n         .then(function (response) {\r\n            console.log(response.data.data.jobs);\r\n            transformData(response.data.data.jobs);\r\n         })\r\n         .catch(console.log);\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            scrollX\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }}\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n      </>\r\n   );\r\n}\r\n","E:\\MVP\\Projects\\charity\\src\\views\\addTags.js",["150"],"E:\\MVP\\Projects\\charity\\src\\components\\VolunteerDetails.jsx",["151","152"],"import React,{useEffect,useState} from 'react'\r\nimport { Button, Modal } from 'semantic-ui-react'\r\nimport \"../styles/customEventDetails.css\"\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\nimport { MDBDataTableV5, MDBBadge } from \"mdbreact\";\r\nimport { Rating } from \"semantic-ui-react\";\r\nimport serverURL from \"../Utils/global\";\r\n\r\nconst VolDetails = (props) => {\r\n  const [open, setOpen] = React.useState(false)\r\n   const [myEventsRows, setMyEventsRows] = useState([]);\r\n   const [myEventsColumns] = useState([\r\n      {\r\n         label: \"اسم المبادره\",\r\n         field: \"orgInfo\",\r\n         width: 100,\r\n      },\r\n      { label: \"اسم العمل\", field: \"eventInfo\", width: 100 },\r\n      {\r\n         label: \"المدينه\",\r\n         field: \"city\",\r\n         width: 100,\r\n      },\r\n      {\r\n         label: \"الحاله\",\r\n         field: \"status\",\r\n         width: 100,\r\n      },\r\n      {\r\n         label: \"تاريخ البدايه\",\r\n         field: \"startDate\",\r\n         width: 100,\r\n      },\r\n      {\r\n         label: \"تاريخ الانتهاء\",\r\n         field: \"endDate\",\r\n         width: 100,\r\n      },\r\n      {\r\n         label: \"التقيم\",\r\n         field: \"rate\",\r\n         width: 100,\r\n      },\r\n   ]);\r\n\r\n    const transformData = (data) => {\r\n      console.log(data);\r\n      data.forEach((dataRow) => {\r\n         let tempObject = {\r\n            eventInfo: dataRow.name,\r\n            orgInfo: dataRow.organization,\r\n            city: dataRow.city,\r\n            startDate: dataRow.registration_date,\r\n            endDate: dataRow.end_date,\r\n            status: (\r\n               <>\r\n                  {dataRow.status === \"pending\" ? (\r\n                     <MDBBadge color=\"warning\" key={dataRow.id}>\r\n                        لم يتم التأكيد\r\n                     </MDBBadge>\r\n                  ) : (\r\n                     <MDBBadge color=\"success\" key={dataRow.id}>\r\n                        مشترك\r\n                     </MDBBadge>\r\n                  )}\r\n               </>\r\n            ),\r\n            rate: (\r\n               <>\r\n                  {dataRow.is_ended === \"working\" ? (\r\n                     <MDBBadge color=\"warning\" key={dataRow.id}>\r\n                        لم يقيم\r\n                     </MDBBadge>\r\n                  ) : (\r\n                     <Rating\r\n                        key={dataRow.id}\r\n                        maxRating={5}\r\n                        size=\"huge\"\r\n                        icon=\"star\"\r\n                        disabled\r\n                        defaultRating={dataRow.stars}\r\n                     />\r\n                  )}\r\n               </>\r\n            ),\r\n         };\r\n         setMyEventsRows((oldArray) => [...oldArray, tempObject]);\r\n      });\r\n   };\r\n\r\nuseEffect(()=>{      \r\n  \r\n  const token = Cookies.getJSON(\"session\").token;\r\n      const config = {\r\n         headers: { Authorization: `bearer ${token}` },\r\n      };\r\n\r\n        axios\r\n         .get(serverURL + \"/volunteer/show/\"+props.props.vol.id, config)\r\n         .then(function (response) {\r\n          // console.log(\"THIS IS RESPONSE\")\r\n           // console.log(response.data.message.jobs);\r\n            transformData(response.data.message.jobs)\r\n         })\r\n         .catch(console.log);\r\n},[])\r\n\r\n  console.log(props.props);\r\n  return (\r\n    <Modal\r\n\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      trigger={  <a href=\"#\" className=\"text-decoration-none blue-text\">{props.props.vol.name}</a>}\r\n    >\r\n      <Modal.Content scrolling >\r\n        <Modal.Description className=\"descriptionHolder\">\r\n <MDBDataTableV5\r\n            hover\r\n            entriesOptions={[5, 10, 20, 25]}\r\n            entries={10}\r\n            pagesAmount={4}\r\n            data={{ columns: myEventsColumns, rows: myEventsRows }} \r\n            btn\r\n            className=\"My-events-font\"\r\n            entriesLabel=\"المبادرات\"\r\n            searchLabel=\"بحث\"\r\n         />\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button onClick={() =>  setOpen(false)}>الغاء</Button>       \r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VolDetails\r\n","E:\\MVP\\Projects\\charity\\src\\components\\footer.jsx",[],"E:\\MVP\\Projects\\charity\\src\\components\\messageModal.jsx",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"153","replacedBy":"157"},{"ruleId":"155","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":10,"column":8,"nodeType":"161","messageId":"162","endLine":10,"endColumn":15},{"ruleId":"159","severity":1,"message":"163","line":19,"column":11,"nodeType":"161","messageId":"162","endLine":19,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":47,"column":7,"nodeType":"166","endLine":47,"endColumn":17,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":106,"column":25,"nodeType":"170","endLine":106,"endColumn":34},{"ruleId":"153","replacedBy":"171"},{"ruleId":"155","replacedBy":"172"},{"ruleId":"164","severity":1,"message":"173","line":42,"column":7,"nodeType":"166","endLine":42,"endColumn":9,"suggestions":"174"},{"ruleId":"159","severity":1,"message":"175","line":14,"column":25,"nodeType":"161","messageId":"162","endLine":14,"endColumn":42},{"ruleId":"159","severity":1,"message":"176","line":17,"column":28,"nodeType":"161","messageId":"162","endLine":17,"endColumn":46},{"ruleId":"177","severity":1,"message":"178","line":124,"column":38,"nodeType":"179","messageId":"180","endLine":124,"endColumn":40},{"ruleId":"177","severity":1,"message":"178","line":124,"column":76,"nodeType":"179","messageId":"180","endLine":124,"endColumn":78},{"ruleId":"177","severity":1,"message":"178","line":148,"column":45,"nodeType":"179","messageId":"180","endLine":148,"endColumn":47},{"ruleId":"164","severity":1,"message":"181","line":167,"column":7,"nodeType":"166","endLine":167,"endColumn":18,"suggestions":"182"},{"ruleId":"177","severity":1,"message":"178","line":188,"column":29,"nodeType":"179","messageId":"180","endLine":188,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":193,"column":39,"nodeType":"179","messageId":"180","endLine":193,"endColumn":41},{"ruleId":"164","severity":1,"message":"183","line":208,"column":7,"nodeType":"166","endLine":208,"endColumn":9,"suggestions":"184"},{"ruleId":"159","severity":1,"message":"176","line":11,"column":28,"nodeType":"161","messageId":"162","endLine":11,"endColumn":46},{"ruleId":"177","severity":1,"message":"178","line":75,"column":35,"nodeType":"179","messageId":"180","endLine":75,"endColumn":37},{"ruleId":"177","severity":1,"message":"178","line":79,"column":38,"nodeType":"179","messageId":"180","endLine":79,"endColumn":40},{"ruleId":"177","severity":1,"message":"178","line":92,"column":35,"nodeType":"179","messageId":"180","endLine":92,"endColumn":37},{"ruleId":"177","severity":1,"message":"178","line":96,"column":40,"nodeType":"179","messageId":"180","endLine":96,"endColumn":42},{"ruleId":"177","severity":1,"message":"178","line":30,"column":36,"nodeType":"179","messageId":"180","endLine":30,"endColumn":38},{"ruleId":"164","severity":1,"message":"185","line":107,"column":3,"nodeType":"166","endLine":107,"endColumn":5,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":116,"column":18,"nodeType":"189","endLine":116,"endColumn":73},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],["190"],["191"],"no-unused-vars","'Cookies' is defined but never used.","Identifier","unusedVar","'usedCityName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'queryEvents'. Either include it or remove the dependency array.","ArrayExpression",["192"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["190"],["191"],"React Hook useEffect has a missing dependency: 'queryMyEvents'. Either include it or remove the dependency array.",["193"],"'setMyEventDetails' is assigned a value but never used.","'setMyEventsColumns' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dataCallback', 'eventDetails.is_ended', 'handleAccept', 'handleReject', and 'handleStars'. Either include them or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'props.location.params' and 'queryMyVolunteers'. Either include them or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'props.props.vol.id'. Either include it or remove the dependency array.",["196"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [queryEvents, usedCity]",{"range":"207","text":"208"},"Update the dependencies array to be: [queryMyEvents]",{"range":"209","text":"210"},"Update the dependencies array to be: [dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",{"range":"211","text":"212"},"Update the dependencies array to be: [props.location.params, queryMyVolunteers]",{"range":"213","text":"214"},"Update the dependencies array to be: [props.props.vol.id]",{"range":"215","text":"216"},[1655,1665],"[queryEvents, usedCity]",[1114,1116],"[queryMyEvents]",[5615,5626],"[dataCallback, eventDetails.is_ended, handleAccept, handleReject, handleStars, starRates]",[6698,6700],"[props.location.params, queryMyVolunteers]",[3190,3192],"[props.props.vol.id]"]